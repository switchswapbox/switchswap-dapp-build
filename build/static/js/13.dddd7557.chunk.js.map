{"version":3,"sources":["components/Block.tsx","utils/formatNumber.ts","components/_dashboard/nftMinting/UploadMultiFile.tsx","components/_dashboard/nftMinting/MintingProcess.tsx","components/_dashboard/nftMinting/DemoNft.tsx","pages/NftMinting.tsx"],"names":["Block","title","sx","children","Card","overflow","position","width","CardHeader","Box","p","minHeight","fData","number","numeral","format","DropZoneStyle","styled","theme","outline","display","textAlign","alignItems","flexDirection","justifyContent","padding","spacing","borderRadius","shape","backgroundColor","palette","background","neutral","border","grey","opacity","cursor","breakpoints","up","UploadMultiFile","error","showPreview","files","onRemove","onRemoveAll","other","hasFile","length","useDropzone","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","variant","py","px","mt","borderColor","bgcolor","alpha","main","map","file","errors","path","size","my","Typography","noWrap","e","component","message","code","color","ml","md","gutterBottom","textDecoration","List","disablePadding","AnimatePresence","key","name","preview","getFileData","ListItem","motion","div","varFadeInRight","m","height","src","isString","objectFit","top","right","onClick","icon","closeFill","divider","ListItemIcon","fileFill","ListItemText","primary","secondary","primaryTypographyProps","secondaryTypographyProps","ListItemSecondaryAction","edge","Stack","direction","Button","mr","steps","MintingProcess","useState","activeStep","setActiveStep","Set","skipped","setSkipped","setPreview","setFiles","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleDropMultiFile","useCallback","acceptedFiles","Object","assign","URL","createObjectURL","Scrollbar","Stepper","alternativeLabel","label","index","stepProps","completed","Step","StepLabel","flexGrow","FormControlLabel","control","Switch","checked","onChange","event","target","onDrop","filteredItems","filter","_file","disabled","CarouselImgStyle","CarouselItem","item","image","alt","DemoNft","NFT","useTheme","settings","speed","dots","arrows","autoplay","slidesToShow","slidesToScroll","rtl","Boolean","CarouselControlsPaging1","withAuthorRegNFT","simplifiedNFT","ListWrapperStyle","NftMinting","themeStretch","useSettings","toggle","setToggle","handleToggle","value","currentIndex","indexOf","Page","Container","maxWidth","Grid","container","xs","subheader","ListSubheader","ListItemButton","id","inputProps","SvgIcon","pr"],"mappings":"4YA0BO,SAASA,EAAT,GAAqD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,SACjC,OACE,eAACC,EAAA,EAAD,CAAMF,GAAI,CAAEG,SAAU,QAASC,SAAU,QAASC,MAAO,QAAzD,UACGN,GAAS,cAACO,EAAA,EAAD,CAAYP,MAAOA,IAC7B,cAACQ,EAAA,EAAD,CACEP,GAAE,aACAQ,EAAG,EACHC,UAAW,KACRT,GAJP,SAOGC,O,6LChBF,SAASS,EAAMC,GACpB,OAAOC,IAAQD,GAAQE,OAAO,S,8FCQ1BC,EAAgBC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,oBAClCC,QAAS,OACTC,QAAS,OACTC,UAAW,SACXC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBC,QAASP,EAAMQ,QAAQ,EAAG,GAC1BC,aAAcT,EAAMU,MAAMD,aAC1BE,gBAAiBX,EAAMY,QAAQC,WAAWC,QAC1CC,OAAO,cAAD,OAAgBf,EAAMY,QAAQI,KAAK,QACzC,UAAW,CAAEC,QAAS,IAAMC,OAAQ,YACnClB,EAAMmB,YAAYC,GAAG,MAAQ,CAAEjB,UAAW,OAAQE,cAAe,WAgCrD,SAASgB,GAAT,GAQW,IAPxBC,EAOuB,EAPvBA,MAOuB,IANvBC,mBAMuB,SALvBC,EAKuB,EALvBA,MACAC,EAIuB,EAJvBA,SACAC,EAGuB,EAHvBA,YACA1C,EAEuB,EAFvBA,GACG2C,EACoB,iBACjBC,EAAUJ,EAAMK,OAAS,EAE/B,EAAoFC,YAAY,eAC3FH,IADGI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAAcC,EAAnD,EAAmDA,aAAcC,EAAjE,EAAiEA,eAI3DC,EAAqB,kBACzB,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRtD,GAAI,CACFuD,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,YAAa,cACbC,QAAS,SAAC3C,GAAD,OAAW4C,YAAM5C,EAAMY,QAAQU,MAAMuB,KAAM,OAPxD,SAUGV,EAAeW,KAAI,YAAuB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnBC,EAA2BF,EAA3BE,KAAMC,EAAqBH,EAArBG,KACd,OACE,eAAC3D,EAAA,EAAD,CAAgBP,GAAI,CAAEmE,GAAI,GAA1B,UACE,eAACC,EAAA,EAAD,CAAYd,QAAQ,YAAYe,QAAM,EAAtC,UACGJ,EADH,MACYvD,EAAMwD,MAEjBF,EAAOF,KAAI,SAACQ,GAAD,OACV,eAACF,EAAA,EAAD,CAAyBd,QAAQ,UAAUiB,UAAU,IAArD,eACKD,EAAEE,UADUF,EAAEG,WALbR,SAelB,OACE,eAAC1D,EAAA,EAAD,CAAKP,GAAE,aAAIK,MAAO,QAAWL,GAA7B,UACE,eAACc,EAAD,2BACMiC,KADN,IAEE/C,GAAE,2BACIiD,GAAgB,CAAEhB,QAAS,OAC1BiB,GAAgBZ,IAAU,CAC7BoC,MAAO,aACPhB,YAAa,cACbC,QAAS,kBAPf,UAWE,qCAAWX,MAEX,cAAC,IAAD,CAAoBhD,GAAI,CAAEK,MAAO,OAEjC,eAACE,EAAA,EAAD,CAAKP,GAAI,CAAEQ,EAAG,EAAGmE,GAAI,CAAEC,GAAI,IAA3B,UACE,cAACR,EAAA,EAAD,CAAYS,cAAY,EAACvB,QAAQ,KAAjC,iCAIA,eAACc,EAAA,EAAD,CAAYd,QAAQ,QAAQtD,GAAI,CAAE0E,MAAO,kBAAzC,yCAEE,cAACN,EAAA,EAAD,CACEd,QAAQ,QACRiB,UAAU,OACVvE,GAAI,CAAE0E,MAAO,eAAgBI,eAAgB,aAH/C,oBAFF,sCAcH3B,EAAeN,OAAS,GAAK,cAACO,EAAD,IAE9B,cAAC2B,EAAA,EAAD,CAAMC,gBAAc,EAAChF,GAAE,eAAQ4C,GAAW,CAAEuB,GAAI,IAAhD,SACE,cAACc,EAAA,EAAD,UACGzC,EAAMsB,KAAI,SAACC,GACV,MAlGQ,SAACA,GACnB,MAAoB,kBAATA,EACF,CACLmB,IAAKnB,GAGF,CACLmB,IAAKnB,EAAKoB,KACVA,KAAMpB,EAAKoB,KACXjB,KAAMH,EAAKG,KACXkB,QAASrB,EAAKqB,SAwF+BC,CAAYtB,GAAzCmB,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KAAMjB,EAAnB,EAAmBA,KAAMkB,EAAzB,EAAyBA,QAEzB,OAAI7C,EAEA,eAAC+C,EAAA,EAAD,yBAEEf,UAAWgB,IAAOC,KACdC,KAHN,IAIEzF,GAAI,CACFQ,EAAG,EACHkF,EAAG,GACHrF,MAAO,GACPsF,OAAQ,GACRlE,aAAc,IACdtB,SAAU,SACVC,SAAU,WACVc,QAAS,eAZb,UAeE,cAACmC,EAAA,EAAD,CACEC,QAAQ,WACRiB,UAAU,MACVqB,IAAKC,mBAAS9B,GAAQA,EAAOqB,EAC7BpF,GAAI,CAAEK,MAAO,OAAQsF,OAAQ,OAAQG,UAAW,QAAS1F,SAAU,cAErE,cAACG,EAAA,EAAD,CAAKP,GAAI,CAAE+F,IAAK,EAAGC,MAAO,EAAG5F,SAAU,YAAvC,SACE,cAAC,IAAD,CACE8D,KAAK,QACL+B,QAAS,kBAAMxD,EAASsB,IACxB/D,GAAI,CACFQ,EAAG,MACHkE,MAAO,eACPf,QAAS,SAAC3C,GAAD,OAAW4C,YAAM5C,EAAMY,QAAQI,KAAK,KAAM,MACnD,UAAW,CACT2B,QAAS,SAAC3C,GAAD,OAAW4C,YAAM5C,EAAMY,QAAQI,KAAK,KAAM,QARzD,SAYE,cAAC,IAAD,CAAMkE,KAAMC,aAjCXjB,GAyCT,eAACI,EAAA,EAAD,yBAEEf,UAAWgB,IAAOC,KACdC,KAHN,IAIEzF,GAAI,CACFmE,GAAI,EACJZ,GAAI,IACJC,GAAI,EACJ/B,aAAc,EACdM,OAAQ,SAACf,GAAD,0BAAwBA,EAAMY,QAAQwE,UAC9CzC,QAAS,oBAVb,UAaE,cAAC0C,EAAA,EAAD,UACE,cAAC,IAAD,CAAMH,KAAMI,IAAUjG,MAAO,GAAIsF,OAAQ,OAE3C,cAACY,EAAA,EAAD,CACEC,QAASX,mBAAS9B,GAAQA,EAAOoB,EACjCsB,UAAWZ,mBAAS9B,GAAQ,GAAKrD,EAAMwD,GAAQ,GAC/CwC,uBAAwB,CAAEpD,QAAS,aACnCqD,yBAA0B,CAAErD,QAAS,aAEvC,cAACsD,EAAA,EAAD,UACE,cAAC,IAAD,CAAaC,KAAK,MAAM3C,KAAK,QAAQ+B,QAAS,kBAAMxD,EAASsB,IAA7D,SACE,cAAC,IAAD,CAAMmC,KAAMC,aAvBXjB,UAgCdtC,GACC,eAACkE,EAAA,EAAD,CAAOC,UAAU,MAAMzF,eAAe,WAAtC,UACE,cAAC0F,EAAA,EAAD,CAAQf,QAASvD,EAAa1C,GAAI,CAAEiH,GAAI,KAAxC,wBAGA,cAACD,EAAA,EAAD,CAAQ1D,QAAQ,YAAhB,gCC7NV,IAAM4D,GAAQ,CAAC,cAAe,qBAAsB,cAAe,YAEpD,SAASC,KACtB,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAAS,IAAIG,KAA3C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOhC,EAAP,KAAgBsC,EAAhB,KACA,EAA0BN,mBAA4B,IAAtD,mBAAO5E,EAAP,KAAcmF,EAAd,KAEMC,EAAiB,SAACC,GAAD,OAA2B,IAATA,GAEnCC,EAAgB,SAACD,GAAD,OAAkBL,EAAQO,IAAIF,IAE9CG,EAAa,WACjB,IAAIC,EAAaT,EACbM,EAAcT,KAChBY,EAAa,IAAIV,IAAIU,EAAWC,WACrBC,OAAOd,GAGpBC,GAAc,SAACc,GAAD,OAAoBA,EAAiB,KACnDX,EAAWQ,IAGPI,EAAa,WACjBf,GAAc,SAACc,GAAD,OAAoBA,EAAiB,MAG/CE,EAAa,WACjB,IAAKV,EAAeP,GAGlB,MAAM,IAAIkB,MAAM,8CAGlBjB,GAAc,SAACc,GAAD,OAAoBA,EAAiB,KACnDX,GAAW,SAACe,GACV,IAAMP,EAAa,IAAIV,IAAIiB,EAAYN,UAEvC,OADAD,EAAWQ,IAAIpB,GACRY,MAQLS,EAAsBC,uBAC1B,SAACC,GACCjB,EACEiB,EAAc9E,KAAI,SAACC,GAAD,OAChB8E,OAAOC,OAAO/E,EAAM,CAClBqB,QAAS2D,IAAIC,gBAAgBjF,WAKrC,CAAC4D,IAYH,OACE,qCACE,cAACsB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAS7B,WAAYA,EAAY8B,kBAAgB,EAAjD,SACGjC,GAAMpD,KAAI,SAACsF,EAAOC,GACjB,IAAMC,EAAqC,GAQ3C,OAHIxB,EAAcuB,KAChBC,EAAUC,WAAY,GAGtB,cAACC,EAAA,EAAD,2BAAsBF,GAAtB,aACE,cAACG,EAAA,EAAD,2BAPA,IAOA,aAA4BL,OADnBA,UAOlB/B,IAAeH,GAAMrE,OACpB,qCACE,cAACQ,EAAA,EAAD,CAAOrD,GAAI,CAAEQ,EAAG,EAAG2D,GAAI,EAAG1D,UAAW,IAAKkD,QAAS,cAAnD,SACE,cAACS,EAAA,EAAD,CAAYpE,GAAI,CAAEmE,GAAI,GAAtB,qDAGF,eAAC5D,EAAA,EAAD,CAAKP,GAAI,CAAEkB,QAAS,QAApB,UACE,cAACX,EAAA,EAAD,CAAKP,GAAI,CAAE0J,SAAU,KACrB,cAAC1C,EAAA,EAAD,CAAQf,QAvDE,WAClBqB,EAAc,IAsDN,yBAIJ,6BAEc,IAAfD,EACC,qCACE,eAAC9G,EAAA,EAAD,CAAKP,GAAI,CAAEkB,QAAS,OAAQuC,GAAI,GAAhC,UACE,cAACW,EAAA,EAAD,CAAYd,QAAQ,KAApB,0CACA,cAAC/C,EAAA,EAAD,CAAKP,GAAI,CAAE0J,SAAU,KACrB,cAACC,EAAA,EAAD,CACE3J,GAAI,CAAE0F,EAAG,GACTkE,QACE,cAACC,EAAA,EAAD,CAAQC,QAAS1E,EAAS2E,SAAU,SAACC,GAAD,OAAWtC,EAAWsC,EAAMC,OAAOH,YAEzEV,MAAM,oBAGV,cAAC/G,GAAD,CACEE,YAAa6C,EACb5C,MAAOA,EACP0H,OAAQxB,EACRjG,SAzDW,SAACsB,GACpB,IAAMoG,EAAgB3H,EAAM4H,QAAO,SAACC,GAAD,OAAWA,IAAUtG,KACxD4D,EAASwC,IAwDDzH,YA9Dc,WACtBiF,EAAS,OA+DH,eAACpH,EAAA,EAAD,CAAKP,GAAI,CAAEkB,QAAS,OAAQuC,GAAI,GAAhC,UACE,cAACuD,EAAA,EAAD,CAAQtC,MAAM,UAAU4F,SAAyB,IAAfjD,EAAkBpB,QAASoC,EAAYrI,GAAI,CAAEiH,GAAI,GAAnF,kBAGA,cAAC1G,EAAA,EAAD,CAAKP,GAAI,CAAE0J,SAAU,KACrB,cAAC1C,EAAA,EAAD,CAAQ1D,QAAQ,YAAY2C,QAAS+B,EAArC,SACGX,IAAeH,GAAMrE,OAAS,EAAI,SAAW,eAKpD,6BAEc,IAAfwE,EACC,qCACE,cAAChE,EAAA,EAAD,CAAOrD,GAAI,CAAEQ,EAAG,EAAG2D,GAAI,EAAG1D,UAAW,IAAKkD,QAAS,cAAnD,SACE,eAACS,EAAA,EAAD,CAAYpE,GAAI,CAAEmE,GAAI,GAAtB,mBAAkCkD,EAAa,OAEjD,eAAC9G,EAAA,EAAD,CAAKP,GAAI,CAAEkB,QAAS,QAApB,UACE,cAAC8F,EAAA,EAAD,CAAQtC,MAAM,UAAUuB,QAASoC,EAAYrI,GAAI,CAAEiH,GAAI,GAAvD,kBAGA,cAAC1G,EAAA,EAAD,CAAKP,GAAI,CAAE0J,SAAU,KACpB9B,EAAeP,IACd,cAACL,EAAA,EAAD,CAAQtC,MAAM,UAAUuB,QAASqC,EAAYtI,GAAI,CAAEiH,GAAI,GAAvD,kBAIF,cAACD,EAAA,EAAD,CAAQ1D,QAAQ,YAAY2C,QAAS+B,EAArC,SACGX,IAAeH,GAAMrE,OAAS,EAAI,SAAW,eAKpD,6BAEc,IAAfwE,EACC,qCACE,cAAChE,EAAA,EAAD,CAAOrD,GAAI,CAAEQ,EAAG,EAAG2D,GAAI,EAAG1D,UAAW,IAAKkD,QAAS,cAAnD,SACE,eAACS,EAAA,EAAD,CAAYpE,GAAI,CAAEmE,GAAI,GAAtB,mBAAkCkD,EAAa,OAEjD,eAAC9G,EAAA,EAAD,CAAKP,GAAI,CAAEkB,QAAS,QAApB,UACE,cAAC8F,EAAA,EAAD,CAAQtC,MAAM,UAAUuB,QAASoC,EAAYrI,GAAI,CAAEiH,GAAI,GAAvD,kBAGA,cAAC1G,EAAA,EAAD,CAAKP,GAAI,CAAE0J,SAAU,KACpB9B,EAAeP,IACd,cAACL,EAAA,EAAD,CAAQtC,MAAM,UAAUuB,QAASqC,EAAYtI,GAAI,CAAEiH,GAAI,GAAvD,kBAIF,cAACD,EAAA,EAAD,CAAQ1D,QAAQ,YAAY2C,QAAS+B,EAArC,SACGX,IAAeH,GAAMrE,OAAS,EAAI,SAAW,eAKpD,6BAEc,IAAfwE,EACC,qCACE,cAAChE,EAAA,EAAD,CAAOrD,GAAI,CAAEQ,EAAG,EAAG2D,GAAI,EAAG1D,UAAW,IAAKkD,QAAS,cAAnD,SACE,eAACS,EAAA,EAAD,CAAYpE,GAAI,CAAEmE,GAAI,GAAtB,mBAAkCkD,EAAa,OAEjD,eAAC9G,EAAA,EAAD,CAAKP,GAAI,CAAEkB,QAAS,QAApB,UACE,cAAC8F,EAAA,EAAD,CAAQtC,MAAM,UAAUuB,QAASoC,EAAYrI,GAAI,CAAEiH,GAAI,GAAvD,kBAGA,cAAC1G,EAAA,EAAD,CAAKP,GAAI,CAAE0J,SAAU,KACpB9B,EAAeP,IACd,cAACL,EAAA,EAAD,CAAQtC,MAAM,UAAUuB,QAASqC,EAAYtI,GAAI,CAAEiH,GAAI,GAAvD,kBAIF,cAACD,EAAA,EAAD,CAAQ1D,QAAQ,YAAY2C,QAAS+B,EAArC,SACGX,IAAeH,GAAMrE,OAAS,EAAI,SAAW,eAKpD,gC,4CCzNF0H,GAAmBxJ,YAAO,MAAPA,EAAc,cAAGC,MAAH,MAAgB,CACrDX,MAAO,OACPyF,UAAW,YAiBb,SAAS0E,GAAT,GAAoD,IAA5BC,EAA2B,EAA3BA,KACdC,EAAgBD,EAAhBC,MAAOvF,EAASsF,EAATtF,KAEf,OACE,eAAC5E,EAAA,EAAD,CAAKP,GAAI,CAAEI,SAAU,YAArB,UACE,cAACmK,GAAD,CAAkBI,IAAKxF,EAAMS,IAAK8E,IAClC,cAACnK,EAAA,EAAD,CACEP,GAAI,CACF+F,IAAK,EACL1F,MAAO,OACPsF,OAAQ,OACRvF,SAAU,WACVuD,QAAS,oBAOJ,SAASiH,GAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,IAC1B7J,EAAQ8J,eAERC,EAAQ,aACZC,MAAO,IACPC,MAAM,EACNC,QAAQ,EACRC,UAAU,EACVC,aAAc,EACdC,eAAgB,EAChBC,IAAKC,QAA4B,QAApBvK,EAAM+F,YAChByE,aAAwB,CAAE9G,MAAO,kBAGtC,OACE,cAACxE,EAAA,EAAD,UACE,cAAC,KAAD,2BAAY6K,GAAZ,aACGF,EAAI/G,KAAI,SAAC2G,GAAD,OACP,cAACD,GAAD,CAA8BC,KAAMA,GAAjBA,EAAKtF,cCpClC,IAAMsG,GAAmB,CACvB,CAAEtG,KAAM,gBAAiBuF,MAAO,4CAChC,CAAEvF,KAAM,gBAAiBuF,MAAO,4CAChC,CAAEvF,KAAM,gBAAiBuF,MAAO,6CAE5BgB,GAAgB,CACpB,CAAEvG,KAAM,eAAgBuF,MAAO,yCAC/B,CAAEvF,KAAM,eAAgBuF,MAAO,yCAC/B,CAAEvF,KAAM,eAAgBuF,MAAO,0CAG3BiB,GAAmB5K,YAAOsC,IAAPtC,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACrDX,MAAO,OACP0B,OAAO,aAAD,OAAef,EAAMY,QAAQwE,aAGtB,SAASwF,KACtB,IAAQC,EAAiBC,cAAjBD,aACR,EAA4BzE,mBAAS,CAAC,kBAAtC,mBAAO2E,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAACC,GAAD,OAAmB,WACtC,IAAMC,EAAeJ,EAAOK,QAAQF,GAGlCF,GADoB,IAAlBG,EACQ,CAACD,GACQ,kBAAVA,EACC,CAAC,cAED,CAAC,oBAIf,OACE,cAACG,EAAA,EAAD,CAAMtM,MAAM,cAAZ,SACE,cAACuM,EAAA,EAAD,CAAWC,UAAUV,GAAuB,KAA5C,SACE,eAACW,EAAA,EAAD,CAAMC,WAAS,EAACjL,QAAS,EAAzB,UACE,cAACgL,EAAA,EAAD,CAAM/B,MAAI,EAACiC,GAAI,GAAI9H,GAAI,EAAvB,SACE,eAAC9E,EAAD,CAAOC,MAAM,oBAAb,UACE,cAAC4L,GAAD,UACE,cAAC5G,EAAA,EAAD,CAAM4H,UAAW,cAACC,EAAA,EAAD,yBAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACxG,EAAA,EAAD,UACE,cAAC9F,EAAA,EAAD,CACEgE,UAAU,MACVqB,IAAI,kCACJ5F,GAAI,CAAE2F,OAAQ,YAGlB,cAACY,EAAA,EAAD,CAAcuG,GAAG,aAAatG,QAAQ,YACtC,cAACI,EAAA,EAAD,UACE,cAACiD,EAAA,EAAD,CACEhD,KAAK,MACLiD,SAAS,EACTiD,WAAY,CACV,kBAAmB,yBAO/B,cAACpB,GAAD,CAAkB3L,GAAI,CAAEyD,GAAI,GAA5B,SACE,eAACsB,EAAA,EAAD,CAAM4H,UAAW,cAACC,EAAA,EAAD,uBAAjB,UACE,eAACC,EAAA,EAAD,WACE,cAACxG,EAAA,EAAD,UACE,cAAC2G,EAAA,EAAD,UACE,cAAC,IAAD,CAAM9G,KAAK,uBAGf,cAACK,EAAA,EAAD,CACEuG,GAAG,gBACHtG,QAAQ,2BACRxG,GAAI,CAAEiN,GAAI,KAEZ,cAACrG,EAAA,EAAD,UACE,cAACiD,EAAA,EAAD,CACEhD,KAAK,MACLkD,SAAUkC,EAAa,iBACvBnC,SAA8C,IAArCiC,EAAOK,QAAQ,iBACxBW,WAAY,CACV,kBAAmB,wBAK3B,eAACF,EAAA,EAAD,WACE,cAACxG,EAAA,EAAD,UACE,cAAC2G,EAAA,EAAD,UACE,cAAC,IAAD,CAAM9G,KAAK,gCAGf,cAACK,EAAA,EAAD,CAAcuG,GAAG,aAAatG,QAAQ,aAAaxG,GAAI,CAAEiN,GAAI,KAC7D,cAACrG,EAAA,EAAD,UACE,cAACiD,EAAA,EAAD,CACEhD,KAAK,MACLkD,SAAUkC,EAAa,cACvBnC,SAA2C,IAAlCiC,EAAOK,QAAQ,cACxBW,WAAY,CACV,kBAAmB,qBAK3B,eAACF,EAAA,EAAD,WACE,cAACxG,EAAA,EAAD,UACE,cAAC2G,EAAA,EAAD,UACE,cAAC,IAAD,CAAM9G,KAAK,8BAGf,cAACK,EAAA,EAAD,CAAcuG,GAAG,iBAAiBtG,QAAQ,mBAAmBxG,GAAI,CAAEiN,GAAI,KACvE,cAACrG,EAAA,EAAD,UACE,cAACiD,EAAA,EAAD,CACEhD,KAAK,MACLkD,SAAUkC,EAAa,kBACvBnC,SAA+C,IAAtCiC,EAAOK,QAAQ,kBACxBW,WAAY,CACV,kBAAmB,mCASnC,cAACP,EAAA,EAAD,CAAM/B,MAAI,EAACiC,GAAI,GAAI9H,GAAI,EAAvB,SACE,cAAC9E,EAAD,CAAOC,MAAM,wBAAb,SACE,eAACyM,EAAA,EAAD,CAAMC,WAAS,EAACjL,QAAS,EAAzB,UACE,cAACgL,EAAA,EAAD,CAAM/B,MAAI,EAACiC,GAAI,GAAI9H,GAAI,EAAvB,SACE,cAAC+G,GAAD,UACE,eAAC5G,EAAA,EAAD,CAAM4H,UAAW,cAACC,EAAA,EAAD,2BAAjB,UACE,eAACC,EAAA,EAAD,WACE,cAACxG,EAAA,EAAD,UACE,cAAC9F,EAAA,EAAD,CACEgE,UAAU,MACVqB,IAAI,qCACJ5F,GAAI,CAAE2F,OAAQ,YAGlB,cAACY,EAAA,EAAD,CAAcuG,GAAG,aAAatG,QAAQ,gBAExC,eAACqG,EAAA,EAAD,CACE7M,GAAI,CACFkB,SAA8C,IAArC6K,EAAOK,QAAQ,iBAA0B,OAAS,QAF/D,UAKE,cAAC/F,EAAA,EAAD,UACE,cAAC9F,EAAA,EAAD,CACEgE,UAAU,MACVqB,IAAI,kCACJ5F,GAAI,CAAE2F,OAAQ,YAGlB,cAACY,EAAA,EAAD,CAAcuG,GAAG,aAAatG,QAAQ,2BAK9C,eAACgG,EAAA,EAAD,CAAM/B,MAAI,EAACiC,GAAI,GAAI9H,GAAI,EAAvB,UACE,cAAC4H,EAAA,EAAD,CACExM,GAAI,CACFkB,SAA8C,IAArC6K,EAAOK,QAAQ,iBAA0B,QAAU,QAFhE,SAKE,cAACxB,GAAD,CAASC,IAAKY,OAGhB,cAACe,EAAA,EAAD,CACExM,GAAI,CACFkB,SAA2C,IAAlC6K,EAAOK,QAAQ,cAAuB,QAAU,QAF7D,SAKE,cAACxB,GAAD,CAASC,IAAKa,iBAMxB,cAACc,EAAA,EAAD,CAAM/B,MAAI,EAACiC,GAAI,GAAf,SACE,cAAC5M,EAAD,CAAOC,MAAM,eAAb,SACE,cAACoH,GAAD","file":"static/js/13.dddd7557.chunk.js","sourcesContent":["import { ReactNode } from 'react';\r\n// material\r\nimport { Theme } from '@mui/material/styles';\r\nimport { Card, CardHeader, Box, Typography } from '@mui/material';\r\nimport { SxProps } from '@mui/system';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype LabelProps = {\r\n  title: string;\r\n};\r\n\r\nexport function Label({ title }: LabelProps) {\r\n  return (\r\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype BlockProps = {\r\n  title?: string;\r\n  children: ReactNode;\r\n  sx?: SxProps<Theme>;\r\n};\r\n\r\nexport function Block({ title, sx, children }: BlockProps) {\r\n  return (\r\n    <Card sx={{ overflow: 'unset', position: 'unset', width: '100%' }}>\r\n      {title && <CardHeader title={title} />}\r\n      <Box\r\n        sx={{\r\n          p: 3,\r\n          minHeight: 180,\r\n          ...sx\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import { replace } from 'lodash';\r\nimport numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fCurrency(number: string | number) {\r\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\r\n}\r\n\r\nexport function fPercent(number: number) {\r\n  return numeral(number / 100).format('0.0%');\r\n}\r\n\r\nexport function fNumber(number: string | number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fShortenNumber(number: string | number) {\r\n  return replace(numeral(number).format('0.00a'), '.00', '');\r\n}\r\n\r\nexport function fData(number: string | number) {\r\n  return numeral(number).format('0.0 b');\r\n}\r\n","import { isString } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport { useDropzone, DropzoneOptions } from 'react-dropzone';\r\nimport fileFill from '@iconify/icons-eva/file-fill';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n// material\r\nimport { alpha, Theme, styled } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  List,\r\n  Stack,\r\n  Paper,\r\n  Button,\r\n  ListItem,\r\n  Typography,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction\r\n} from '@mui/material';\r\nimport { SxProps } from '@mui/system';\r\n// utils\r\nimport { fData } from '../../../utils/formatNumber';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport { varFadeInRight } from '../../animate';\r\nimport { UploadIllustration } from '../../../assets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DropZoneStyle = styled('div')(({ theme }) => ({\r\n  outline: 'none',\r\n  display: 'flex',\r\n  textAlign: 'center',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(5, 1),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.neutral,\r\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\r\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\r\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface CustomFile extends File {\r\n  path?: string;\r\n  preview?: string;\r\n}\r\n\r\ninterface UploadMultiFileProps extends DropzoneOptions {\r\n  error?: boolean;\r\n  files: (File | string)[];\r\n  showPreview: boolean;\r\n  onRemove: (file: File | string) => void;\r\n  onRemoveAll: VoidFunction;\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\nconst getFileData = (file: CustomFile | string) => {\r\n  if (typeof file === 'string') {\r\n    return {\r\n      key: file\r\n    };\r\n  }\r\n  return {\r\n    key: file.name,\r\n    name: file.name,\r\n    size: file.size,\r\n    preview: file.preview\r\n  };\r\n};\r\nexport default function UploadMultiFile({\r\n  error,\r\n  showPreview = false,\r\n  files,\r\n  onRemove,\r\n  onRemoveAll,\r\n  sx,\r\n  ...other\r\n}: UploadMultiFileProps) {\r\n  const hasFile = files.length > 0;\r\n\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\r\n    ...other\r\n  });\r\n\r\n  const ShowRejectionItems = () => (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        py: 1,\r\n        px: 2,\r\n        mt: 3,\r\n        borderColor: 'error.light',\r\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\r\n      }}\r\n    >\r\n      {fileRejections.map(({ file, errors }) => {\r\n        const { path, size }: CustomFile = file;\r\n        return (\r\n          <Box key={path} sx={{ my: 1 }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {path} - {fData(size)}\r\n            </Typography>\r\n            {errors.map((e) => (\r\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\r\n                - {e.message}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', ...sx }}>\r\n      <DropZoneStyle\r\n        {...getRootProps()}\r\n        sx={{\r\n          ...(isDragActive && { opacity: 0.72 }),\r\n          ...((isDragReject || error) && {\r\n            color: 'error.main',\r\n            borderColor: 'error.light',\r\n            bgcolor: 'error.lighter'\r\n          })\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n\r\n        <UploadIllustration sx={{ width: 220 }} />\r\n\r\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            Drop or Select file\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            Drop files here or click&nbsp;\r\n            <Typography\r\n              variant=\"body2\"\r\n              component=\"span\"\r\n              sx={{ color: 'primary.main', textDecoration: 'underline' }}\r\n            >\r\n              browse\r\n            </Typography>\r\n            &nbsp;thorough your machine\r\n          </Typography>\r\n        </Box>\r\n      </DropZoneStyle>\r\n\r\n      {fileRejections.length > 0 && <ShowRejectionItems />}\r\n\r\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\r\n        <AnimatePresence>\r\n          {files.map((file) => {\r\n            const { key, name, size, preview } = getFileData(file as CustomFile);\r\n\r\n            if (showPreview) {\r\n              return (\r\n                <ListItem\r\n                  key={key}\r\n                  component={motion.div}\r\n                  {...varFadeInRight}\r\n                  sx={{\r\n                    p: 0,\r\n                    m: 0.5,\r\n                    width: 80,\r\n                    height: 80,\r\n                    borderRadius: 1.5,\r\n                    overflow: 'hidden',\r\n                    position: 'relative',\r\n                    display: 'inline-flex'\r\n                  }}\r\n                >\r\n                  <Paper\r\n                    variant=\"outlined\"\r\n                    component=\"img\"\r\n                    src={isString(file) ? file : preview}\r\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\r\n                  />\r\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\r\n                    <MIconButton\r\n                      size=\"small\"\r\n                      onClick={() => onRemove(file)}\r\n                      sx={{\r\n                        p: '2px',\r\n                        color: 'common.white',\r\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\r\n                        '&:hover': {\r\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48)\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Icon icon={closeFill} />\r\n                    </MIconButton>\r\n                  </Box>\r\n                </ListItem>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <ListItem\r\n                key={key}\r\n                component={motion.div}\r\n                {...varFadeInRight}\r\n                sx={{\r\n                  my: 1,\r\n                  py: 0.75,\r\n                  px: 2,\r\n                  borderRadius: 1,\r\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\r\n                  bgcolor: 'background.paper'\r\n                }}\r\n              >\r\n                <ListItemIcon>\r\n                  <Icon icon={fileFill} width={28} height={28} />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={isString(file) ? file : name}\r\n                  secondary={isString(file) ? '' : fData(size || 0)}\r\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\r\n                  secondaryTypographyProps={{ variant: 'caption' }}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\r\n                    <Icon icon={closeFill} />\r\n                  </MIconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </AnimatePresence>\r\n      </List>\r\n\r\n      {hasFile && (\r\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\r\n            Remove all\r\n          </Button>\r\n          <Button variant=\"contained\">Upload files</Button>\r\n        </Stack>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n// material\r\nimport {\r\n  Box,\r\n  Card,\r\n  Step,\r\n  Paper,\r\n  Button,\r\n  Switch,\r\n  Stepper,\r\n  StepLabel,\r\n  CardContent,\r\n  Typography,\r\n  CardHeader,\r\n  FormControlLabel\r\n} from '@mui/material';\r\n\r\nimport Scrollbar from '../../Scrollbar';\r\nimport UploadMultiFile from './UploadMultiFile';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst steps = ['Upload File', 'Customize NFT Card', 'Upload Meta', 'Mint NFT'];\r\n\r\nexport default function MintingProcess() {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skipped, setSkipped] = useState(new Set<number>());\r\n  const [preview, setPreview] = useState(false);\r\n  const [files, setFiles] = useState<(File | string)[]>([]);\r\n\r\n  const isStepOptional = (step: number) => step === 1;\r\n\r\n  const isStepSkipped = (step: number) => skipped.has(step);\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  const handleDropMultiFile = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: File) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const handleRemoveAll = () => {\r\n    setFiles([]);\r\n  };\r\n\r\n  const handleRemove = (file: File | string) => {\r\n    const filteredItems = files.filter((_file) => _file !== file);\r\n    setFiles(filteredItems);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Scrollbar>\r\n        <Stepper activeStep={activeStep} alternativeLabel>\r\n          {steps.map((label, index) => {\r\n            const stepProps: { completed?: boolean } = {};\r\n            const labelProps: {\r\n              optional?: React.ReactNode;\r\n            } = {};\r\n\r\n            if (isStepSkipped(index)) {\r\n              stepProps.completed = false;\r\n            }\r\n            return (\r\n              <Step key={label} {...stepProps}>\r\n                <StepLabel {...labelProps}>{label}</StepLabel>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n      </Scrollbar>\r\n      {activeStep === steps.length ? (\r\n        <>\r\n          <Paper sx={{ p: 3, my: 3, minHeight: 120, bgcolor: 'grey.50012' }}>\r\n            <Typography sx={{ my: 1 }}>All steps completed - you&apos;re finished</Typography>\r\n          </Paper>\r\n\r\n          <Box sx={{ display: 'flex' }}>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {activeStep === 0 ? (\r\n        <>\r\n          <Box sx={{ display: 'flex', mt: 3 }}>\r\n            <Typography variant=\"h6\">Upload file to Crust Network</Typography>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            <FormControlLabel\r\n              sx={{ m: 0 }}\r\n              control={\r\n                <Switch checked={preview} onChange={(event) => setPreview(event.target.checked)} />\r\n              }\r\n              label=\"Show Preview\"\r\n            />\r\n          </Box>\r\n          <UploadMultiFile\r\n            showPreview={preview}\r\n            files={files}\r\n            onDrop={handleDropMultiFile}\r\n            onRemove={handleRemove}\r\n            onRemoveAll={handleRemoveAll}\r\n          />\r\n          <Box sx={{ display: 'flex', mt: 1 }}>\r\n            <Button color=\"inherit\" disabled={activeStep === 0} onClick={handleBack} sx={{ mr: 1 }}>\r\n              Back\r\n            </Button>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            <Button variant=\"contained\" onClick={handleNext}>\r\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {activeStep === 1 ? (\r\n        <>\r\n          <Paper sx={{ p: 3, my: 3, minHeight: 120, bgcolor: 'grey.50012' }}>\r\n            <Typography sx={{ my: 1 }}> Step {activeStep + 1}</Typography>\r\n          </Paper>\r\n          <Box sx={{ display: 'flex' }}>\r\n            <Button color=\"inherit\" onClick={handleBack} sx={{ mr: 1 }}>\r\n              Back\r\n            </Button>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            {isStepOptional(activeStep) && (\r\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\r\n                Skip\r\n              </Button>\r\n            )}\r\n            <Button variant=\"contained\" onClick={handleNext}>\r\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {activeStep === 2 ? (\r\n        <>\r\n          <Paper sx={{ p: 3, my: 3, minHeight: 120, bgcolor: 'grey.50012' }}>\r\n            <Typography sx={{ my: 1 }}> Step {activeStep + 1}</Typography>\r\n          </Paper>\r\n          <Box sx={{ display: 'flex' }}>\r\n            <Button color=\"inherit\" onClick={handleBack} sx={{ mr: 1 }}>\r\n              Back\r\n            </Button>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            {isStepOptional(activeStep) && (\r\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\r\n                Skip\r\n              </Button>\r\n            )}\r\n            <Button variant=\"contained\" onClick={handleNext}>\r\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {activeStep === 3 ? (\r\n        <>\r\n          <Paper sx={{ p: 3, my: 3, minHeight: 120, bgcolor: 'grey.50012' }}>\r\n            <Typography sx={{ my: 1 }}> Step {activeStep + 1}</Typography>\r\n          </Paper>\r\n          <Box sx={{ display: 'flex' }}>\r\n            <Button color=\"inherit\" onClick={handleBack} sx={{ mr: 1 }}>\r\n              Back\r\n            </Button>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            {isStepOptional(activeStep) && (\r\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\r\n                Skip\r\n              </Button>\r\n            )}\r\n            <Button variant=\"contained\" onClick={handleNext}>\r\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\n\r\n// material\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Box, Card } from '@mui/material';\r\n\r\nimport { CarouselControlsPaging1 } from '../../carousel';\r\n\r\nconst CarouselImgStyle = styled('img')(({ theme }) => ({\r\n  width: '100%',\r\n  objectFit: 'cover'\r\n}));\r\n\r\ntype CarouselItemProps = {\r\n  item: {\r\n    image: string;\r\n    name: string;\r\n  };\r\n};\r\n\r\ntype NftProps = {\r\n  NFT: {\r\n    name: string;\r\n    image: string;\r\n  }[];\r\n};\r\n\r\nfunction CarouselItem({ item }: CarouselItemProps) {\r\n  const { image, name } = item;\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative' }}>\r\n      <CarouselImgStyle alt={name} src={image} />\r\n      <Box\r\n        sx={{\r\n          top: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          position: 'absolute',\r\n          bgcolor: 'transparent'\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function DemoNft({ NFT }: NftProps) {\r\n  const theme = useTheme();\r\n\r\n  const settings = {\r\n    speed: 1000,\r\n    dots: true,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    ...CarouselControlsPaging1({ color: 'primary.main' })\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider {...settings}>\r\n        {NFT.map((item) => (\r\n          <CarouselItem key={item.name} item={item} />\r\n        ))}\r\n      </Slider>\r\n    </Card>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// material\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Box,\r\n  SvgIcon,\r\n  Grid,\r\n  List,\r\n  Switch,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n  ListItemSecondaryAction\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport { Icon } from '@iconify/react';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from '../components/Page';\r\nimport { Block } from '../components/Block';\r\nimport MintingProcess from '../components/_dashboard/nftMinting/MintingProcess';\r\nimport DemoNft from '../components/_dashboard/nftMinting/DemoNft';\r\n// ----------------------------------------------------------------------\r\n\r\nconst withAuthorRegNFT = [\r\n  { name: 'With Author 1', image: './static/sample-nft/withAuthorReg/01.jpg' },\r\n  { name: 'With Author 2', image: './static/sample-nft/withAuthorReg/02.jpg' },\r\n  { name: 'With Author 3', image: './static/sample-nft/withAuthorReg/03.jpg' }\r\n];\r\nconst simplifiedNFT = [\r\n  { name: 'Simplified 1', image: './static/sample-nft/simplified/07.jpg' },\r\n  { name: 'Simplified 3', image: './static/sample-nft/simplified/01.png' },\r\n  { name: 'Simplified 2', image: './static/sample-nft/simplified/05.jpg' }\r\n];\r\n\r\nconst ListWrapperStyle = styled(Paper)(({ theme }) => ({\r\n  width: '100%',\r\n  border: `solid 1px ${theme.palette.divider}`\r\n}));\r\n\r\nexport default function NftMinting() {\r\n  const { themeStretch } = useSettings();\r\n  const [toggle, setToggle] = useState(['withAuthorReg']);\r\n\r\n  const handleToggle = (value: string) => () => {\r\n    const currentIndex = toggle.indexOf(value);\r\n\r\n    if (currentIndex === -1) {\r\n      setToggle([value]);\r\n    } else if (value === 'withAuthorReg') {\r\n      setToggle(['simplified']);\r\n    } else {\r\n      setToggle(['withAuthorReg']);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page title=\"NFT Minting\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <Block title=\"NFT Configuration\">\r\n              <ListWrapperStyle>\r\n                <List subheader={<ListSubheader>Blockchain</ListSubheader>}>\r\n                  <ListItemButton>\r\n                    <ListItemIcon>\r\n                      <Box\r\n                        component=\"img\"\r\n                        src=\"./static/icons/shared/matic.svg\"\r\n                        sx={{ height: '24px' }}\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText id=\"blockchain\" primary=\"Polygon\" />\r\n                    <ListItemSecondaryAction>\r\n                      <Switch\r\n                        edge=\"end\"\r\n                        checked={true}\r\n                        inputProps={{\r\n                          'aria-labelledby': 'blockchain'\r\n                        }}\r\n                      />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItemButton>\r\n                </List>\r\n              </ListWrapperStyle>\r\n              <ListWrapperStyle sx={{ mt: 3 }}>\r\n                <List subheader={<ListSubheader>NFT Type</ListSubheader>}>\r\n                  <ListItemButton>\r\n                    <ListItemIcon>\r\n                      <SvgIcon>\r\n                        <Icon icon=\"fxemoji:rocket\" />\r\n                      </SvgIcon>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      id=\"withAuthorReg\"\r\n                      primary=\"With Author Registration\"\r\n                      sx={{ pr: 5 }}\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <Switch\r\n                        edge=\"end\"\r\n                        onChange={handleToggle('withAuthorReg')}\r\n                        checked={toggle.indexOf('withAuthorReg') !== -1}\r\n                        inputProps={{\r\n                          'aria-labelledby': 'withAuthorReg'\r\n                        }}\r\n                      />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItemButton>\r\n                  <ListItemButton>\r\n                    <ListItemIcon>\r\n                      <SvgIcon>\r\n                        <Icon icon=\"emojione:small-airplane\" />\r\n                      </SvgIcon>\r\n                    </ListItemIcon>\r\n                    <ListItemText id=\"simplified\" primary=\"Simplified\" sx={{ pr: 5 }} />\r\n                    <ListItemSecondaryAction>\r\n                      <Switch\r\n                        edge=\"end\"\r\n                        onChange={handleToggle('simplified')}\r\n                        checked={toggle.indexOf('simplified') !== -1}\r\n                        inputProps={{\r\n                          'aria-labelledby': 'simplified'\r\n                        }}\r\n                      />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItemButton>\r\n                  <ListItemButton>\r\n                    <ListItemIcon>\r\n                      <SvgIcon>\r\n                        <Icon icon=\"emojione:bullet-train\" />\r\n                      </SvgIcon>\r\n                    </ListItemIcon>\r\n                    <ListItemText id=\"withoutNftCard\" primary=\"Without NFT Card\" sx={{ pr: 5 }} />\r\n                    <ListItemSecondaryAction>\r\n                      <Switch\r\n                        edge=\"end\"\r\n                        onChange={handleToggle('withoutNftCard')}\r\n                        checked={toggle.indexOf('withoutNftCard') !== -1}\r\n                        inputProps={{\r\n                          'aria-labelledby': 'withoutNftCard'\r\n                        }}\r\n                      />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItemButton>\r\n                </List>\r\n              </ListWrapperStyle>\r\n            </Block>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Block title=\"Requirements & Review\">\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={4}>\r\n                  <ListWrapperStyle>\r\n                    <List subheader={<ListSubheader>Requirements</ListSubheader>}>\r\n                      <ListItemButton>\r\n                        <ListItemIcon>\r\n                          <Box\r\n                            component=\"img\"\r\n                            src=\"./static/icons/shared/metamask.svg\"\r\n                            sx={{ height: '24px' }}\r\n                          />\r\n                        </ListItemIcon>\r\n                        <ListItemText id=\"blockchain\" primary=\"Metamask\" />\r\n                      </ListItemButton>\r\n                      <ListItemButton\r\n                        sx={{\r\n                          display: toggle.indexOf('withAuthorReg') !== -1 ? 'flex' : 'none'\r\n                        }}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <Box\r\n                            component=\"img\"\r\n                            src=\"./static/icons/shared/crust.svg\"\r\n                            sx={{ height: '24px' }}\r\n                          />\r\n                        </ListItemIcon>\r\n                        <ListItemText id=\"blockchain\" primary=\"Crust Wallet\" />\r\n                      </ListItemButton>\r\n                    </List>\r\n                  </ListWrapperStyle>\r\n                </Grid>\r\n                <Grid item xs={12} md={8}>\r\n                  <Grid\r\n                    sx={{\r\n                      display: toggle.indexOf('withAuthorReg') !== -1 ? 'block' : 'none'\r\n                    }}\r\n                  >\r\n                    <DemoNft NFT={withAuthorRegNFT} />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    sx={{\r\n                      display: toggle.indexOf('simplified') !== -1 ? 'block' : 'none'\r\n                    }}\r\n                  >\r\n                    <DemoNft NFT={simplifiedNFT} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Block>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Block title=\"Generate NFT\">\r\n              <MintingProcess />\r\n            </Block>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}