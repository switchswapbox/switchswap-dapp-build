{"version":3,"sources":["pages/NftManager.tsx","components/Page.tsx","utils/contractAddress.ts","utils/abi.ts"],"names":["NftCard","tokenId","imageUrl","tokenURI","name","nftContract","theme","useTheme","elevation","sx","borderRadius","bgcolor","transition","transform","spacing","p","position","component","src","top","width","height","objectFit","pt","pb","direction","alignItems","justifyContent","color","underline","variant","noWrap","icon","title","pl","href","target","rel","NftManager","themeStretch","useSettings","useState","NftList","setNftList","page","setPage","pageCount","setPageCount","selectedMetamaskAccount","localStorage","getItem","ipfsUriToCid","ipfsUrl","CidSearch","match","updateListByTokenIndex","index","contract","a","tokenOfOwnerByIndex","toString","tokenURICid","tokenURIHttp","IPFS_GATEWAY_FOR_FETCHING_DATA","axios","get","then","response","data","image","imageCid","addingNftIndex","length","nftIndex","parseInt","slice","getNftByPage","ethers","utils","isAddress","provider","providers","JsonRpcProvider","Contract","contractAddress","ABI","balanceOf","NftBalance","stopIndex","NUMBER_OF_NFT_IN_MANAGER_PAGE","useEffect","Math","ceil","getPageCount","useMeasure","ref","lgCol","setLgCol","breakpoints","values","lg","maxWidth","container","map","nft","item","xs","sm","md","count","onChange","event","value","Page","forwardRef","children","other","inputs","stateMutability","type","anonymous","indexed","internalType","outputs"],"mappings":"ubAyCA,SAASA,EAAT,GAAoF,IAAjEC,EAAgE,EAAhEA,QAAmBC,GAA6C,EAAvDC,SAAuD,EAA7CD,UAAUE,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAC9CC,EAAQC,cACd,OACE,eAAC,IAAD,CACEC,UAAW,EACXC,GAAI,CACFC,aAAc,EACdC,QAAS,QACTC,WAAY,sBACZ,UAAW,CACTC,UAAU,eAAD,OAAiBP,EAAMQ,QAAQ,EAAI,GAAnC,OAPf,UAWE,cAAC,IAAD,CAAKL,GAAI,CAAEM,EAAG,EAAGC,SAAU,YAA3B,SACE,cAAC,IAAD,CACEC,UAAU,MACVC,IAAKhB,EACLO,GAAI,CAAEC,aAAc,IAAKS,IAAK,EAAGC,MAAO,OAAQC,OAAQ,QAASC,UAAW,aAIhF,eAAC,IAAD,CAAOR,QAAS,EAAGL,GAAI,CAAEM,EAAG,EAAGQ,GAAI,EAAGC,GAAI,GAA1C,UACE,cAAC,IAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,eAAe,gBAA1D,SACE,cAAC,IAAD,CAAMC,MAAM,UAAUC,UAAU,OAAOpB,GAAI,CAAEW,MAAO,QAApD,SACE,cAAC,IAAD,CAAYU,QAAQ,YAAYC,QAAM,EAAtC,SACG3B,QAKP,eAAC,IAAD,CAAOqB,UAAU,MAAME,eAAe,gBAAtC,UACE,eAAC,IAAD,CAAOlB,GAAI,CAAEW,MAAO,OAASK,UAAU,MAAMC,WAAW,SAAxD,UACE,cAAC,IAAD,CAAMM,KAAK,8BAA8BZ,MAAO,GAAIC,OAAQ,KAC5D,cAAC,IAAD,CAASY,MAAM,eAAexB,GAAI,CAAEW,MAAO,MAAOc,GAAI,IAAtD,SACE,cAAC,IAAD,CACEC,KAAI,0CAAqC9B,GACzCwB,UAAU,OACVO,OAAO,SACPC,IAAI,WAJN,SAME,cAAC,IAAD,CAAOZ,UAAU,MAAMC,WAAW,SAASZ,QAAS,GAApD,SACE,cAAC,IAAD,CAAYgB,QAAQ,QAAQC,QAAM,EAAlC,SACG1B,aAMX,cAAC,IAAD,CAAS4B,MAAM,SAAf,SACE,eAAC,IAAD,CAAOR,UAAU,MAAMC,WAAW,SAASZ,QAAS,GAApD,UACE,cAAC,IAAD,CAAMkB,KAAK,6BAA6BZ,MAAO,GAAIC,OAAQ,KAC3D,cAAC,IAAD,CAAYS,QAAQ,QAAQC,QAAM,EAAlC,SACG9B,SAIP,cAAC,IAAD,CACEkC,KAAI,wCAAmC9B,EAAnC,cAAoDJ,GACxD4B,UAAU,OACVO,OAAO,SACPC,IAAI,WAJN,SAME,eAAC,IAAD,CAAOZ,UAAU,MAAMC,WAAW,SAASZ,QAAS,GAApD,UACE,cAAC,IAAD,CAAMkB,KAAK,kBAAkBZ,MAAO,GAAIC,OAAQ,KAChD,cAAC,IAAD,CAAYS,QAAQ,QAAQC,QAAM,EAAlC,mCAWC,SAASO,IACtB,IAAMhC,EAAQC,cACNgC,EAAiBC,cAAjBD,aAER,EAA8BE,mBAE5B,IAFF,mBAAOC,EAAP,KAAgBC,EAAhB,KAIA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAA0BC,aAAaC,QAAQ,4BAA8B,GAM7EC,EAAe,SAACC,GACpB,IAAMC,EAAYD,EAAQE,MAAM,aAChC,OAAID,EACKA,EAAU,GACL,MAGVE,EAAsB,uCAAG,WAAOC,EAAeC,GAAtB,qBAAAC,EAAA,sEACND,EAASE,oBAAoBX,EAAyBQ,GADhD,cACvBvD,EADuB,OACwD2D,WADxD,SAENH,EAAStD,SAASF,GAFZ,OAEvBE,EAFuB,QAGvB0D,EAAcV,EAAahD,MAEzB2D,EADS,UACSC,IAA+B,GADxC,YAC8CF,GAC7DG,IAAMC,IAAIH,GAAcI,MAAK,SAACC,GAC5B,IAAM/D,EAAO+D,EAASC,KAAKhE,MAAQ,GACnC,GAAI+D,EAASC,MAAQD,EAASC,KAAKC,MAAO,CACxC,IAAMC,EAAWnB,EAAagB,EAASC,KAAKC,OAC5C,GAAIC,EAAU,CACZ,IAAMpE,EAAQ,UAAM6D,IAA+B,GAArC,YAA2CO,GAEzD3B,GAAW,SAACD,GAEV,IADA,IAAI6B,EAAiB7B,EAAQ8B,OACpBC,EAAW/B,EAAQ8B,OAAQC,EAAW,KACzCC,SAASzE,EAAS,IAAMyE,SAAShC,EAAQ+B,EAAW,GAAGxE,QAAS,KADpBwE,IAIhDF,IAOF,MALgB,sBACX7B,EAAQiC,MAAM,EAAGJ,IADN,CAEd,CAAEtE,UAASE,WAAUD,WAAUE,SAFjB,YAGXsC,EAAQiC,MAAMJ,cAxBA,2CAAH,wDAkCtBK,EAAY,uCAAG,WAAOhC,GAAP,uBAAAc,EAAA,0DACfmB,IAAOC,MAAMC,UAAU/B,GADR,uBAEjBL,EAAW,IAELqC,EAAW,IAAIH,IAAOI,UAAUC,gBAAgB,4BAChDzB,EAAW,IAAIoB,IAAOM,SAASC,IAAiBC,IAAKL,GAL1C,SAOSvB,EAAS6B,UAAUtC,GAP5B,OAcjB,IAPMuC,EAPW,OAOsD3B,WAEjE4B,EACJC,IAAgC7C,EAAO8B,SAASa,EAAY,IACxDb,SAASa,EAAY,IACrBE,IAAgC7C,EAE7BY,EAAQiC,KAAiC7C,EAAO,GAAIY,EAAQgC,EAAWhC,IAC9ED,EAAuBC,EAAOC,GAff,2CAAH,sDAoBlBiC,qBAAU,WACRd,EAAahC,KACZ,CAACA,IAEJ8C,qBAAU,WAAM,4CACd,gCAAAhC,EAAA,0DACMmB,IAAOC,MAAMC,UAAU/B,GAD7B,uBAEUgC,EAAW,IAAIH,IAAOI,UAAUC,gBAAgB,4BAChDzB,EAAW,IAAIoB,IAAOM,SAASC,IAAiBC,IAAKL,GAH/D,SAI8BvB,EAAS6B,UAAUtC,GAJjD,OAIUuC,EAJV,OAI2E3B,WAEvEb,EAAa4C,KAAKC,KAAKlB,SAASa,EAAY,IAAME,MANtD,4CADc,uBAAC,WAAD,wBAUdI,KACC,IAEH,MAAyBC,cAAzB,mBAAOC,EAAP,KAAc3E,EAAd,KAAcA,MACd,EAA0BqB,mBAAmB,GAA7C,mBAAOuD,EAAP,KAAcC,EAAd,KAUA,OARAP,qBAAU,WACJtE,EAAQd,EAAM4F,YAAYC,OAAOC,GACnCH,EAAS,GAETA,EAAS,KAEV,CAAC7E,IAGF,cAAC,IAAD,CAAMa,MAAM,cAAZ,SACE,eAAC,IAAD,CAAWoE,UAAU9D,GAAuB,KAA5C,UACE,cAAC,IAAD,CAAM+D,WAAS,EAACxF,QAAS,EAAGiF,IAAKA,EAAjC,SACGrD,EAAQ6D,KAAI,SAACC,GACZ,OACE,cAAC,IAAD,CAAwBC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGR,GAAIJ,EAAvD,SACE,cAAChG,EAAD,2BAAawG,GAAb,IAAkBnG,YAAa+E,QADtBoB,EAAIvG,cAMrB,cAAC,IAAD,CAAOwB,UAAU,MAAME,eAAe,SAASlB,GAAI,CAAEc,GAAI,GAAzD,SACE,cAAC,IAAD,CAAYsF,MAAO/D,EAAWF,KAAMA,EAAMkE,SA1GzB,SAACC,EAAYC,GACpCnE,EAAQmE,e,2GCvHNC,EAAOC,sBAAsC,WAAqCnB,GAArC,IAAGoB,EAAH,EAAGA,SAAH,IAAalF,aAAb,MAAqB,GAArB,EAA4BmF,EAA5B,wBACjD,eAAC,IAAD,yBAAKrB,IAAKA,GAASqB,GAAnB,cACE,cAAC,IAAD,UACE,gCAAQnF,MAETkF,SAIUF,O,iCCrBf,kCAAO,IAAM7B,EAA0B,8C,iCCAvC,kCAAO,IAAMC,EAAW,CACtB,CAAEgC,OAAQ,GAAIC,gBAAiB,aAAcC,KAAM,eACnD,CACEC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTC,aAAc,UACdtH,KAAM,QACNmH,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdtH,KAAM,WACNmH,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdtH,KAAM,UACNmH,KAAM,YAGVnH,KAAM,WACNmH,KAAM,SAER,CACEC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTC,aAAc,UACdtH,KAAM,QACNmH,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdtH,KAAM,WACNmH,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,OACdtH,KAAM,WACNmH,KAAM,SAGVnH,KAAM,iBACNmH,KAAM,SAER,CACEC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTC,aAAc,UACdtH,KAAM,OACNmH,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdtH,KAAM,KACNmH,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdtH,KAAM,UACNmH,KAAM,YAGVnH,KAAM,WACNmH,KAAM,SAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWtH,KAAM,KAAMmH,KAAM,WAC7C,CAAEG,aAAc,UAAWtH,KAAM,UAAWmH,KAAM,YAEpDnH,KAAM,UACNuH,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWtH,KAAM,QAASmH,KAAM,YACzDnH,KAAM,YACNuH,QAAS,CAAC,CAAED,aAAc,UAAWtH,KAAM,GAAImH,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWtH,KAAM,UAAWmH,KAAM,YAC3DnH,KAAM,cACNuH,QAAS,CAAC,CAAED,aAAc,UAAWtH,KAAM,GAAImH,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWtH,KAAM,UAAWmH,KAAM,YAC3DnH,KAAM,mBACNuH,QAAS,CAAC,CAAED,aAAc,SAAUtH,KAAM,GAAImH,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWtH,KAAM,UAAWmH,KAAM,YAC3DnH,KAAM,uBACNuH,QAAS,CAAC,CAAED,aAAc,SAAUtH,KAAM,GAAImH,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWtH,KAAM,QAASmH,KAAM,WAChD,CAAEG,aAAc,UAAWtH,KAAM,WAAYmH,KAAM,YAErDnH,KAAM,mBACNuH,QAAS,CAAC,CAAED,aAAc,OAAQtH,KAAM,GAAImH,KAAM,SAClDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWtH,KAAM,WAAYmH,KAAM,WACnD,CAAEG,aAAc,SAAUtH,KAAM,eAAgBmH,KAAM,UACtD,CAAEG,aAAc,SAAUtH,KAAM,gBAAiBmH,KAAM,UACvD,CAAEG,aAAc,SAAUtH,KAAM,oBAAqBmH,KAAM,WAE7DnH,KAAM,cACNuH,QAAS,CAAC,CAAED,aAAc,UAAWtH,KAAM,GAAImH,KAAM,YACrDD,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,GACRjH,KAAM,OACNuH,QAAS,CAAC,CAAED,aAAc,SAAUtH,KAAM,GAAImH,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWtH,KAAM,UAAWmH,KAAM,YAC3DnH,KAAM,UACNuH,QAAS,CAAC,CAAED,aAAc,UAAWtH,KAAM,GAAImH,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWtH,KAAM,OAAQmH,KAAM,WAC/C,CAAEG,aAAc,UAAWtH,KAAM,KAAMmH,KAAM,WAC7C,CAAEG,aAAc,UAAWtH,KAAM,UAAWmH,KAAM,YAEpDnH,KAAM,mBACNuH,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWtH,KAAM,OAAQmH,KAAM,WAC/C,CAAEG,aAAc,UAAWtH,KAAM,KAAMmH,KAAM,WAC7C,CAAEG,aAAc,UAAWtH,KAAM,UAAWmH,KAAM,WAClD,CAAEG,aAAc,QAAStH,KAAM,QAASmH,KAAM,UAEhDnH,KAAM,mBACNuH,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWtH,KAAM,WAAYmH,KAAM,WACnD,CAAEG,aAAc,OAAQtH,KAAM,WAAYmH,KAAM,SAElDnH,KAAM,oBACNuH,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,SAAUtH,KAAM,cAAemH,KAAM,WAC9DnH,KAAM,oBACNuH,QAAS,CAAC,CAAED,aAAc,OAAQtH,KAAM,GAAImH,KAAM,SAClDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACRjH,KAAM,SACNuH,QAAS,CAAC,CAAED,aAAc,SAAUtH,KAAM,GAAImH,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWtH,KAAM,QAASmH,KAAM,YACzDnH,KAAM,eACNuH,QAAS,CAAC,CAAED,aAAc,UAAWtH,KAAM,GAAImH,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWtH,KAAM,QAASmH,KAAM,WAChD,CAAEG,aAAc,UAAWtH,KAAM,QAASmH,KAAM,YAElDnH,KAAM,sBACNuH,QAAS,CAAC,CAAED,aAAc,UAAWtH,KAAM,GAAImH,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWtH,KAAM,UAAWmH,KAAM,YAC3DnH,KAAM,WACNuH,QAAS,CAAC,CAAED,aAAc,SAAUtH,KAAM,GAAImH,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACRjH,KAAM,cACNuH,QAAS,CAAC,CAAED,aAAc,UAAWtH,KAAM,GAAImH,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWtH,KAAM,OAAQmH,KAAM,WAC/C,CAAEG,aAAc,UAAWtH,KAAM,KAAMmH,KAAM,WAC7C,CAAEG,aAAc,UAAWtH,KAAM,UAAWmH,KAAM,YAEpDnH,KAAM,eACNuH,QAAS,GACTL,gBAAiB,aACjBC,KAAM,c","file":"static/js/12.d9a6e504.chunk.js","sourcesContent":["// material\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Stack,\r\n  Box,\r\n  Link,\r\n  Grid,\r\n  Tooltip,\r\n  Pagination\r\n} from '@mui/material';\r\nimport { GridSize } from '@mui/material/Grid';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\nimport { useMeasure } from 'react-use';\r\n\r\n// components\r\nimport Page from '../components/Page';\r\nimport { ethers } from 'ethers';\r\nimport { ABI } from '../utils/abi';\r\nimport { contractAddress } from '../utils/contractAddress';\r\nimport { Icon } from '@iconify/react';\r\nimport axios from 'axios';\r\nimport {\r\n  IPFS_GATEWAY_FOR_FETCHING_DATA,\r\n  NUMBER_OF_NFT_IN_MANAGER_PAGE\r\n} from 'assets/COMMON_VARIABLES';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype NftCardProps = {\r\n  tokenId: string;\r\n  tokenURI: string;\r\n  imageUrl: string;\r\n  name: string;\r\n  nftContract: string;\r\n};\r\n\r\nfunction NftCard({ tokenId, tokenURI, imageUrl, name, nftContract }: NftCardProps) {\r\n  const theme = useTheme();\r\n  return (\r\n    <Paper\r\n      elevation={2}\r\n      sx={{\r\n        borderRadius: 2,\r\n        bgcolor: 'white',\r\n        transition: 'all .2s ease-in-out',\r\n        '&:hover': {\r\n          transform: `translateY(-${theme.spacing(1 / 4)})`\r\n        }\r\n      }}\r\n    >\r\n      <Box sx={{ p: 1, position: 'relative' }}>\r\n        <Box\r\n          component=\"img\"\r\n          src={imageUrl}\r\n          sx={{ borderRadius: 1.5, top: 0, width: '100%', height: '200px', objectFit: 'cover' }}\r\n        />\r\n      </Box>\r\n\r\n      <Stack spacing={1} sx={{ p: 2, pt: 1, pb: 1 }}>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Link color=\"inherit\" underline=\"none\" sx={{ width: '100%' }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {name}\r\n            </Typography>\r\n          </Link>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Stack sx={{ width: '30%' }} direction=\"row\" alignItems=\"center\">\r\n            <Icon icon=\"teenyicons:contract-outline\" width={16} height={16} />\r\n            <Tooltip title=\"NFT Contract\" sx={{ width: '80%', pl: 0.5 }}>\r\n              <Link\r\n                href={`https://polygonscan.com/address/${nftContract}`}\r\n                underline=\"none\"\r\n                target=\"_blank\"\r\n                rel=\"noopener\"\r\n              >\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                  <Typography variant=\"body2\" noWrap>\r\n                    {nftContract}\r\n                  </Typography>\r\n                </Stack>\r\n              </Link>\r\n            </Tooltip>\r\n          </Stack>\r\n          <Tooltip title=\"NFT ID\">\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n              <Icon icon=\"ant-design:number-outlined\" width={16} height={16} />\r\n              <Typography variant=\"body2\" noWrap>\r\n                {tokenId}\r\n              </Typography>\r\n            </Stack>\r\n          </Tooltip>\r\n          <Link\r\n            href={`https://polygonscan.com/token/${nftContract}?a=${tokenId}`}\r\n            underline=\"none\"\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n              <Icon icon=\"bi:shield-check\" width={16} height={16} />\r\n              <Typography variant=\"body2\" noWrap>\r\n                History\r\n              </Typography>\r\n            </Stack>\r\n          </Link>\r\n        </Stack>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default function NftManager() {\r\n  const theme = useTheme();\r\n  const { themeStretch } = useSettings();\r\n\r\n  const [NftList, setNftList] = useState<\r\n    { tokenId: string; tokenURI: string; imageUrl: string; name: string }[]\r\n  >([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(1);\r\n\r\n  const selectedMetamaskAccount = localStorage.getItem('selectedMetamaskAccount') || '';\r\n\r\n  const handlePageChange = (event: any, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const ipfsUriToCid = (ipfsUrl: string) => {\r\n    const CidSearch = ipfsUrl.match(/(Qm[\\w]+)/);\r\n    if (CidSearch) {\r\n      return CidSearch[1];\r\n    } else return null;\r\n  };\r\n\r\n  const updateListByTokenIndex = async (index: number, contract: ethers.Contract) => {\r\n    const tokenId = (await contract.tokenOfOwnerByIndex(selectedMetamaskAccount, index)).toString();\r\n    const tokenURI = await contract.tokenURI(tokenId);\r\n    const tokenURICid = ipfsUriToCid(tokenURI);\r\n    if (tokenURICid) {\r\n      const tokenURIHttp = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${tokenURICid}`;\r\n      axios.get(tokenURIHttp).then((response) => {\r\n        const name = response.data.name || '';\r\n        if (response.data && response.data.image) {\r\n          const imageCid = ipfsUriToCid(response.data.image);\r\n          if (imageCid) {\r\n            const imageUrl = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${imageCid}`;\r\n\r\n            setNftList((NftList) => {\r\n              let addingNftIndex = NftList.length;\r\n              for (let nftIndex = NftList.length; nftIndex > 0; nftIndex--) {\r\n                if (parseInt(tokenId, 10) > parseInt(NftList[nftIndex - 1].tokenId, 10)) {\r\n                  break;\r\n                }\r\n                addingNftIndex--;\r\n              }\r\n              const newNftList = [\r\n                ...NftList.slice(0, addingNftIndex),\r\n                { tokenId, tokenURI, imageUrl, name },\r\n                ...NftList.slice(addingNftIndex)\r\n              ];\r\n              return newNftList;\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getNftByPage = async (page: number) => {\r\n    if (ethers.utils.isAddress(selectedMetamaskAccount)) {\r\n      setNftList([]);\r\n\r\n      const provider = new ethers.providers.JsonRpcProvider('https://polygon-rpc.com/');\r\n      const contract = new ethers.Contract(contractAddress, ABI, provider);\r\n\r\n      const NftBalance = (await contract.balanceOf(selectedMetamaskAccount)).toString();\r\n\r\n      const stopIndex =\r\n        NUMBER_OF_NFT_IN_MANAGER_PAGE * page > parseInt(NftBalance, 10)\r\n          ? parseInt(NftBalance, 10)\r\n          : NUMBER_OF_NFT_IN_MANAGER_PAGE * page;\r\n\r\n      for (let index = NUMBER_OF_NFT_IN_MANAGER_PAGE * (page - 1); index < stopIndex; index++) {\r\n        updateListByTokenIndex(index, contract);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNftByPage(page);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    async function getPageCount() {\r\n      if (ethers.utils.isAddress(selectedMetamaskAccount)) {\r\n        const provider = new ethers.providers.JsonRpcProvider('https://polygon-rpc.com/');\r\n        const contract = new ethers.Contract(contractAddress, ABI, provider);\r\n        const NftBalance = (await contract.balanceOf(selectedMetamaskAccount)).toString();\r\n\r\n        setPageCount(Math.ceil(parseInt(NftBalance, 10) / NUMBER_OF_NFT_IN_MANAGER_PAGE));\r\n      }\r\n    }\r\n    getPageCount();\r\n  }, []);\r\n\r\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\r\n  const [lgCol, setLgCol] = useState<GridSize>(4);\r\n\r\n  useEffect(() => {\r\n    if (width > theme.breakpoints.values.lg) {\r\n      setLgCol(3);\r\n    } else {\r\n      setLgCol(4);\r\n    }\r\n  }, [width]);\r\n\r\n  return (\r\n    <Page title=\"NFT Manager\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Grid container spacing={3} ref={ref}>\r\n          {NftList.map((nft) => {\r\n            return (\r\n              <Grid key={nft.tokenId} item xs={12} sm={6} md={4} lg={lgCol}>\r\n                <NftCard {...nft} nftContract={contractAddress} />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Stack direction=\"row\" justifyContent=\"center\" sx={{ pt: 6 }}>\r\n          <Pagination count={pageCount} page={page} onChange={handlePageChange} />\r\n        </Stack>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\nimport { forwardRef, ReactNode } from 'react';\n// material\nimport { Box, BoxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface PageProps extends BoxProps {\n  children: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nexport default Page;\n","export const contractAddress: string = '0xa0Afb3513B99E1b099CE9F3C007eE937B04e7870';\r\n","export const ABI: any = [\r\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'approved',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'operator',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bool',\r\n        name: 'approved',\r\n        type: 'bool'\r\n      }\r\n    ],\r\n    name: 'ApprovalForAll',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'approve',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\r\n    name: 'balanceOf',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getApproved',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getDataIdOnchain',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getDataRegisterProof',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'owner', type: 'address' },\r\n      { internalType: 'address', name: 'operator', type: 'address' }\r\n    ],\r\n    name: 'isApprovedForAll',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'receiver', type: 'address' },\r\n      { internalType: 'string', name: 'tokenURIdata', type: 'string' },\r\n      { internalType: 'string', name: 'dataIdOnchain', type: 'string' },\r\n      { internalType: 'string', name: 'dataRegisterProof', type: 'string' }\r\n    ],\r\n    name: 'mintDataNTF',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'ownerOf',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_data', type: 'bytes' }\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'operator', type: 'address' },\r\n      { internalType: 'bool', name: 'approved', type: 'bool' }\r\n    ],\r\n    name: 'setApprovalForAll',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],\r\n    name: 'supportsInterface',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],\r\n    name: 'tokenByIndex',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'owner', type: 'address' },\r\n      { internalType: 'uint256', name: 'index', type: 'uint256' }\r\n    ],\r\n    name: 'tokenOfOwnerByIndex',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'tokenURI',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  }\r\n];\r\n"],"sourceRoot":""}