{"version":3,"sources":["components/_dashboard/assetViewer/AssetDetails.tsx","components/_dashboard/assetViewer/AssetCard.tsx","utils/formatTime.ts","components/_dashboard/assetViewer/AboutOwner.tsx","components/_dashboard/assetViewer/FilesInfo.tsx","components/_dashboard/assetViewer/Asset.tsx","pages/AssetViewer.tsx","components/Page.tsx","utils/contractAddress.ts","utils/abi.ts","hooks/useSnackbarAction.tsx","components/Label.tsx"],"names":["AssetDetails","assetAndOwner","translate","useLocales","Card","CardHeader","title","Stack","spacing","sx","p","direction","justifyContent","Typography","variant","ButtonBase","shortenAddress","contractAddress","tokenId","Box","textAlign","mb","Tooltip","IconButton","href","target","component","src","height","AssetCard","date","useRef","useState","loading","setLoading","disableTypography","avatar","ownerIcon","alt","Link","to","color","RouterLink","ownerAddress","subheader","display","Date","now","format","alignItems","width","imageUrl","onLoad","mt","name","description","Identicons","svgPath","CardMediaStyle","styled","theme","position","paddingTop","top","zIndex","content","backdropFilter","WebkitBackdropFilter","borderTopLeftRadius","shape","borderRadiusMd","borderTopRightRadius","backgroundColor","alpha","palette","primary","darker","CoverImgStyle","objectFit","InfoItem","number","Grid","item","xs","UserCard","SvgIconStyle","bottom","Avatar","transform","align","Divider","container","py","balance","getStatusMainnet","cid","a","wsProvider","WsProvider","CRUST_CHAIN_RPC","chain","ApiPromise","provider","typesBundle","typesBundleForPolkadot","isReadyOrError","query","market","files","fileInfo","disconnect","toJSON","publishCidMainnet","fileSizeInBytes","web3Enable","length","web3Accounts","allAccounts","crustAccountIndex","parseInt","localStorage","getItem","account","web3FromSource","meta","source","injector","transferExtrinsic","tx","placeStorageOrder","signAndSend","address","signer","nonce","txHash","addPrepaid","amount","ap","MoreMenuButton","fileSize","menuRef","open","setOpen","onSnackbarAction","useSnackbarAction","addPrepaidOpen","setAddPrepaidOpen","handleClose","handleRenewFile","CRUST_WALLET_WIKI","ref","size","onClick","icon","moreVerticalFill","Menu","anchorEl","current","onClose","PaperProps","maxWidth","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ml","window","navigator","clipboard","writeText","AddPrepaidDialog","fullWidth","prepaidAmountRaw","setPrepaidAmountRaw","prepaidAmount","setPrepaidAmount","prepaidAmountError","setPrepaidAmountError","handleConfirm","Dialog","DialogTitle","DialogContent","DialogContentText","pt","margin","flexDirection","TextField","error","helperText","id","value","onChange","e","isNaN","parseFloat","InputProps","endAdornment","InputAdornment","DialogActions","Button","daysNumberToHumanReadable","days","daysReadable","daysLeft","year","Math","floor","month","FilesInfo","useTheme","contentId","metadataId","nftCardId","isDone","blockNum","avgBlockTime","fileBaseFee","fileByteFee","fileKeysCountFee","metadataSubscan","setMetadataSubscan","filesInfo","setFilesInfo","fetchFileInfo","fileType","expiredDate","CRUST_CONSENSUS_DATE","getTime","expired_at","toISOString","split","guaranteedBlock","realTimeStorageFee","ceil","file_size","prepaid","RENEW_PERIOD_BLOCK_NUMBER","guaranteedDays","newFileInfo","network","replicas","reported_replica_count","expireOn","guaranteedLifetime","useEffect","axios","get","METADATA_SUBSCAN_CRUST","then","response","status","data","Scrollbar","TableContainer","minWidth","Table","TableHead","TableRow","TableCell","TableBody","map","row","Label","mode","Asset","useMediaQuery","breakpoints","up","md","initAssetAndOwner","ipfsUriToCid","ipfsUrl","CidSearch","match","AssetViewer","themeStretch","useSettings","networkRPC","useParams","contract","POLYGON_RPC","setAssetAndOwner","ethers","providers","JsonRpcProvider","contractEthersJs","Contract","ABI","ownerOf","ownerOfNFT","balanceOf","balanceOfOwner","toString","tokenURI","getDataIdOnchain","tokenURICid","toDataUrl","img","tokenURIHttp","IPFS_GATEWAY_FOR_FETCHING_DATA","image","imageCid","fetchData","Page","Container","forwardRef","children","other","inputs","stateMutability","type","anonymous","indexed","internalType","outputs","useSnackbar","enqueueSnackbar","closeSnackbar","text","autoHideDuration","label","url","action","key","closeFill","RootStyle","ownerState","isLight","lineHeight","borderRadius","cursor","whiteSpace","padding","grey","fontSize","typography","pxToRem","fontFamily","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","styleGhost","secondary","common","white"],"mappings":"qhBAce,SAASA,EAAT,GAAgF,IAAxDC,EAAuD,EAAvDA,cAC7BC,EAAcC,cAAdD,UACR,OACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,kBAElB,eAACC,EAAA,EAAD,CAAOC,QAAS,EAAGC,GAAI,CAAEC,EAAG,GAA5B,UACE,eAACH,EAAA,EAAD,CAAOI,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BZ,EAAU,0BACvC,cAACa,EAAA,EAAD,UACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACGE,YAAef,EAAcgB,gBAAiB,UAKrD,eAACV,EAAA,EAAD,CAAOI,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BZ,EAAU,oBACvC,cAACa,EAAA,EAAD,UACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6Bb,EAAciB,eAG/C,eAACX,EAAA,EAAD,CAAOI,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BZ,EAAU,0BACvC,cAACW,EAAA,EAAD,CAAYC,QAAQ,QAApB,uBAEF,eAACP,EAAA,EAAD,CAAOI,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BZ,EAAU,yBACvC,cAACW,EAAA,EAAD,CAAYC,QAAQ,QAApB,2BAGJ,eAACK,EAAA,EAAD,CAAKV,GAAI,CAAEW,UAAW,SAAUC,GAAI,GAApC,UACE,cAACC,EAAA,EAAD,CAAShB,MAAM,sBAAf,SACE,cAACiB,EAAA,EAAD,CACEC,KAAI,wCAAmCvB,EAAcgB,gBAAjD,cAAsEhB,EAAciB,SACxFO,OAAO,SAFT,SAIE,cAACN,EAAA,EAAD,CAAKO,UAAU,MAAMC,IAAI,oCAAoClB,GAAI,CAAEmB,OAAQ,UAG/E,cAACN,EAAA,EAAD,CAAShB,MAAM,iBAAf,SACE,cAACiB,EAAA,EAAD,CACEC,KAAI,0CAAqCvB,EAAcgB,gBAAnD,YAAsEhB,EAAciB,SACxFO,OAAO,SAFT,SAIE,cAACN,EAAA,EAAD,CAAKO,UAAU,MAAMC,IAAI,oCAAoClB,GAAI,CAAEmB,OAAQ,gB,oEC7BxE,SAASC,EAAT,GAA6E,IC1BtEC,ED0Bc7B,EAAuD,EAAvDA,cAElC,GADwB8B,iBAAyB,MACrBC,oBAAS,IAArC,mBACA,GADA,UAC0BA,mBAAS,IAAnC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OACE,eAAC9B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACE8B,mBAAiB,EACjBC,OAAQ,cAAC,IAAD,CAAST,IAAK1B,EAAcoC,UAAWC,IAAI,eACnDhC,MACE,cAACiC,EAAA,EAAD,CAAMC,GAAG,IAAI1B,QAAQ,YAAY2B,MAAM,eAAef,UAAWgB,IAAjE,SACG1B,YAAef,EAAc0C,aAAc,KAGhDC,UACE,cAAC/B,EAAA,EAAD,CAAYC,QAAQ,UAAUL,GAAI,CAAEoC,QAAS,QAASJ,MAAO,kBAA7D,UCzDYX,ED0DHgB,KAAKC,MCzDfC,YAAO,IAAIF,KAAKhB,GAAO,qBDmE1B,eAACvB,EAAA,EAAD,CAAOC,QAAS,EAAGC,GAAI,CAAEC,EAAG,GAA5B,UACE,eAACS,EAAA,EAAD,WACE,cAACZ,EAAA,EAAD,CAAOI,UAAU,MAAMsC,WAAW,SAASrC,eAAe,SAASH,GAAI,CAAEyC,MAAO,QAAhF,SACE,cAAC/B,EAAA,EAAD,CACEO,UAAU,MACVY,IAAI,aACJX,IAAK1B,EAAckD,SACnBC,OAAQ,kBAAMlB,GAAW,IACzBzB,GAAI,CACFoC,QAASZ,EAAU,OAAS,aAIlC,cAAC1B,EAAA,EAAD,CACEI,UAAU,MACVsC,WAAW,SACXrC,eAAe,SACfH,GAAI,CAAEyC,MAAO,OAAQL,QAASZ,EAAU,OAAS,OAAQoB,GAAI,GAJ/D,SAME,cAAC,IAAD,CAAwBZ,MAAO,UAAWR,QAASA,SA4BvD,eAAC1B,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCb,EAAcqD,OAC/C,cAACzC,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6Bb,EAAcsD,uB,uDE5GrDC,IAAWC,QAAU,8BAErB,IAAMC,EAAiBC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACnDf,QAAS,OACTgB,SAAU,WACVjD,eAAgB,SAChBkD,WAAY,sBACZ,WAAY,CACVC,IAAK,EACLC,OAAQ,EACRC,QAAS,KACTf,MAAO,OACPtB,OAAQ,OACRiC,SAAU,WACVK,eAAgB,YAChBC,qBAAsB,YACtBC,oBAAqBR,EAAMS,MAAMC,eACjCC,qBAAsBX,EAAMS,MAAMC,eAClCE,gBAAiBC,YAAMb,EAAMc,QAAQC,QAAQC,OAAQ,UAInDC,EAAgBlB,YAAO,MAAPA,EAAc,cAAGC,MAAH,MAAgB,CAClDG,IAAK,EACLC,OAAQ,EACRd,MAAO,OACPtB,OAAQ,OACRkD,UAAW,QACXjB,SAAU,eAKZ,SAASkB,EAASzB,EAAc0B,GAC9B,OACE,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG1E,GAAI,CAAEW,UAAW,UAAnC,UACE,cAACP,EAAA,EAAD,CAAYC,QAAQ,UAAUL,GAAI,CAAEY,GAAI,GAAKoB,MAAO,iBAAkBI,QAAS,SAA/E,SACGS,IAEH,cAACzC,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCkE,OAKxB,SAASI,EAAT,GAA4E,IAAxDnF,EAAuD,EAAvDA,cACjC,OACE,eAACG,EAAA,EAAD,WACE,eAACsD,EAAD,WACE,cAAC2B,EAAA,EAAD,CACE5C,MAAM,QACNd,IAAI,iCACJlB,GAAI,CACFyC,MAAO,IACPtB,OAAQ,GACRoC,OAAQ,GACRsB,QAAS,GACTzB,SAAU,cAGd,cAAC0B,EAAA,EAAD,CACEjD,IAAI,QACJX,IAAK1B,EAAcoC,UACnB5B,GAAI,CACFyC,MAAO,GACPtB,OAAQ,GACRoC,OAAQ,GACRH,SAAU,WACV2B,UAAW,sBAGf,cAACX,EAAD,CAAevC,IAAI,QAAQX,IAAK1B,EAAcoC,eAGhD,cAACxB,EAAA,EAAD,CAAYC,QAAQ,YAAY2E,MAAM,SAAShF,GAAI,CAAE4C,GAAI,GAAzD,SACGrC,YAAef,EAAc0C,aAAc,KAE9C,cAAC9B,EAAA,EAAD,CAAYC,QAAQ,QAAQ2E,MAAM,SAAShF,GAAI,CAAEgC,MAAO,kBAAxD,qBAIA,cAACtB,EAAA,EAAD,CAAKV,GAAI,CAAEW,UAAW,SAAUiC,GAAI,EAAGhC,GAAI,KAA3C,SACE,cAACC,EAAA,EAAD,CAAShB,MAAM,cAAf,SACE,cAACiB,EAAA,EAAD,CACEC,KAAI,0CAAqCvB,EAAc0C,cACvDlB,OAAO,SAFT,SAIE,cAACN,EAAA,EAAD,CAAKO,UAAU,MAAMC,IAAI,oCAAoClB,GAAI,CAAEmB,OAAQ,YAKjF,cAAC8D,EAAA,EAAD,IAEA,eAACT,EAAA,EAAD,CAAMU,WAAS,EAAClF,GAAI,CAAEmF,GAAI,GAA1B,UACGb,EAAS,mBAAoB9E,EAAc4F,SAC3Cd,EAAS,eAAgB,W,mUCrD5Be,GAAgB,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEAEfC,EAAa,IAAIC,IAAWC,MAC5BC,EAAQ,IAAIC,IAAW,CAC3BC,SAAUL,EACVM,YAAaC,2BALM,SAOfJ,EAAMK,eAPS,uBASEL,EAAMM,MAAMC,OAAOC,MAAMb,GAT3B,cASfc,EATe,OAUrBT,EAAMU,aAVe,kBAWdD,EAASE,UAXK,2DAad,MAbc,0DAAH,sDAiBhBC,GAAiB,uCAAG,WAAOjB,EAAakB,GAApB,6BAAAjB,EAAA,sEACCkB,aAAW,YADZ,UAGE,IAHF,OAGTC,OAHS,yCAIf,MAJe,uBAO6BC,eAP7B,cAOlBC,EAPkB,OAWxBC,GAFIA,EAAoBC,SAASC,aAAaC,QAAQ,8BAAgC,IAAK,KAGrEJ,EAAYF,QAAUG,GAAqB,EAAIA,EAAoB,EAEnFI,EAAUL,EAAYC,GAdJ,UAgBDK,aAAeD,EAAQE,KAAKC,QAhB3B,eAgBlBC,EAhBkB,OAkBlB7B,EAAa,IAAIC,IAAWC,MAC5BC,EAAQ,IAAIC,IAAW,CAC3BC,SAAUL,EACVM,YAAaC,2BArBS,UAwBlBJ,EAAMK,eAxBY,eA0BlBsB,EAAoB3B,EAAM4B,GAAGrB,OAAOsB,kBAAkBlC,EAAKkB,EAAiB,EAAG,IA1B7D,UA4BHc,EAAkBG,YAAYR,EAAQS,QAAS,CAClEC,OAAQN,EAASM,OACjBC,OAAQ,IA9Bc,eA4BlBC,EA5BkB,OAiCxBlC,EAAMU,aAjCkB,kBAmCjBwB,GAnCiB,4CAAH,wDAsCjBC,GAAU,uCAAG,WAAOxC,EAAayC,GAApB,6BAAAxC,EAAA,sEACQkB,aAAW,YADnB,UAGS,IAHT,OAGFC,OAHE,yCAIR,MAJQ,uBAOoCC,eAPpC,cAOXC,EAPW,OAWjBC,GAFIA,EAAoBC,SAASC,aAAaC,QAAQ,8BAAgC,IAAK,KAGrEJ,EAAYF,QAAUG,GAAqB,EAAIA,EAAoB,EAEnFI,EAAUL,EAAYC,GAdX,UAgBMK,aAAeD,EAAQE,KAAKC,QAhBlC,eAgBXC,EAhBW,OAkBX7B,EAAa,IAAIC,IAAWC,MAC5BC,EAAQ,IAAIC,IAAW,CAC3BC,SAAUL,EACVM,YAAaC,2BArBE,UAwBXJ,EAAMK,eAxBK,eA0BXgC,EAAKrC,EAAM4B,GAAGrB,OAAO4B,WAAWxC,EAAKyC,GA1B1B,UA4BIC,EAAGP,YAAYR,EAAQS,QAAS,CACnDC,OAAQN,EAASM,OACjBC,OAAQ,IA9BO,eA4BXC,EA5BW,OAiCjBlC,EAAMU,aAjCW,kBAmCVwB,GAnCU,4CAAH,wDAsChB,SAASI,GAAT,GAA+E,IAArD3C,EAAoD,EAApDA,IAAK4C,EAA+C,EAA/CA,SACvBC,EAAU7G,iBAAO,MACvB,EAAwBC,oBAAS,GAAjC,mBAAO6G,EAAP,KAAaC,EAAb,KAEMC,EAAmBC,eACzB,EAA4ChH,oBAAS,GAArD,mBAAOiH,EAAP,KAAuBC,EAAvB,KAMMC,EAAc,WAClBL,GAAQ,IAGJM,EAAe,uCAAG,WAAOrD,EAAa4C,GAApB,eAAA3C,EAAA,sEACDgB,GAAkBjB,EAAK4C,GADtB,QAChBL,EADgB,QAGpBS,EACE,UACA,0BACA,KACA,UAJc,6CAKwBT,IAGxCS,EACE,UACA,kCACA,KACA,QACAM,MAhBkB,2CAAH,wDAqBrB,OACE,qCACE,mCACE,cAAC,IAAD,CAAaC,IAAKV,EAASW,KAAK,QAAQC,QAhC3B,WACjBV,GAAQ,IA+BJ,SACE,cAAC,IAAD,CAAMW,KAAMC,IAAkBxG,MAAO,GAAItB,OAAQ,SAIrD,eAAC+H,EAAA,EAAD,CACEd,KAAMA,EACNe,SAAUhB,EAAQiB,QAClBC,QAASX,EACTY,WAAY,CACVtJ,GAAI,CAAEyC,MAAO,IAAK8G,SAAU,SAE9BC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SARlD,UAUE,eAACE,EAAA,EAAD,CACEb,QAAS,WACPJ,EAAgBrD,EAAK4C,GACrBQ,KAHJ,UAME,cAAC,IAAD,CAAMM,KAAK,wBAAwBvG,MAAO,GAAItB,OAAQ,KACtD,cAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQL,GAAI,CAAE6J,GAAI,GAAtC,sBAIF,eAACD,EAAA,EAAD,CACEb,QAAS,WACPN,GAAkB,GAClBC,KAHJ,UAME,cAAC,IAAD,CAAMM,KAAK,iBAAiBvG,MAAO,GAAItB,OAAQ,KAC/C,cAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQL,GAAI,CAAE6J,GAAI,GAAtC,6BAKF,cAAC5E,EAAA,EAAD,IACA,eAAC2E,EAAA,EAAD,CACEb,QAAS,WACPe,OAAO1B,KAAP,+BAAoC9C,GAAO,UAC3CoD,KAHJ,UAME,cAAC,IAAD,CAAMM,KAAK,uBAAuBvG,MAAO,GAAItB,OAAQ,KACrD,cAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQL,GAAI,CAAE6J,GAAI,GAAtC,yBAIF,eAACD,EAAA,EAAD,CACEb,QAAS,WACPgB,UAAUC,UAAUC,UAApB,+BAAsD3E,IACtDoD,IACAJ,EAAiB,UAAD,wBAAqC,MAJzD,UAOE,cAAC,IAAD,CAAMU,KAAK,kCAAkCvG,MAAO,GAAItB,OAAQ,KAChE,cAACf,EAAA,EAAD,CAAYC,QAAQ,QAAQL,GAAI,CAAE6J,GAAI,GAAtC,uCAMJ,cAACK,GAAD,CACE5E,IAAKA,EACLkD,eAAgBA,EAChBC,kBAAmBA,OAMpB,SAASyB,GAAT,GAQH,IAPF5E,EAOC,EAPDA,IACAkD,EAMC,EANDA,eACAC,EAKC,EALDA,kBAMA,EAAkClH,oBAAS,GAA3C,mBAAO4I,EAAP,KACA,GADA,KACgC5I,mBAAkC,OAAlE,mBAAOgI,EAAP,KACA,GADA,KACgDhI,mBAAS,KAAzD,mBAAO6I,EAAP,KAAyBC,EAAzB,KACA,EAA0C9I,mBAAS,GAAnD,mBAAO+I,EAAP,KAAsBC,EAAtB,KACA,EAAoDhJ,oBAAS,GAA7D,mBAAOiJ,EAAP,KAA2BC,EAA3B,KACMnC,EAAmBC,eAEnBG,EAAc,WAClBD,GAAkB,IAGdiC,EAAa,uCAAG,4BAAAnF,EAAA,yDACfiF,EADe,uBAElB/B,GAAkB,GAFA,SAGGX,GAAWxC,EAAKgF,EAAa,SAAG,GAAM,KAHzC,QAGZzC,EAHY,QAKhBS,EACE,UACA,2BACA,KACA,UAJc,6CAKwBT,IAGxCS,EACE,UACA,kCACA,KACA,QACAM,MAlBc,2CAAH,qDAkCnB,OACE,mCACE,eAAC+B,EAAA,EAAD,CAAQvC,KAAMI,EAAgBe,SAAUA,EAAUF,QAASX,EAAayB,UAAWA,EAAnF,UACE,cAACS,GAAA,EAAD,uCACA,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,2EAIA,cAACpK,EAAA,EAAD,CACEV,GAAI,CACF+K,GAAI,EACJC,OAAQ,OACR5I,QAAS,OACTK,MAAO,OACPwI,cAAe,UANnB,SASE,cAACC,GAAA,EAAD,CACEC,MAAOX,EACPY,WAAYZ,EAAqB,8BAAgC,KACjEa,GAAG,oBACHC,MAAOlB,EACPmB,SAjCmB,SAACC,GAC9BnB,EAAoBmB,EAAExK,OAAOsK,OACzBG,MAAMD,EAAExK,OAAOsK,QAAiBG,MAAMC,WAAWF,EAAExK,OAAOsK,QAC5Db,GAAsB,IAEtBA,GAAsB,GACtBF,EAAiBmB,WAAWF,EAAExK,OAAOsK,UA4B7BK,WAAY,CACVC,aAAc,cAACC,GAAA,EAAD,CAAgBzI,SAAS,QAAzB,yBAKtB,eAAC0I,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAQhD,QAASL,EAAarI,QAAQ,YAAtC,oBAGA,cAAC0L,GAAA,EAAD,CAAQhD,QAAS2B,EAAerK,QAAQ,YAAxC,6BA8BV,IAAM2L,GAA4B,SAACC,GACjC,IAAIC,EAAe,GACfC,EAAWF,EACTG,EAAOC,KAAKC,MAAMH,EAAW,KAC/BC,IACFF,GAAgBE,GAAQA,EAAO,EAAI,UAAY,UAC/CD,GAAmB,IAAPC,GAEd,IAAMG,EAAQF,KAAKC,MAAMH,GAAY,IAAM,KAM3C,OALII,EAAQ,IACVL,GAAgBK,GAASA,EAAQ,EAAI,WAAa,WAClDJ,GAAYI,GAAS,IAAM,KAGzBH,GAIAD,IACFD,GAAgBG,KAAKC,MAAMH,GAAY,SAJhCD,GAUI,SAASM,GAAT,GAA6E,IAAxDhN,EAAuD,EAAvDA,cAC5B2D,EAAQsJ,cACNC,EAAqClN,EAArCkN,UAAWC,EAA0BnN,EAA1BmN,WAAYC,EAAcpN,EAAdoN,UAC/B,EAA8BrL,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8CF,mBAA0B,CACtEsL,QAAQ,EACRC,SAAU,EACVC,aAAc,EACdC,YAAa,EACbC,YAAa,EACbC,iBAAkB,IANpB,mBAAOC,EAAP,KAAwBC,EAAxB,KAQA,EAAkC7L,mBAAyB,IAA3D,mBAAO8L,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,uCAAG,WAAOjI,EAAakI,GAApB,uBAAAjI,EAAA,sEACoBF,GAAiBC,GADrC,QACdc,EADc,UAIZqH,EAAc,IAAIpL,KACtBqL,KAAqBC,UAAgD,EAApC7G,SAASV,EAASwH,WAAY,IAAU,KAExEC,cACAC,MAAM,KAAK,GAGdC,GADIA,EAAkBjH,SAASV,EAASwH,WAAY,IAAMT,EAAgBL,UACtC,EAAIiB,EAAkB,EACjC,EAEzBC,EACEb,EAAgBF,YAAcZ,KAAK4B,KAAKnH,SAASV,EAAS8H,UAAW,IAA7B,SACxCf,EAAgBH,YAChBG,EAAgBD,iBAEdpG,SAASV,EAAS+H,QAAS,IAAM,IACnCJ,GACE1B,KAAKC,MAAMxF,SAASV,EAAS+H,QAAS,IAAMH,GAC5CI,MAGEC,EAAiBhC,KAAKC,MACzByB,EAAkBZ,EAAgBJ,aAAnC,OAGFO,GAAa,SAACD,GACZ,IAAMiB,EAAc,CAClBd,WACAe,QAAS,QACTP,qBACAQ,SAAUpI,EAASqI,uBACnBC,SAAUjB,EACVkB,mBAAoB3C,GAA0BqC,GAC9CF,QAAS/H,EAAS+H,QAClBjG,SAAUpB,SAASV,EAAS8H,UAAW,IACvC5I,OAGF,MAAM,GAAN,mBAAW+H,GAAX,CAAsBiB,OAExB7M,GAAW,IA5CO,2CAAH,wDAgFnB,OAhCAmN,qBAAU,WACRC,KAAMC,IAAIC,MAAwBC,MAAK,SAACC,GACd,MAApBA,EAASC,QACX9B,EAAmB,CACjBP,QAAQ,EACRC,SAAUhG,SAASmI,EAASE,KAAKA,KAAKrC,UACtCC,aAAcrB,WAAWuD,EAASE,KAAKA,KAAKpC,cAC5CC,YAAalG,SAASmI,EAASE,KAAKA,KAAKnC,aACzCC,YAAanG,SAASmI,EAASE,KAAKA,KAAKlC,aACzCC,iBAAkBpG,SAASmI,EAASE,KAAKA,KAAKjC,yBAInD,IAEH0B,qBAAU,WACU,KAAdlC,GAAkC,KAAdE,GAAoBO,EAAgBN,SACtDH,IAAcE,EAChBW,EAAcb,EAAW,gBAEzBa,EAAcb,EAAW,eACzBa,EAAcX,EAAW,gBAG5B,CAACF,EAAWE,EAAWO,IAE1ByB,qBAAU,WACW,KAAfjC,GAAqBQ,EAAgBN,QACvCU,EAAcZ,EAAY,cAE3B,CAACA,EAAYQ,IAGd,eAACxN,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,eAAeG,GAAI,CAAEY,GAAI,KAE3C,cAACwO,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAgBrP,GAAI,CAAEsP,SAAU,KAAhC,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,CAAW1K,MAAM,SAAjB,qBACA,cAAC0K,GAAA,EAAD,CAAW1K,MAAM,SAAjB,sBACA,cAAC0K,GAAA,EAAD,CAAW1K,MAAM,SAAjB,SACE,cAACnE,EAAA,EAAD,CAAShB,MAAM,+GAAf,SACE,eAACC,EAAA,EAAD,CAAOI,UAAU,MAAMC,eAAe,SAAtC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,YAApB,iCACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,YAAY2B,MAAM,MAAtC,sBAMN,cAAC0N,GAAA,EAAD,CAAW1K,MAAM,SAAjB,oBACA,cAAC0K,GAAA,EAAD,SAGJ,cAACC,GAAA,EAAD,UACGtC,EAAUuC,KAAI,SAACC,GAAD,OACb,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UAAYG,EAAIrC,WAChB,cAACkC,GAAA,EAAD,CAAW1K,MAAM,SAAjB,SAA2B6K,EAAItB,UAC/B,cAACmB,GAAA,EAAD,CAAW1K,MAAM,SAAjB,SAA2B6K,EAAIrB,WAC/B,cAACkB,GAAA,EAAD,CAAW1K,MAAM,SAAjB,SAA2B6K,EAAIlB,qBAC/B,cAACe,GAAA,EAAD,CAAW1K,MAAM,SAAjB,SACE,cAAC8K,GAAA,EAAD,CACEzP,QAAgC,UAAvB8C,EAAMc,QAAQ8L,KAAmB,QAAU,SACpD/N,MAAO,UAFT,0BAOF,cAAC0N,GAAA,EAAD,CAAW1K,MAAM,QAAjB,SACE,cAACiD,GAAD,CAAgB3C,IAAKuK,EAAIvK,IAAK4C,SAAU2H,EAAI3H,eAdjC2H,EAAIrC,sBAsB7B,cAAC1N,EAAA,EAAD,CACEE,GAAI,CAAEmB,OAAQ,QAASiB,QAASZ,EAAU,OAAS,QACnDgB,WAAW,SACXrC,eAAe,SAHjB,SAKE,cAAC,IAAD,CAAwB6B,MAAO,UAAWR,QAASA,SC3hB5C,SAASwO,GAAT,GAAyE,IAAxDxQ,EAAuD,EAAvDA,cACxB2D,EAAQsJ,cACOwD,YAAc9M,EAAM+M,YAAYC,GAAG,OAExD,OACE,eAAC3L,EAAA,EAAD,CAAMU,WAAS,EAACnF,QAAS,EAAzB,UACE,cAACyE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAvB,SACE,eAACtQ,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAACqB,EAAD,CAAW5B,cAAeA,IAC1B,cAACgN,GAAD,CAAWhN,cAAeA,SAI9B,cAACgF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAvB,SACE,eAACtQ,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAAC,EAAD,CAAYP,cAAeA,IAC3B,cAACD,EAAD,CAAcC,cAAeA,Y,kCCVvCuD,IAAWC,QAAU,8BAerB,IAAMqN,GAAuC,CAC3CnO,aAAc,GACd1B,gBAAiB,GACjBC,QAAS,GACTmB,UAAW,GACXwD,QAAS,IACT1C,SAAU,GACVG,KAAM,GACNC,YAAa,GACb4J,UAAW,GACXE,UAAW,GACXD,WAAY,IAGR2D,GAAe,SAACC,GACpB,IAAMC,EAAYD,EAAQE,MAAM,aAChC,OAAID,EACKA,EAAU,GACL,MAGD,SAASE,KACtB,IAAQC,EAAiBC,cAAjBD,aACJE,EAAa,GAEjB,EAAuCC,cAA/BvC,EAAR,EAAQA,QAAmB9N,GAA3B,EAAiBsQ,SAAjB,EAA2BtQ,SAC3B,OAAQ8N,GACN,IAAK,UACHsC,EAAaG,KAAY,GACzB,MACF,QACEH,EAAa,IAGjB,MAA0CtP,mBAA4B8O,IAAtE,mBAAO7Q,EAAP,KAAsByR,EAAtB,KA6DA,OA3DArC,qBAAU,WAAM,4CACd,wCAAArJ,EAAA,6DACQM,EAAW,IAAIqL,KAAOC,UAAUC,gBAAgBP,GAChDQ,EAAmB,IAAIH,KAAOI,SAAS9Q,KAAiB+Q,KAAK1L,GAFrE,SAI2BwL,EAAiBG,QAAQ/Q,GAJpD,cAIQgR,EAJR,gBAKgCJ,EAAiBK,UAAUD,GAL3D,cAKQE,EALR,OAKwEC,WALxE,UAMyBP,EAAiBQ,SAASpR,GANnD,QAMQoR,EANR,OAQER,EAAiBS,iBAAiBrR,GAASuO,MAAK,SAACtC,GAC/CuE,GAAiB,SAACzR,GAAD,mBAAC,eACbA,GADY,IAEfkN,UAAW4D,GAAa5D,IAAc,WAIpCqF,EAAczB,GAAauB,GAEjC9O,IAAWiP,UAAUP,GAAYzC,MAAK,SAACiD,GACrChB,GAAiB,SAACzR,GAAD,mBAAC,eACbA,GADY,IAEfoC,UAAWqQ,EACX7M,QAASuM,EACTzP,aAAcuP,EACdhR,QAASA,GAAW,GACpBD,6BAIAuR,IACFd,GAAiB,SAACzR,GAAD,mBAAC,eACbA,GADY,IAEfmN,WAAYoF,OAGRG,EANS,UAMSC,KAA+B,GANxC,YAM8CJ,GAC7DlD,KAAMC,IAAIoD,GAAclD,MAAK,SAACC,GAC5B,IAAMpM,EAAOoM,EAASE,KAAKtM,MAAQ,GAC7BC,EAAcmM,EAASE,KAAKrM,aAAe,GAEjD,GAAImM,EAASE,MAAQF,EAASE,KAAKiD,MAAO,CACxC,IAAMC,EAAW/B,GAAarB,EAASE,KAAKiD,OAC5C,GAAIC,EAAU,CACZ,IAAM3P,EAAQ,UAAMyP,KAA+B,GAArC,YAA2CE,GACzDpB,GAAiB,SAACzR,GAAD,mBAAC,eACbA,GADY,IAEfkD,WACAG,OACAC,cACA8J,UAAWyF,aAhDvB,6CADc,uBAAC,WAAD,wBAwDdC,KACC,IAGD,cAACC,EAAA,EAAD,CAAM1S,MAAK,yBAAoBL,EAAcqD,MAA7C,SACE,cAAC2P,EAAA,EAAD,CAAWjJ,UAAUoH,GAAuB,KAA5C,SACE,cAACjQ,EAAA,EAAD,UACE,cAACsP,GAAD,CAAOxQ,cAAeA,Y,2GCzH1B+S,EAAOE,sBAAsC,WAAqC5J,GAArC,IAAG6J,EAAH,EAAGA,SAAH,IAAa7S,aAAb,MAAqB,GAArB,EAA4B8S,EAA5B,wBACjD,eAAC,IAAD,yBAAK9J,IAAKA,GAAS8J,GAAnB,cACE,cAAC,IAAD,UACE,gCAAQ9S,MAET6S,SAIUH,O,iCCrBf,kCAAO,IAAM/R,EAA0B,8C,iCCAvC,kCAAO,IAAM+Q,EAAW,CACtB,CAAEqB,OAAQ,GAAIC,gBAAiB,aAAcC,KAAM,eACnD,CACEC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTC,aAAc,UACdpQ,KAAM,QACNiQ,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdpQ,KAAM,WACNiQ,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdpQ,KAAM,UACNiQ,KAAM,YAGVjQ,KAAM,WACNiQ,KAAM,SAER,CACEC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTC,aAAc,UACdpQ,KAAM,QACNiQ,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdpQ,KAAM,WACNiQ,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,OACdpQ,KAAM,WACNiQ,KAAM,SAGVjQ,KAAM,iBACNiQ,KAAM,SAER,CACEC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTC,aAAc,UACdpQ,KAAM,OACNiQ,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdpQ,KAAM,KACNiQ,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdpQ,KAAM,UACNiQ,KAAM,YAGVjQ,KAAM,WACNiQ,KAAM,SAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWpQ,KAAM,KAAMiQ,KAAM,WAC7C,CAAEG,aAAc,UAAWpQ,KAAM,UAAWiQ,KAAM,YAEpDjQ,KAAM,UACNqQ,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWpQ,KAAM,QAASiQ,KAAM,YACzDjQ,KAAM,YACNqQ,QAAS,CAAC,CAAED,aAAc,UAAWpQ,KAAM,GAAIiQ,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWpQ,KAAM,UAAWiQ,KAAM,YAC3DjQ,KAAM,cACNqQ,QAAS,CAAC,CAAED,aAAc,UAAWpQ,KAAM,GAAIiQ,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWpQ,KAAM,UAAWiQ,KAAM,YAC3DjQ,KAAM,mBACNqQ,QAAS,CAAC,CAAED,aAAc,SAAUpQ,KAAM,GAAIiQ,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWpQ,KAAM,UAAWiQ,KAAM,YAC3DjQ,KAAM,uBACNqQ,QAAS,CAAC,CAAED,aAAc,SAAUpQ,KAAM,GAAIiQ,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWpQ,KAAM,QAASiQ,KAAM,WAChD,CAAEG,aAAc,UAAWpQ,KAAM,WAAYiQ,KAAM,YAErDjQ,KAAM,mBACNqQ,QAAS,CAAC,CAAED,aAAc,OAAQpQ,KAAM,GAAIiQ,KAAM,SAClDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWpQ,KAAM,WAAYiQ,KAAM,WACnD,CAAEG,aAAc,SAAUpQ,KAAM,eAAgBiQ,KAAM,UACtD,CAAEG,aAAc,SAAUpQ,KAAM,gBAAiBiQ,KAAM,UACvD,CAAEG,aAAc,SAAUpQ,KAAM,oBAAqBiQ,KAAM,WAE7DjQ,KAAM,cACNqQ,QAAS,CAAC,CAAED,aAAc,UAAWpQ,KAAM,GAAIiQ,KAAM,YACrDD,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,GACR/P,KAAM,OACNqQ,QAAS,CAAC,CAAED,aAAc,SAAUpQ,KAAM,GAAIiQ,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWpQ,KAAM,UAAWiQ,KAAM,YAC3DjQ,KAAM,UACNqQ,QAAS,CAAC,CAAED,aAAc,UAAWpQ,KAAM,GAAIiQ,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWpQ,KAAM,OAAQiQ,KAAM,WAC/C,CAAEG,aAAc,UAAWpQ,KAAM,KAAMiQ,KAAM,WAC7C,CAAEG,aAAc,UAAWpQ,KAAM,UAAWiQ,KAAM,YAEpDjQ,KAAM,mBACNqQ,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWpQ,KAAM,OAAQiQ,KAAM,WAC/C,CAAEG,aAAc,UAAWpQ,KAAM,KAAMiQ,KAAM,WAC7C,CAAEG,aAAc,UAAWpQ,KAAM,UAAWiQ,KAAM,WAClD,CAAEG,aAAc,QAASpQ,KAAM,QAASiQ,KAAM,UAEhDjQ,KAAM,mBACNqQ,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWpQ,KAAM,WAAYiQ,KAAM,WACnD,CAAEG,aAAc,OAAQpQ,KAAM,WAAYiQ,KAAM,SAElDjQ,KAAM,oBACNqQ,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,SAAUpQ,KAAM,cAAeiQ,KAAM,WAC9DjQ,KAAM,oBACNqQ,QAAS,CAAC,CAAED,aAAc,OAAQpQ,KAAM,GAAIiQ,KAAM,SAClDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACR/P,KAAM,SACNqQ,QAAS,CAAC,CAAED,aAAc,SAAUpQ,KAAM,GAAIiQ,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWpQ,KAAM,QAASiQ,KAAM,YACzDjQ,KAAM,eACNqQ,QAAS,CAAC,CAAED,aAAc,UAAWpQ,KAAM,GAAIiQ,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWpQ,KAAM,QAASiQ,KAAM,WAChD,CAAEG,aAAc,UAAWpQ,KAAM,QAASiQ,KAAM,YAElDjQ,KAAM,sBACNqQ,QAAS,CAAC,CAAED,aAAc,UAAWpQ,KAAM,GAAIiQ,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWpQ,KAAM,UAAWiQ,KAAM,YAC3DjQ,KAAM,WACNqQ,QAAS,CAAC,CAAED,aAAc,SAAUpQ,KAAM,GAAIiQ,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACR/P,KAAM,cACNqQ,QAAS,CAAC,CAAED,aAAc,UAAWpQ,KAAM,GAAIiQ,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWpQ,KAAM,OAAQiQ,KAAM,WAC/C,CAAEG,aAAc,UAAWpQ,KAAM,KAAMiQ,KAAM,WAC7C,CAAEG,aAAc,UAAWpQ,KAAM,UAAWiQ,KAAM,YAEpDjQ,KAAM,eACNqQ,QAAS,GACTL,gBAAiB,aACjBC,KAAM,c,iCC9OV,2GAMe,SAASvK,IACtB,MAA2C4K,cAAnCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,cAqCzB,OApCyB,SACvBrR,EACAsR,EACAC,EACAC,EACAC,GAEAL,EACE,8BACE,cAAC,IAAD,CAAY/S,QAAQ,QAAQL,GAAI,CAAEgC,MAAO,kBAAzC,SACGsR,MAGL,CACEjT,QAAS2B,EACTuR,mBACAG,OAAQ,SAACC,GAAD,OACN,qCACGF,GACC,cAAC,IAAD,CACE3K,KAAK,QACL9G,MAAiB,YAAVA,EAAsBA,EAAQ,UACrCjB,KAAM0S,EACNzS,OAAO,SAJT,SAMGwS,IAGL,cAAC,IAAD,CAAY1K,KAAK,QAAQ9G,MAAM,UAAU+G,QAAS,kBAAMsK,EAAcM,IAAtE,SACE,cAAC,IAAD,CAAM3K,KAAM4K,IAAWnR,MAAO,GAAItB,OAAQ,gB,oJCzBlD0S,EAAY3Q,YAAO,OAAPA,EAChB,YASO,IARLC,EAQI,EARJA,MACA2Q,EAOI,EAPJA,WAQMC,EAAiC,UAAvB5Q,EAAMc,QAAQ8L,KACtB/N,EAAmB8R,EAAnB9R,MAAO3B,EAAYyT,EAAZzT,QAkBf,OAAO,aACLc,OAAQ,GACRmO,SAAU,GACV0E,WAAY,EACZC,aAAc,EACdC,OAAQ,UACR1R,WAAY,SACZ2R,WAAY,SACZ/R,QAAS,cACTjC,eAAgB,SAChBiU,QAASjR,EAAMpD,QAAQ,EAAG,GAC1BiC,MAAOmB,EAAMc,QAAQoQ,KAAK,KAC1BC,SAAUnR,EAAMoR,WAAWC,QAAQ,IACnCC,WAAYtR,EAAMoR,WAAWE,WAC7B1Q,gBAAiBZ,EAAMc,QAAQoQ,KAAK,KACpCK,WAAYvR,EAAMoR,WAAWI,gBAEf,YAAV3S,EAAA,uCAEkB,WAAZ3B,GAAA,eAnCQ,SAAC2B,GAAD,MAAyB,CAC3CA,MAAOmB,EAAMc,QAAQjC,GAAO4S,aAC5B7Q,gBAAiBZ,EAAMc,QAAQjC,GAAO6S,MAiCCC,CAAY9S,KAC7B,aAAZ3B,GAAA,eA/BU,SAAC2B,GAAD,MAAyB,CAC7CA,MAAOmB,EAAMc,QAAQjC,GAAO6S,KAC5B9Q,gBAAiB,cACjBgR,OAAO,aAAD,OAAe5R,EAAMc,QAAQjC,GAAO6S,OA4BDG,CAAchT,KACjC,UAAZ3B,GAAA,eA1BO,SAAC2B,GAAD,MAAyB,CAC1CA,MAAOmB,EAAMc,QAAQjC,GAAO+R,EAAU,OAAS,SAC/ChQ,gBAAiBC,YAAMb,EAAMc,QAAQjC,GAAO6S,KAAM,MAwBZI,CAAWjT,KAJ7C,2BAOkB,aAAZ3B,GAA0B,CAC5B0D,gBAAiB,cACjB/B,MAAOmB,EAAMc,QAAQqP,KAAKpP,QAC1B6Q,OAAO,aAAD,OAAe5R,EAAMc,QAAQoQ,KAAK,UAE1B,UAAZhU,GAAuB,CACzB2B,MAAO+R,EAAU5Q,EAAMc,QAAQqP,KAAK4B,UAAY/R,EAAMc,QAAQkR,OAAOC,MACrErR,gBAAiBZ,EAAMc,QAAQoQ,KAAK,aAcnC,SAASvE,EAAT,GAAoF,IAAD,IAAlE9N,aAAkE,MAA1D,UAA0D,MAA/C3B,eAA+C,MAArC,QAAqC,EAA5BqS,EAA4B,EAA5BA,SAAU1S,EAAkB,EAAlBA,GACxEmD,EAAQsJ,cAEd,OACE,cAACoH,EAAD,CAAWC,WAAY,CAAE9R,QAAO3B,WAAWL,GAAIA,EAAImD,MAAOA,EAA1D,SACGuP","file":"static/js/13.9258b714.chunk.js","sourcesContent":["import {\r\n  Card,\r\n  Typography,\r\n  CardHeader,\r\n  Stack,\r\n  ButtonBase,\r\n  Box,\r\n  Tooltip,\r\n  IconButton\r\n} from '@mui/material';\r\n\r\nimport { AssetAndOwnerType } from '../../../pages/AssetViewer';\r\nimport { shortenAddress } from 'utils/formatAddress';\r\nimport useLocales from '../../../hooks/useLocales';\r\nexport default function AssetDetails({ assetAndOwner }: { assetAndOwner: AssetAndOwnerType }) {\r\n  const { translate } = useLocales();\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Asset Details\" />\r\n\r\n      <Stack spacing={1} sx={{ p: 3 }}>\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Typography variant=\"body2\">{translate(`assetDetail.contract`)}</Typography>\r\n          <ButtonBase>\r\n            <Typography variant=\"body2\">\r\n              {shortenAddress(assetAndOwner.contractAddress, 5)}\r\n            </Typography>\r\n          </ButtonBase>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Typography variant=\"body2\">{translate(`assetDetail.id`)}</Typography>\r\n          <ButtonBase>\r\n            <Typography variant=\"body2\">{assetAndOwner.tokenId}</Typography>\r\n          </ButtonBase>\r\n        </Stack>\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Typography variant=\"body2\">{translate(`assetDetail.standard`)}</Typography>\r\n          <Typography variant=\"body2\">ERC721</Typography>\r\n        </Stack>\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Typography variant=\"body2\">{translate(`assetDetail.network`)}</Typography>\r\n          <Typography variant=\"body2\">Polygon</Typography>\r\n        </Stack>\r\n      </Stack>\r\n      <Box sx={{ textAlign: 'center', mb: 2 }}>\r\n        <Tooltip title=\"Transaction History\">\r\n          <IconButton\r\n            href={`https://polygonscan.com/token/${assetAndOwner.contractAddress}?a=${assetAndOwner.tokenId}`}\r\n            target=\"_blank\"\r\n          >\r\n            <Box component=\"img\" src=\"./static/icons/shared/polygon.svg\" sx={{ height: 24 }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Opensea Viewer\">\r\n          <IconButton\r\n            href={`https://opensea.io/assets/matic/${assetAndOwner.contractAddress}/${assetAndOwner.tokenId}`}\r\n            target=\"_blank\"\r\n          >\r\n            <Box component=\"img\" src=\"./static/icons/shared/opensea.svg\" sx={{ height: 24 }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { useState, useRef } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport heartFill from '@iconify/icons-eva/heart-fill';\r\nimport shareFill from '@iconify/icons-eva/share-fill';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport messageSquareFill from '@iconify/icons-eva/message-square-fill';\r\n// material\r\nimport {\r\n  Box,\r\n  Link,\r\n  Card,\r\n  Stack,\r\n  Checkbox,\r\n  Typography,\r\n  CardHeader,\r\n  IconButton,\r\n  FormControlLabel\r\n} from '@mui/material';\r\n// utils\r\nimport { fDate } from '../../../utils/formatTime';\r\nimport { fShortenNumber } from '../../../utils/formatNumber';\r\n//\r\nimport { MAvatar } from '../../@material-extend';\r\nimport { AssetAndOwnerType } from '../../../pages/AssetViewer';\r\nimport { shortenAddress } from 'utils/formatAddress';\r\nimport { LineScalePulseOutRapid } from 'react-pure-loaders';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AssetCard({ assetAndOwner }: { assetAndOwner: AssetAndOwnerType }) {\r\n  const commentInputRef = useRef<HTMLInputElement>(null);\r\n  const [isLiked, setLiked] = useState(true);\r\n  const [likes, setLikes] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleLike = () => {\r\n    setLiked(true);\r\n    setLikes((prevLikes) => prevLikes + 1);\r\n  };\r\n\r\n  const handleUnlike = () => {\r\n    setLiked(false);\r\n    setLikes((prevLikes) => prevLikes - 1);\r\n  };\r\n\r\n  const handleClickComment = () => {\r\n    commentInputRef.current?.focus();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        disableTypography\r\n        avatar={<MAvatar src={assetAndOwner.ownerIcon} alt=\"uniqueIcon\" />}\r\n        title={\r\n          <Link to=\"#\" variant=\"subtitle2\" color=\"text.primary\" component={RouterLink}>\r\n            {shortenAddress(assetAndOwner.ownerAddress, 8)}\r\n          </Link>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"caption\" sx={{ display: 'block', color: 'text.secondary' }}>\r\n            {fDate(Date.now())}\r\n          </Typography>\r\n        }\r\n        // action={\r\n        //   <IconButton>\r\n        //     <Icon icon={moreVerticalFill} width={20} height={20} />\r\n        //   </IconButton>\r\n        // }\r\n      />\r\n\r\n      <Stack spacing={3} sx={{ p: 3 }}>\r\n        <Box>\r\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" sx={{ width: '100%' }}>\r\n            <Box\r\n              component=\"img\"\r\n              alt=\"post media\"\r\n              src={assetAndOwner.imageUrl}\r\n              onLoad={() => setLoading(false)}\r\n              sx={{\r\n                display: loading ? 'none' : 'block'\r\n              }}\r\n            />\r\n          </Stack>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            sx={{ width: '100%', display: loading ? 'flex' : 'none', mt: 5 }}\r\n          >\r\n            <LineScalePulseOutRapid color={'#637381'} loading={loading} />\r\n          </Stack>\r\n        </Box>\r\n\r\n        {/* <Stack direction=\"row\" alignItems=\"center\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                size=\"small\"\r\n                color=\"error\"\r\n                checked={isLiked}\r\n                icon={<Icon icon={heartFill} />}\r\n                checkedIcon={<Icon icon={heartFill} />}\r\n                onChange={isLiked ? handleUnlike : handleLike}\r\n              />\r\n            }\r\n            label={fShortenNumber(likes)}\r\n            sx={{ minWidth: 72, mr: 0 }}\r\n          />\r\n\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <IconButton onClick={handleClickComment}>\r\n            <Icon icon={messageSquareFill} width={20} height={20} />\r\n          </IconButton>\r\n          <IconButton>\r\n            <Icon icon={shareFill} width={20} height={20} />\r\n          </IconButton>\r\n        </Stack> */}\r\n        <Stack>\r\n          <Typography variant=\"subtitle1\">{assetAndOwner.name}</Typography>\r\n          <Typography variant=\"body2\">{assetAndOwner.description}</Typography>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fDate(date: Date | string | number) {\r\n  return format(new Date(date), 'dd MMMM yyyy');\r\n}\r\n\r\nexport function fDateTime(date: Date | string | number) {\r\n  return format(new Date(date), 'dd MMM yyyy p');\r\n}\r\n\r\nexport function fTimestamp(date: Date | string | number) {\r\n  return getTime(new Date(date));\r\n}\r\n\r\nexport function fDateTimeSuffix(date: Date | string | number) {\r\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\r\n}\r\n\r\nexport function fToNow(date: Date | string | number) {\r\n  return formatDistanceToNow(new Date(date), {\r\n    addSuffix: true\r\n  });\r\n}\r\n","// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, Card, Grid, Avatar, Tooltip, Divider, Typography, IconButton } from '@mui/material';\r\n// utils\r\n// import { fShortenNumber } from '../../../../utils/formatNumber';\r\n// @types\r\n//\r\nimport { AssetAndOwnerType } from '../../../pages/AssetViewer';\r\n\r\nimport SvgIconStyle from '../../SvgIconStyle';\r\nimport Identicons from '@nimiq/identicons';\r\nimport { shortenAddress } from 'utils/formatAddress';\r\n\r\nIdenticons.svgPath = './static/identicons.min.svg';\r\n\r\nconst CardMediaStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  position: 'relative',\r\n  justifyContent: 'center',\r\n  paddingTop: 'calc(100% * 5 / 16)',\r\n  '&:before': {\r\n    top: 0,\r\n    zIndex: 9,\r\n    content: \"''\",\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    backdropFilter: 'blur(3px)',\r\n    WebkitBackdropFilter: 'blur(3px)', // Fix on Mobile\r\n    borderTopLeftRadius: theme.shape.borderRadiusMd,\r\n    borderTopRightRadius: theme.shape.borderRadiusMd,\r\n    backgroundColor: alpha(theme.palette.primary.darker, 0.72)\r\n  }\r\n}));\r\n\r\nconst CoverImgStyle = styled('img')(({ theme }) => ({\r\n  top: 0,\r\n  zIndex: 8,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction InfoItem(name: string, number: string) {\r\n  return (\r\n    <Grid item xs={6} sx={{ textAlign: 'center' }}>\r\n      <Typography variant=\"caption\" sx={{ mb: 0.5, color: 'text.secondary', display: 'block' }}>\r\n        {name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">{number}</Typography>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default function UserCard({ assetAndOwner }: { assetAndOwner: AssetAndOwnerType }) {\r\n  return (\r\n    <Card>\r\n      <CardMediaStyle>\r\n        <SvgIconStyle\r\n          color=\"paper\"\r\n          src=\"/static/icons/shape-avatar.svg\"\r\n          sx={{\r\n            width: 144,\r\n            height: 62,\r\n            zIndex: 10,\r\n            bottom: -26,\r\n            position: 'absolute'\r\n          }}\r\n        />\r\n        <Avatar\r\n          alt=\"Hello\"\r\n          src={assetAndOwner.ownerIcon}\r\n          sx={{\r\n            width: 64,\r\n            height: 64,\r\n            zIndex: 11,\r\n            position: 'absolute',\r\n            transform: 'translateY(-50%)'\r\n          }}\r\n        />\r\n        <CoverImgStyle alt=\"cover\" src={assetAndOwner.ownerIcon} />\r\n      </CardMediaStyle>\r\n\r\n      <Typography variant=\"subtitle1\" align=\"center\" sx={{ mt: 6 }}>\r\n        {shortenAddress(assetAndOwner.ownerAddress, 5)}\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary' }}>\r\n        Polygon\r\n      </Typography>\r\n\r\n      <Box sx={{ textAlign: 'center', mt: 2, mb: 2.5 }}>\r\n        <Tooltip title=\"PolygonScan\">\r\n          <IconButton\r\n            href={`https://polygonscan.com/address/${assetAndOwner.ownerAddress}`}\r\n            target=\"_blank\"\r\n          >\r\n            <Box component=\"img\" src=\"./static/icons/shared/polygon.svg\" sx={{ height: 24 }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <Grid container sx={{ py: 3 }}>\r\n        {InfoItem('Total Minted NFT', assetAndOwner.balance)}\r\n        {InfoItem('Total rocket', '0')}\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport { ApiPromise, WsProvider } from '@polkadot/api';\r\nimport { typesBundleForPolkadot } from '@crustio/type-definitions';\r\nimport { LineScalePulseOutRapid } from 'react-pure-loaders';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  Menu,\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Divider,\r\n  MenuItem,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Typography,\r\n  CardHeader,\r\n  TableContainer,\r\n  DialogProps,\r\n  Button,\r\n  Dialog,\r\n  Box,\r\n  Tooltip,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  TextField,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n// utils\r\nimport Label from '../../Label';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport { MIconButton } from '../../@material-extend';\r\nimport { AssetAndOwnerType } from '../../../pages/AssetViewer';\r\n\r\nimport marketTypes from '@crustio/type-definitions/src/market';\r\nimport { web3Accounts, web3Enable, web3FromSource } from '@polkadot/extension-dapp';\r\nimport { InjectedAccountWithMeta } from '@polkadot/extension-inject/types';\r\n\r\nimport useSnackbarAction from 'hooks/useSnackbarAction';\r\nimport {\r\n  CRUST_CHAIN_RPC,\r\n  CRUST_CONSENSUS_DATE,\r\n  CRUST_WALLET_WIKI,\r\n  METADATA_SUBSCAN_CRUST,\r\n  RENEW_PERIOD_BLOCK_NUMBER\r\n} from 'assets/COMMON_VARIABLES';\r\n\r\ntype FileInfo = typeof marketTypes.types.FileInfo;\r\n\r\nconst getStatusMainnet = async (cid: string) => {\r\n  try {\r\n    const wsProvider = new WsProvider(CRUST_CHAIN_RPC);\r\n    const chain = new ApiPromise({\r\n      provider: wsProvider,\r\n      typesBundle: typesBundleForPolkadot\r\n    });\r\n    await chain.isReadyOrError;\r\n\r\n    const fileInfo = await chain.query.market.files(cid);\r\n    chain.disconnect();\r\n    return fileInfo.toJSON() as FileInfo;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst publishCidMainnet = async (cid: string, fileSizeInBytes: number) => {\r\n  const extensions = await web3Enable('NFT Dapp');\r\n\r\n  if (extensions.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const allAccounts: InjectedAccountWithMeta[] = await web3Accounts();\r\n\r\n  let crustAccountIndex = parseInt(localStorage.getItem('selectedAccountCrustIndex') || '0', 10);\r\n\r\n  crustAccountIndex =\r\n    crustAccountIndex < allAccounts.length && crustAccountIndex >= 0 ? crustAccountIndex : 0;\r\n\r\n  const account = allAccounts[crustAccountIndex];\r\n\r\n  const injector = await web3FromSource(account.meta.source);\r\n\r\n  const wsProvider = new WsProvider(CRUST_CHAIN_RPC);\r\n  const chain = new ApiPromise({\r\n    provider: wsProvider,\r\n    typesBundle: typesBundleForPolkadot\r\n  });\r\n\r\n  await chain.isReadyOrError;\r\n\r\n  const transferExtrinsic = chain.tx.market.placeStorageOrder(cid, fileSizeInBytes, 0, '');\r\n\r\n  const txHash = await transferExtrinsic.signAndSend(account.address, {\r\n    signer: injector.signer,\r\n    nonce: -1\r\n  });\r\n\r\n  chain.disconnect();\r\n\r\n  return txHash;\r\n};\r\n\r\nconst addPrepaid = async (cid: string, amount: number) => {\r\n  const extensions = await web3Enable('NFT Dapp');\r\n\r\n  if (extensions.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const allAccounts: InjectedAccountWithMeta[] = await web3Accounts();\r\n\r\n  let crustAccountIndex = parseInt(localStorage.getItem('selectedAccountCrustIndex') || '0', 10);\r\n\r\n  crustAccountIndex =\r\n    crustAccountIndex < allAccounts.length && crustAccountIndex >= 0 ? crustAccountIndex : 0;\r\n\r\n  const account = allAccounts[crustAccountIndex];\r\n\r\n  const injector = await web3FromSource(account.meta.source);\r\n\r\n  const wsProvider = new WsProvider(CRUST_CHAIN_RPC);\r\n  const chain = new ApiPromise({\r\n    provider: wsProvider,\r\n    typesBundle: typesBundleForPolkadot\r\n  });\r\n\r\n  await chain.isReadyOrError;\r\n\r\n  const ap = chain.tx.market.addPrepaid(cid, amount);\r\n\r\n  const txHash = await ap.signAndSend(account.address, {\r\n    signer: injector.signer,\r\n    nonce: -1\r\n  });\r\n\r\n  chain.disconnect();\r\n\r\n  return txHash;\r\n};\r\n\r\nfunction MoreMenuButton({ cid, fileSize }: { cid: string; fileSize: number }) {\r\n  const menuRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const onSnackbarAction = useSnackbarAction();\r\n  const [addPrepaidOpen, setAddPrepaidOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRenewFile = async (cid: string, fileSize: number) => {\r\n    const txHash = await publishCidMainnet(cid, fileSize);\r\n    if (txHash) {\r\n      onSnackbarAction(\r\n        'success',\r\n        'Successfully renew file',\r\n        null,\r\n        'SUBSCAN',\r\n        `https://crust.subscan.io/extrinsic/${txHash}`\r\n      );\r\n    } else {\r\n      onSnackbarAction(\r\n        'warning',\r\n        'Please verify your Crust Wallet',\r\n        null,\r\n        'LEARN',\r\n        CRUST_WALLET_WIKI\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <MIconButton ref={menuRef} size=\"large\" onClick={handleOpen}>\r\n          <Icon icon={moreVerticalFill} width={20} height={20} />\r\n        </MIconButton>\r\n      </>\r\n\r\n      <Menu\r\n        open={open}\r\n        anchorEl={menuRef.current}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          sx: { width: 200, maxWidth: '100%' }\r\n        }}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleRenewFile(cid, fileSize);\r\n            handleClose();\r\n          }}\r\n        >\r\n          <Icon icon=\"ic:baseline-autorenew\" width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Renew\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            setAddPrepaidOpen(true);\r\n            handleClose();\r\n          }}\r\n        >\r\n          <Icon icon=\"carbon:add-alt\" width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Add Lifetime\r\n          </Typography>\r\n        </MenuItem>\r\n\r\n        <Divider />\r\n        <MenuItem\r\n          onClick={() => {\r\n            window.open(`https://ipfs.io/ipfs/${cid}`, '_blank');\r\n            handleClose();\r\n          }}\r\n        >\r\n          <Icon icon=\"bx:bx-cloud-download\" width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Download\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            navigator.clipboard.writeText(`https://ipfs.io/ipfs/${cid}`);\r\n            handleClose();\r\n            onSnackbarAction('success', `Copied file's address`, 2000);\r\n          }}\r\n        >\r\n          <Icon icon=\"fluent:document-copy-20-regular\" width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Copy file's address\r\n          </Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      <AddPrepaidDialog\r\n        cid={cid}\r\n        addPrepaidOpen={addPrepaidOpen}\r\n        setAddPrepaidOpen={setAddPrepaidOpen}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport function AddPrepaidDialog({\r\n  cid,\r\n  addPrepaidOpen,\r\n  setAddPrepaidOpen\r\n}: {\r\n  cid: string;\r\n  addPrepaidOpen: boolean;\r\n  setAddPrepaidOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) {\r\n  const [fullWidth, setFullWidth] = useState(true);\r\n  const [maxWidth, setMaxWidth] = useState<DialogProps['maxWidth']>('sm');\r\n  const [prepaidAmountRaw, setPrepaidAmountRaw] = useState('');\r\n  const [prepaidAmount, setPrepaidAmount] = useState(0);\r\n  const [prepaidAmountError, setPrepaidAmountError] = useState(false);\r\n  const onSnackbarAction = useSnackbarAction();\r\n\r\n  const handleClose = () => {\r\n    setAddPrepaidOpen(false);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    if (!prepaidAmountError) {\r\n      setAddPrepaidOpen(false);\r\n      const txHash = await addPrepaid(cid, prepaidAmount * 10 ** 12);\r\n      if (txHash) {\r\n        onSnackbarAction(\r\n          'success',\r\n          'Successfully add prepaid',\r\n          null,\r\n          'SUBSCAN',\r\n          `https://crust.subscan.io/extrinsic/${txHash}`\r\n        );\r\n      } else {\r\n        onSnackbarAction(\r\n          'warning',\r\n          'Please verify your Crust Wallet',\r\n          null,\r\n          'LEARN',\r\n          CRUST_WALLET_WIKI\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrepaidAmountRaw = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPrepaidAmountRaw(e.target.value);\r\n    if (isNaN(e.target.value as any) || isNaN(parseFloat(e.target.value))) {\r\n      setPrepaidAmountError(true);\r\n    } else {\r\n      setPrepaidAmountError(false);\r\n      setPrepaidAmount(parseFloat(e.target.value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={addPrepaidOpen} maxWidth={maxWidth} onClose={handleClose} fullWidth={fullWidth}>\r\n        <DialogTitle>Amount of prepaid in CRU</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            The file will be automatically renewed with the prepaid fund\r\n          </DialogContentText>\r\n\r\n          <Box\r\n            sx={{\r\n              pt: 2,\r\n              margin: 'auto',\r\n              display: 'flex',\r\n              width: '100%',\r\n              flexDirection: 'column'\r\n            }}\r\n          >\r\n            <TextField\r\n              error={prepaidAmountError}\r\n              helperText={prepaidAmountError ? 'Please enter a valid number' : null}\r\n              id=\"amout-CRU-prepaid\"\r\n              value={prepaidAmountRaw}\r\n              onChange={handlePrepaidAmountRaw}\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position=\"start\">CRU</InputAdornment>\r\n              }}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"contained\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleConfirm} variant=\"contained\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\ntype FileInfoType = {\r\n  cid: string;\r\n  fileType: string;\r\n  network: string;\r\n  replicas: string;\r\n  realTimeStorageFee: number;\r\n  expireOn: string;\r\n  guaranteedLifetime: string;\r\n  prepaid: string;\r\n  fileSize: number;\r\n};\r\n\r\ntype MetaDataSubscan = {\r\n  isDone: boolean;\r\n  blockNum: number;\r\n  avgBlockTime: number;\r\n  fileBaseFee: number;\r\n  fileByteFee: number;\r\n  fileKeysCountFee: number;\r\n};\r\n\r\nconst daysNumberToHumanReadable = (days: number): string => {\r\n  let daysReadable = '';\r\n  let daysLeft = days;\r\n  const year = Math.floor(daysLeft / 365);\r\n  if (year) {\r\n    daysReadable += year + (year > 1 ? ' years ' : ' year ');\r\n    daysLeft -= year * 365;\r\n  }\r\n  const month = Math.floor(daysLeft / (365 / 12));\r\n  if (month > 0) {\r\n    daysReadable += month + (month > 1 ? ' months ' : ' month ');\r\n    daysLeft -= month * (365 / 12);\r\n  }\r\n\r\n  if (year) {\r\n    return daysReadable;\r\n  }\r\n\r\n  if (daysLeft) {\r\n    daysReadable += Math.floor(daysLeft) + ' days';\r\n  }\r\n\r\n  return daysReadable;\r\n};\r\n\r\nexport default function FilesInfo({ assetAndOwner }: { assetAndOwner: AssetAndOwnerType }) {\r\n  const theme = useTheme();\r\n  const { contentId, metadataId, nftCardId } = assetAndOwner;\r\n  const [loading, setLoading] = useState(true);\r\n  const [metadataSubscan, setMetadataSubscan] = useState<MetaDataSubscan>({\r\n    isDone: false,\r\n    blockNum: 0,\r\n    avgBlockTime: 0,\r\n    fileBaseFee: 0,\r\n    fileByteFee: 0,\r\n    fileKeysCountFee: 0\r\n  });\r\n  const [filesInfo, setFilesInfo] = useState<FileInfoType[]>([]);\r\n\r\n  const fetchFileInfo = async (cid: string, fileType: string) => {\r\n    const fileInfo: FileInfo | null = await getStatusMainnet(cid);\r\n\r\n    if (fileInfo) {\r\n      const expiredDate = new Date(\r\n        CRUST_CONSENSUS_DATE.getTime() + parseInt(fileInfo.expired_at, 10) * 6 * 1000\r\n      )\r\n        .toISOString()\r\n        .split('T')[0];\r\n\r\n      let guaranteedBlock = parseInt(fileInfo.expired_at, 10) - metadataSubscan.blockNum;\r\n      guaranteedBlock = guaranteedBlock > 0 ? guaranteedBlock : 0;\r\n      let realTimeStorageFee = 0;\r\n\r\n      realTimeStorageFee =\r\n        metadataSubscan.fileByteFee * Math.ceil(parseInt(fileInfo.file_size, 10) / (1024 * 1024)) +\r\n        metadataSubscan.fileBaseFee +\r\n        metadataSubscan.fileKeysCountFee;\r\n\r\n      if (parseInt(fileInfo.prepaid, 10) > 0) {\r\n        guaranteedBlock +=\r\n          Math.floor(parseInt(fileInfo.prepaid, 10) / realTimeStorageFee) *\r\n          RENEW_PERIOD_BLOCK_NUMBER;\r\n      }\r\n\r\n      const guaranteedDays = Math.floor(\r\n        (guaranteedBlock * metadataSubscan.avgBlockTime) / (3600 * 24)\r\n      );\r\n\r\n      setFilesInfo((filesInfo) => {\r\n        const newFileInfo = {\r\n          fileType,\r\n          network: 'Crust',\r\n          realTimeStorageFee,\r\n          replicas: fileInfo.reported_replica_count,\r\n          expireOn: expiredDate,\r\n          guaranteedLifetime: daysNumberToHumanReadable(guaranteedDays),\r\n          prepaid: fileInfo.prepaid,\r\n          fileSize: parseInt(fileInfo.file_size, 10),\r\n          cid\r\n        };\r\n\r\n        return [...filesInfo, newFileInfo];\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(METADATA_SUBSCAN_CRUST).then((response) => {\r\n      if (response.status === 200) {\r\n        setMetadataSubscan({\r\n          isDone: true,\r\n          blockNum: parseInt(response.data.data.blockNum),\r\n          avgBlockTime: parseFloat(response.data.data.avgBlockTime),\r\n          fileBaseFee: parseInt(response.data.data.fileBaseFee),\r\n          fileByteFee: parseInt(response.data.data.fileByteFee),\r\n          fileKeysCountFee: parseInt(response.data.data.fileKeysCountFee)\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (contentId !== '' && nftCardId !== '' && metadataSubscan.isDone) {\r\n      if (contentId === nftCardId) {\r\n        fetchFileInfo(contentId, 'NFT Content');\r\n      } else {\r\n        fetchFileInfo(contentId, 'NFT Content');\r\n        fetchFileInfo(nftCardId, 'NFT Card');\r\n      }\r\n    }\r\n  }, [contentId, nftCardId, metadataSubscan]);\r\n\r\n  useEffect(() => {\r\n    if (metadataId !== '' && metadataSubscan.isDone) {\r\n      fetchFileInfo(metadataId, 'Metadata');\r\n    }\r\n  }, [metadataId, metadataSubscan]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Files Status\" sx={{ mb: 3 }} />\r\n\r\n      <Scrollbar>\r\n        <TableContainer sx={{ minWidth: 700 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>File</TableCell>\r\n                <TableCell align=\"center\">Network</TableCell>\r\n                <TableCell align=\"center\">Replicas</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip title=\"The lifetime is calculated based on the real-time status of the network, it could be slightly changed later.\">\r\n                    <Stack direction=\"row\" justifyContent=\"center\">\r\n                      <Typography variant=\"subtitle2\">Guaranteed Lifetime</Typography>\r\n                      <Typography variant=\"subtitle2\" color=\"red\">\r\n                        *\r\n                      </Typography>\r\n                    </Stack>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">Status</TableCell>\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filesInfo.map((row) => (\r\n                <TableRow key={row.fileType}>\r\n                  <TableCell>{row.fileType}</TableCell>\r\n                  <TableCell align=\"center\">{row.network}</TableCell>\r\n                  <TableCell align=\"center\">{row.replicas}</TableCell>\r\n                  <TableCell align=\"center\">{row.guaranteedLifetime}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Label\r\n                      variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n                      color={'success'}\r\n                    >\r\n                      Persistent\r\n                    </Label>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <MoreMenuButton cid={row.cid} fileSize={row.fileSize} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n      <Stack\r\n        sx={{ height: '150px', display: loading ? 'flex' : 'none' }}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <LineScalePulseOutRapid color={'#637381'} loading={loading} />\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","// material\r\nimport { Grid, Stack } from '@mui/material';\r\n//\r\nimport AssetDetails from './AssetDetails';\r\nimport AssetCard from './AssetCard';\r\nimport AboutOwner from './AboutOwner';\r\n// import ProfileSocialInfo from './ProfileSocialInfo';\r\nimport { AssetAndOwnerType } from '../../../pages/AssetViewer';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport FilesInfo from './FilesInfo';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Asset({ assetAndOwner }: { assetAndOwner: AssetAndOwnerType }) {\r\n  const theme = useTheme();\r\n  const biggerThanMd = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} md={8}>\r\n        <Stack spacing={3}>\r\n          <AssetCard assetAndOwner={assetAndOwner} />\r\n          <FilesInfo assetAndOwner={assetAndOwner} />\r\n        </Stack>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4}>\r\n        <Stack spacing={3}>\r\n          <AboutOwner assetAndOwner={assetAndOwner} />\r\n          <AssetDetails assetAndOwner={assetAndOwner} />\r\n        </Stack>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material\r\nimport { Box, Container } from '@mui/material';\r\n\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\nimport { useParams } from 'react-router-dom';\r\n// components\r\nimport Page from '../components/Page';\r\n\r\nimport { Asset } from 'components/_dashboard/assetViewer';\r\n\r\nimport Identicons from '@nimiq/identicons';\r\nimport { IPFS_GATEWAY_FOR_FETCHING_DATA, POLYGON_RPC } from 'assets/COMMON_VARIABLES';\r\nimport { contractAddress } from 'utils/contractAddress';\r\nimport { ethers } from 'ethers';\r\nimport { ABI } from 'utils/abi';\r\nimport axios from 'axios';\r\nIdenticons.svgPath = './static/identicons.min.svg';\r\n\r\nexport type AssetAndOwnerType = {\r\n  ownerAddress: string;\r\n  contractAddress: string;\r\n  tokenId: string;\r\n  ownerIcon: string;\r\n  balance: string;\r\n  imageUrl: string;\r\n  name: string;\r\n  description: string;\r\n  contentId: string;\r\n  nftCardId: string;\r\n  metadataId: string;\r\n};\r\nconst initAssetAndOwner: AssetAndOwnerType = {\r\n  ownerAddress: '',\r\n  contractAddress: '',\r\n  tokenId: '',\r\n  ownerIcon: '',\r\n  balance: '0',\r\n  imageUrl: '',\r\n  name: '',\r\n  description: '',\r\n  contentId: '',\r\n  nftCardId: '',\r\n  metadataId: ''\r\n};\r\n\r\nconst ipfsUriToCid = (ipfsUrl: string) => {\r\n  const CidSearch = ipfsUrl.match(/(Qm[\\w]+)/);\r\n  if (CidSearch) {\r\n    return CidSearch[1];\r\n  } else return null;\r\n};\r\n\r\nexport default function AssetViewer() {\r\n  const { themeStretch } = useSettings();\r\n  let networkRPC = '';\r\n\r\n  const { network, contract, tokenId } = useParams();\r\n  switch (network) {\r\n    case 'polygon':\r\n      networkRPC = POLYGON_RPC[0];\r\n      break;\r\n    default:\r\n      networkRPC = '0';\r\n  }\r\n\r\n  const [assetAndOwner, setAssetAndOwner] = useState<AssetAndOwnerType>(initAssetAndOwner);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const provider = new ethers.providers.JsonRpcProvider(networkRPC);\r\n      const contractEthersJs = new ethers.Contract(contractAddress, ABI, provider);\r\n\r\n      const ownerOfNFT = await contractEthersJs.ownerOf(tokenId);\r\n      const balanceOfOwner = (await contractEthersJs.balanceOf(ownerOfNFT)).toString();\r\n      const tokenURI = await contractEthersJs.tokenURI(tokenId);\r\n\r\n      contractEthersJs.getDataIdOnchain(tokenId).then((contentId: string) => {\r\n        setAssetAndOwner((assetAndOwner) => ({\r\n          ...assetAndOwner,\r\n          contentId: ipfsUriToCid(contentId) || ''\r\n        }));\r\n      });\r\n\r\n      const tokenURICid = ipfsUriToCid(tokenURI);\r\n\r\n      Identicons.toDataUrl(ownerOfNFT).then((img: string) => {\r\n        setAssetAndOwner((assetAndOwner) => ({\r\n          ...assetAndOwner,\r\n          ownerIcon: img,\r\n          balance: balanceOfOwner,\r\n          ownerAddress: ownerOfNFT,\r\n          tokenId: tokenId || '',\r\n          contractAddress\r\n        }));\r\n      });\r\n\r\n      if (tokenURICid) {\r\n        setAssetAndOwner((assetAndOwner) => ({\r\n          ...assetAndOwner,\r\n          metadataId: tokenURICid\r\n        }));\r\n\r\n        const tokenURIHttp = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${tokenURICid}`;\r\n        axios.get(tokenURIHttp).then((response) => {\r\n          const name = response.data.name || '';\r\n          const description = response.data.description || '';\r\n\r\n          if (response.data && response.data.image) {\r\n            const imageCid = ipfsUriToCid(response.data.image);\r\n            if (imageCid) {\r\n              const imageUrl = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${imageCid}`;\r\n              setAssetAndOwner((assetAndOwner) => ({\r\n                ...assetAndOwner,\r\n                imageUrl,\r\n                name,\r\n                description,\r\n                nftCardId: imageCid\r\n              }));\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title={`Asset Viewer - ${assetAndOwner.name}`}>\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Box>\r\n          <Asset assetAndOwner={assetAndOwner} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\nimport { forwardRef, ReactNode } from 'react';\n// material\nimport { Box, BoxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface PageProps extends BoxProps {\n  children: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nexport default Page;\n","export const contractAddress: string = '0xa0Afb3513B99E1b099CE9F3C007eE937B04e7870';\r\n","export const ABI: any = [\r\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'approved',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'operator',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bool',\r\n        name: 'approved',\r\n        type: 'bool'\r\n      }\r\n    ],\r\n    name: 'ApprovalForAll',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'approve',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\r\n    name: 'balanceOf',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getApproved',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getDataIdOnchain',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getDataRegisterProof',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'owner', type: 'address' },\r\n      { internalType: 'address', name: 'operator', type: 'address' }\r\n    ],\r\n    name: 'isApprovedForAll',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'receiver', type: 'address' },\r\n      { internalType: 'string', name: 'tokenURIdata', type: 'string' },\r\n      { internalType: 'string', name: 'dataIdOnchain', type: 'string' },\r\n      { internalType: 'string', name: 'dataRegisterProof', type: 'string' }\r\n    ],\r\n    name: 'mintDataNTF',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'ownerOf',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_data', type: 'bytes' }\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'operator', type: 'address' },\r\n      { internalType: 'bool', name: 'approved', type: 'bool' }\r\n    ],\r\n    name: 'setApprovalForAll',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],\r\n    name: 'supportsInterface',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],\r\n    name: 'tokenByIndex',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'owner', type: 'address' },\r\n      { internalType: 'uint256', name: 'index', type: 'uint256' }\r\n    ],\r\n    name: 'tokenOfOwnerByIndex',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'tokenURI',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  }\r\n];\r\n","import { Icon } from '@iconify/react';\r\nimport { Button, IconButton, Typography } from '@mui/material';\r\n\r\nimport { useSnackbar, VariantType } from 'notistack';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\n\r\nexport default function useSnackbarAction() {\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const onSnackbarAction = (\r\n    color: VariantType,\r\n    text: string,\r\n    autoHideDuration: number | null,\r\n    label?: string,\r\n    url?: string\r\n  ) => {\r\n    enqueueSnackbar(\r\n      <div>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          {text}\r\n        </Typography>\r\n      </div>,\r\n      {\r\n        variant: color,\r\n        autoHideDuration,\r\n        action: (key) => (\r\n          <>\r\n            {url && (\r\n              <Button\r\n                size=\"small\"\r\n                color={color !== 'default' ? color : 'primary'}\r\n                href={url}\r\n                target=\"_blank\"\r\n              >\r\n                {label}\r\n              </Button>\r\n            )}\r\n            <IconButton size=\"small\" color=\"inherit\" onClick={() => closeSnackbar(key)}>\r\n              <Icon icon={closeFill} width={24} height={24} />\r\n            </IconButton>\r\n          </>\r\n        )\r\n      }\r\n    );\r\n  };\r\n  return onSnackbarAction;\r\n}\r\n","// material\nimport { alpha, Theme, useTheme, styled } from '@mui/material/styles';\nimport { BoxProps } from '@mui/material';\n// @types\nimport { ColorSchema } from '../@types/theme';\n\n// ----------------------------------------------------------------------\n\ntype LabelColor = 'default' | 'primary' | 'secondary' | 'info' | 'success' | 'warning' | 'error';\n\ntype LabelVariant = 'filled' | 'outlined' | 'ghost';\n\nconst RootStyle = styled('span')(\n  ({\n    theme,\n    ownerState\n  }: {\n    theme: Theme;\n    ownerState: {\n      color: LabelColor;\n      variant: LabelVariant;\n    };\n  }) => {\n    const isLight = theme.palette.mode === 'light';\n    const { color, variant } = ownerState;\n\n    const styleFilled = (color: ColorSchema) => ({\n      color: theme.palette[color].contrastText,\n      backgroundColor: theme.palette[color].main\n    });\n\n    const styleOutlined = (color: ColorSchema) => ({\n      color: theme.palette[color].main,\n      backgroundColor: 'transparent',\n      border: `1px solid ${theme.palette[color].main}`\n    });\n\n    const styleGhost = (color: ColorSchema) => ({\n      color: theme.palette[color][isLight ? 'dark' : 'light'],\n      backgroundColor: alpha(theme.palette[color].main, 0.16)\n    });\n\n    return {\n      height: 22,\n      minWidth: 22,\n      lineHeight: 0,\n      borderRadius: 8,\n      cursor: 'default',\n      alignItems: 'center',\n      whiteSpace: 'nowrap',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      padding: theme.spacing(0, 1),\n      color: theme.palette.grey[800],\n      fontSize: theme.typography.pxToRem(12),\n      fontFamily: theme.typography.fontFamily,\n      backgroundColor: theme.palette.grey[300],\n      fontWeight: theme.typography.fontWeightBold,\n\n      ...(color !== 'default'\n        ? {\n            ...(variant === 'filled' && { ...styleFilled(color) }),\n            ...(variant === 'outlined' && { ...styleOutlined(color) }),\n            ...(variant === 'ghost' && { ...styleGhost(color) })\n          }\n        : {\n            ...(variant === 'outlined' && {\n              backgroundColor: 'transparent',\n              color: theme.palette.text.primary,\n              border: `1px solid ${theme.palette.grey[500_32]}`\n            }),\n            ...(variant === 'ghost' && {\n              color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n              backgroundColor: theme.palette.grey[500_16]\n            })\n          })\n    };\n  }\n);\n\n// ----------------------------------------------------------------------\n\ninterface LabelProps extends BoxProps {\n  color?: LabelColor;\n  variant?: LabelVariant;\n}\n\nexport default function Label({ color = 'default', variant = 'ghost', children, sx }: LabelProps) {\n  const theme = useTheme();\n\n  return (\n    <RootStyle ownerState={{ color, variant }} sx={sx} theme={theme}>\n      {children}\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}