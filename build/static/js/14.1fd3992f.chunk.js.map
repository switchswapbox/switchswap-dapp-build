{"version":3,"sources":["components/_dashboard/assetViewer/AssetDetails.tsx","components/_dashboard/assetViewer/AssetCard.tsx","utils/formatTime.ts","components/_dashboard/assetViewer/AboutOwner.tsx","components/_dashboard/assetViewer/Asset.tsx","pages/AssetViewer.tsx","components/Page.tsx","utils/contractAddress.ts","utils/abi.ts","utils/formatNumber.ts"],"names":["AssetDetails","assetAndOwner","Card","CardHeader","title","Stack","spacing","sx","p","direction","justifyContent","Typography","variant","ButtonBase","shortenAddress","contractAddress","tokenId","Box","textAlign","mb","Tooltip","IconButton","href","target","component","src","height","AssetCard","date","commentInputRef","useRef","useState","isLiked","setLiked","likes","setLikes","loading","setLoading","disableTypography","avatar","ownerIcon","alt","Link","to","color","RouterLink","ownerAddress","subheader","display","Date","now","format","action","icon","moreVerticalFill","width","imageUrl","onLoad","alignItems","mt","FormControlLabel","control","Checkbox","size","checked","heartFill","checkedIcon","onChange","prevLikes","label","fShortenNumber","minWidth","mr","flexGrow","onClick","current","focus","messageSquareFill","shareFill","name","description","Identicons","svgPath","CardMediaStyle","styled","theme","position","paddingTop","top","zIndex","content","backdropFilter","WebkitBackdropFilter","borderTopLeftRadius","shape","borderRadiusMd","borderTopRightRadius","backgroundColor","alpha","palette","primary","darker","CoverImgStyle","objectFit","InfoItem","number","Grid","item","xs","UserCard","SvgIconStyle","bottom","Avatar","transform","align","Divider","container","py","balance","Asset","console","log","md","initAssetAndOwner","ipfsUriToCid","ipfsUrl","CidSearch","match","AssetViewer","themeStretch","useSettings","networkRPC","useParams","network","contract","POLYGON_RPC","setAssetAndOwner","useEffect","a","provider","ethers","providers","JsonRpcProvider","contractEthersJs","Contract","ABI","ownerOf","ownerOfNFT","balanceOf","balanceOfOwner","toString","tokenURI","tokenURICid","toDataUrl","then","img","tokenURIHttp","IPFS_GATEWAY_FOR_FETCHING_DATA","axios","get","response","data","image","imageCid","fetchData","Page","Container","maxWidth","forwardRef","ref","children","other","inputs","stateMutability","type","anonymous","indexed","internalType","outputs","replace","numeral","fData"],"mappings":"yXAce,SAASA,EAAT,GAAgF,IAAxDC,EAAuD,EAAvDA,cAGrC,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,kBAElB,eAACC,EAAA,EAAD,CAAOC,QAAS,EAAGC,GAAI,CAAEC,EAAG,GAA5B,UACE,eAACH,EAAA,EAAD,CAAOI,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,8BACA,cAACC,EAAA,EAAD,UACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACGE,YAAeb,EAAcc,gBAAiB,UAKrD,eAACV,EAAA,EAAD,CAAOI,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,sBACA,cAACC,EAAA,EAAD,UACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BX,EAAce,eAG/C,eAACX,EAAA,EAAD,CAAOI,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,4BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,uBAEF,eAACP,EAAA,EAAD,CAAOI,UAAU,MAAMC,eAAe,gBAAtC,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAApB,qBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,2BAGJ,eAACK,EAAA,EAAD,CAAKV,GAAI,CAAEW,UAAW,SAAUC,GAAI,GAApC,UACE,cAACC,EAAA,EAAD,CAAShB,MAAM,sBAAf,SACE,cAACiB,EAAA,EAAD,CACEC,KAAI,wCAAmCrB,EAAcc,gBAAjD,cAAsEd,EAAce,SACxFO,OAAO,SAFT,SAIE,cAACN,EAAA,EAAD,CAAKO,UAAU,MAAMC,IAAI,oCAAoClB,GAAI,CAAEmB,OAAQ,UAG/E,cAACN,EAAA,EAAD,CAAShB,MAAM,iBAAf,SACE,cAACiB,EAAA,EAAD,CACEC,KAAI,0CAAqCrB,EAAcc,gBAAnD,YAAsEd,EAAce,SACxFO,OAAO,SAFT,SAIE,cAACN,EAAA,EAAD,CAAKO,UAAU,MAAMC,IAAI,oCAAoClB,GAAI,CAAEmB,OAAQ,gB,qLC9BxE,SAASC,EAAT,GAA6E,IC1BtEC,ED0Bc3B,EAAuD,EAAvDA,cAC5B4B,EAAkBC,iBAAyB,MACjD,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAgBA,OACE,eAACnC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEmC,mBAAiB,EACjBC,OAAQ,cAAC,IAAD,CAASd,IAAKxB,EAAcuC,UAAWC,IAAI,eACnDrC,MACE,cAACsC,EAAA,EAAD,CAAMC,GAAG,IAAI/B,QAAQ,YAAYgC,MAAM,eAAepB,UAAWqB,IAAjE,SACG/B,YAAeb,EAAc6C,aAAc,KAGhDC,UACE,cAACpC,EAAA,EAAD,CAAYC,QAAQ,UAAUL,GAAI,CAAEyC,QAAS,QAASJ,MAAO,kBAA7D,UCzDYhB,ED0DHqB,KAAKC,MCzDfC,YAAO,IAAIF,KAAKrB,GAAO,mBD4DxBwB,OACE,cAAC/B,EAAA,EAAD,UACE,cAAC,IAAD,CAAMgC,KAAMC,IAAkBC,MAAO,GAAI7B,OAAQ,SAKvD,eAACrB,EAAA,EAAD,CAAOC,QAAS,EAAGC,GAAI,CAAEC,EAAG,GAA5B,UACE,eAACS,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEO,UAAU,MACViB,IAAI,aACJhB,IAAKxB,EAAcuD,SACnBC,OAAQ,kBAAMpB,GAAW,IACzB9B,GAAI,CAOFyC,QAASZ,EAAU,OAAS,WAGhC,cAAC/B,EAAA,EAAD,CACEI,UAAU,MACViD,WAAW,SACXhD,eAAe,SACfH,GAAI,CAAEgD,MAAO,OAAQP,QAASZ,EAAU,OAAS,OAAQuB,GAAI,GAJ/D,SAME,cAAC,IAAD,CAAwBf,MAAO,UAAWR,QAASA,SAIvD,eAAC/B,EAAA,EAAD,CAAOI,UAAU,MAAMiD,WAAW,SAAlC,UACE,cAACE,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLnB,MAAM,QACNoB,QAAShC,EACTqB,KAAM,cAAC,IAAD,CAAMA,KAAMY,MAClBC,YAAa,cAAC,IAAD,CAAMb,KAAMY,MACzBE,SAAUnC,EAnEH,WACnBC,GAAS,GACTE,GAAS,SAACiC,GAAD,OAAeA,EAAY,MAPnB,WACjBnC,GAAS,GACTE,GAAS,SAACiC,GAAD,OAAeA,EAAY,QAyE5BC,MAAOC,YAAepC,GACtB3B,GAAI,CAAEgE,SAAU,GAAIC,GAAI,KAG1B,cAACvD,EAAA,EAAD,CAAKV,GAAI,CAAEkE,SAAU,KACrB,cAACpD,EAAA,EAAD,CAAYqD,QAtEO,WAAO,IAAD,EAC/B,UAAA7C,EAAgB8C,eAAhB,SAAyBC,SAqEnB,SACE,cAAC,IAAD,CAAMvB,KAAMwB,IAAmBtB,MAAO,GAAI7B,OAAQ,OAEpD,cAACL,EAAA,EAAD,UACE,cAAC,IAAD,CAAMgC,KAAMyB,IAAWvB,MAAO,GAAI7B,OAAQ,UAG9C,eAACrB,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCX,EAAc8E,OAC/C,cAACpE,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BX,EAAc+E,uB,uDEhHrDC,IAAWC,QAAU,8BAErB,IAAMC,EAAiBC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACnDrC,QAAS,OACTsC,SAAU,WACV5E,eAAgB,SAChB6E,WAAY,sBACZ,WAAY,CACVC,IAAK,EACLC,OAAQ,EACRC,QAAS,KACTnC,MAAO,OACP7B,OAAQ,OACR4D,SAAU,WACVK,eAAgB,YAChBC,qBAAsB,YACtBC,oBAAqBR,EAAMS,MAAMC,eACjCC,qBAAsBX,EAAMS,MAAMC,eAClCE,gBAAiBC,YAAMb,EAAMc,QAAQC,QAAQC,OAAQ,UAInDC,EAAgBlB,YAAO,MAAPA,EAAc,cAAGC,MAAH,MAAgB,CAClDG,IAAK,EACLC,OAAQ,EACRlC,MAAO,OACP7B,OAAQ,OACR6E,UAAW,QACXjB,SAAU,eAKZ,SAASkB,EAASzB,EAAc0B,GAC9B,OACE,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGrG,GAAI,CAAEW,UAAW,UAAnC,UACE,cAACP,EAAA,EAAD,CAAYC,QAAQ,UAAUL,GAAI,CAAEY,GAAI,GAAKyB,MAAO,iBAAkBI,QAAS,SAA/E,SACG+B,IAEH,cAACpE,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiC6F,OAKxB,SAASI,EAAT,GAA4E,IAAxD5G,EAAuD,EAAvDA,cACjC,OACE,eAACC,EAAA,EAAD,WACE,eAACiF,EAAD,WACE,cAAC2B,EAAA,EAAD,CACElE,MAAM,QACNnB,IAAI,iCACJlB,GAAI,CACFgD,MAAO,IACP7B,OAAQ,GACR+D,OAAQ,GACRsB,QAAS,GACTzB,SAAU,cAGd,cAAC0B,EAAA,EAAD,CACEvE,IAAI,QACJhB,IAAKxB,EAAcuC,UACnBjC,GAAI,CACFgD,MAAO,GACP7B,OAAQ,GACR+D,OAAQ,GACRH,SAAU,WACV2B,UAAW,sBAGf,cAACX,EAAD,CAAe7D,IAAI,QAAQhB,IAAKxB,EAAcuC,eAGhD,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,YAAYsG,MAAM,SAAS3G,GAAI,CAAEoD,GAAI,GAAzD,SACG7C,YAAeb,EAAc6C,aAAc,KAE9C,cAACnC,EAAA,EAAD,CAAYC,QAAQ,QAAQsG,MAAM,SAAS3G,GAAI,CAAEqC,MAAO,kBAAxD,qBAIA,cAAC3B,EAAA,EAAD,CAAKV,GAAI,CAAEW,UAAW,SAAUyC,GAAI,EAAGxC,GAAI,KAA3C,SACE,cAACC,EAAA,EAAD,CAAShB,MAAM,cAAf,SACE,cAACiB,EAAA,EAAD,CACEC,KAAI,0CAAqCrB,EAAc6C,cACvDvB,OAAO,SAFT,SAIE,cAACN,EAAA,EAAD,CAAKO,UAAU,MAAMC,IAAI,oCAAoClB,GAAI,CAAEmB,OAAQ,YAKjF,cAACyF,EAAA,EAAD,IAEA,eAACT,EAAA,EAAD,CAAMU,WAAS,EAAC7G,GAAI,CAAE8G,GAAI,GAA1B,UACGb,EAAS,mBAAoBvG,EAAcqH,SAC3Cd,EAAS,eAAgB,WClGnB,SAASe,EAAT,GAAyE,IAAxDtH,EAAuD,EAAvDA,cAE9B,OADAuH,QAAQC,IAAIxH,GAEV,eAACyG,EAAA,EAAD,CAAMU,WAAS,EAAC9G,QAAS,EAAzB,UACE,cAACoG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIc,GAAI,EAAvB,SACE,eAACrH,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAAC,EAAD,CAAYL,cAAeA,IAC3B,cAACD,EAAD,CAAcC,cAAeA,SAKjC,cAACyG,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIc,GAAI,EAAvB,SACE,cAACrH,EAAA,EAAD,CAAOC,QAAS,EAAhB,SACE,cAACqB,EAAD,CAAW1B,cAAeA,W,gECLpCgF,IAAWC,QAAU,8BAYrB,IAAMyC,GAAuC,CAC3C7E,aAAc,GACd/B,gBAAiB,GACjBC,QAAS,GACTwB,UAAW,GACX8E,QAAS,IACT9D,SAAU,GACVuB,KAAM,GACNC,YAAa,IAGT4C,GAAe,SAACC,GACpB,IAAMC,EAAYD,EAAQE,MAAM,aAChC,OAAID,EACKA,EAAU,GACL,MAGD,SAASE,KACtB,IAAQC,EAAiBC,cAAjBD,aACJE,EAAa,GAEjB,EAAuCC,cAA/BC,EAAR,EAAQA,QAAmBrH,GAA3B,EAAiBsH,SAAjB,EAA2BtH,SAC3B,OAAQqH,GACN,IAAK,UACHF,EAAaI,KAAY,GACzB,MACF,QACEJ,EAAa,IAGjB,MAA0CpG,mBAA4B4F,IAAtE,mBAAO1H,EAAP,KAAsBuI,EAAtB,KAkDA,OAhDAC,qBAAU,WAAM,4CACd,wCAAAC,EAAA,6DACQC,EAAW,IAAIC,KAAOC,UAAUC,gBAAgBX,GAChDY,EAAmB,IAAIH,KAAOI,SAASjI,KAAiBkI,KAAKN,GAFrE,SAI2BI,EAAiBG,QAAQlI,GAJpD,cAIQmI,EAJR,gBAKgCJ,EAAiBK,UAAUD,GAL3D,cAKQE,EALR,OAKwEC,WALxE,UAMyBP,EAAiBQ,SAASvI,GANnD,QAMQuI,EANR,OAQQC,EAAc5B,GAAa2B,GAEjCtE,IAAWwE,UAAUN,GAAYO,MAAK,SAACC,GACrCnB,GAAiB,SAACvI,GAAD,mBAAC,eACbA,GADY,IAEfuC,UAAWmH,EACXrC,QAAS+B,EACTvG,aAAcqG,EACdnI,QAASA,GAAW,GACpBD,6BAIAyI,IACII,EADS,UACSC,KAA+B,GADxC,YAC8CL,GAC7DM,KAAMC,IAAIH,GAAcF,MAAK,SAACM,GAC5B,IAAMjF,EAAOiF,EAASC,KAAKlF,MAAQ,GAC7BC,EAAcgF,EAASC,KAAKjF,aAAe,GAEjD,GAAIgF,EAASC,MAAQD,EAASC,KAAKC,MAAO,CACxC,IAAMC,EAAWvC,GAAaoC,EAASC,KAAKC,OAC5C,GAAIC,EAAU,CACZ,IAAM3G,EAAQ,UAAMqG,KAA+B,GAArC,YAA2CM,GACzD3B,GAAiB,SAACvI,GAAD,mBAAC,eACbA,GADY,IAEfuD,WACAuB,OACAC,yBAOVwC,QAAQC,IAAI4B,GA1Cd,6CADc,uBAAC,WAAD,wBA6Cde,KACC,IAGD,cAACC,EAAA,EAAD,CAAMjK,MAAM,eAAZ,SACE,cAACkK,EAAA,EAAD,CAAWC,UAAUtC,GAAuB,KAA5C,SACE,cAAChH,EAAA,EAAD,UACE,cAACsG,EAAD,CAAOtH,cAAeA,Y,2GCxG1BoK,EAAOG,sBAAsC,WAAqCC,GAArC,IAAGC,EAAH,EAAGA,SAAH,IAAatK,aAAb,MAAqB,GAArB,EAA4BuK,EAA5B,wBACjD,eAAC,IAAD,yBAAKF,IAAKA,GAASE,GAAnB,cACE,cAAC,IAAD,UACE,gCAAQvK,MAETsK,SAIUL,O,iCCrBf,kCAAO,IAAMtJ,EAA0B,8C,iCCAvC,kCAAO,IAAMkI,EAAW,CACtB,CAAE2B,OAAQ,GAAIC,gBAAiB,aAAcC,KAAM,eACnD,CACEC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTC,aAAc,UACdlG,KAAM,QACN+F,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdlG,KAAM,WACN+F,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdlG,KAAM,UACN+F,KAAM,YAGV/F,KAAM,WACN+F,KAAM,SAER,CACEC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTC,aAAc,UACdlG,KAAM,QACN+F,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdlG,KAAM,WACN+F,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,OACdlG,KAAM,WACN+F,KAAM,SAGV/F,KAAM,iBACN+F,KAAM,SAER,CACEC,WAAW,EACXH,OAAQ,CACN,CACEI,SAAS,EACTC,aAAc,UACdlG,KAAM,OACN+F,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdlG,KAAM,KACN+F,KAAM,WAER,CACEE,SAAS,EACTC,aAAc,UACdlG,KAAM,UACN+F,KAAM,YAGV/F,KAAM,WACN+F,KAAM,SAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWlG,KAAM,KAAM+F,KAAM,WAC7C,CAAEG,aAAc,UAAWlG,KAAM,UAAW+F,KAAM,YAEpD/F,KAAM,UACNmG,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWlG,KAAM,QAAS+F,KAAM,YACzD/F,KAAM,YACNmG,QAAS,CAAC,CAAED,aAAc,UAAWlG,KAAM,GAAI+F,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWlG,KAAM,UAAW+F,KAAM,YAC3D/F,KAAM,cACNmG,QAAS,CAAC,CAAED,aAAc,UAAWlG,KAAM,GAAI+F,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWlG,KAAM,UAAW+F,KAAM,YAC3D/F,KAAM,mBACNmG,QAAS,CAAC,CAAED,aAAc,SAAUlG,KAAM,GAAI+F,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWlG,KAAM,UAAW+F,KAAM,YAC3D/F,KAAM,uBACNmG,QAAS,CAAC,CAAED,aAAc,SAAUlG,KAAM,GAAI+F,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWlG,KAAM,QAAS+F,KAAM,WAChD,CAAEG,aAAc,UAAWlG,KAAM,WAAY+F,KAAM,YAErD/F,KAAM,mBACNmG,QAAS,CAAC,CAAED,aAAc,OAAQlG,KAAM,GAAI+F,KAAM,SAClDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWlG,KAAM,WAAY+F,KAAM,WACnD,CAAEG,aAAc,SAAUlG,KAAM,eAAgB+F,KAAM,UACtD,CAAEG,aAAc,SAAUlG,KAAM,gBAAiB+F,KAAM,UACvD,CAAEG,aAAc,SAAUlG,KAAM,oBAAqB+F,KAAM,WAE7D/F,KAAM,cACNmG,QAAS,CAAC,CAAED,aAAc,UAAWlG,KAAM,GAAI+F,KAAM,YACrDD,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,GACR7F,KAAM,OACNmG,QAAS,CAAC,CAAED,aAAc,SAAUlG,KAAM,GAAI+F,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWlG,KAAM,UAAW+F,KAAM,YAC3D/F,KAAM,UACNmG,QAAS,CAAC,CAAED,aAAc,UAAWlG,KAAM,GAAI+F,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWlG,KAAM,OAAQ+F,KAAM,WAC/C,CAAEG,aAAc,UAAWlG,KAAM,KAAM+F,KAAM,WAC7C,CAAEG,aAAc,UAAWlG,KAAM,UAAW+F,KAAM,YAEpD/F,KAAM,mBACNmG,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWlG,KAAM,OAAQ+F,KAAM,WAC/C,CAAEG,aAAc,UAAWlG,KAAM,KAAM+F,KAAM,WAC7C,CAAEG,aAAc,UAAWlG,KAAM,UAAW+F,KAAM,WAClD,CAAEG,aAAc,QAASlG,KAAM,QAAS+F,KAAM,UAEhD/F,KAAM,mBACNmG,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWlG,KAAM,WAAY+F,KAAM,WACnD,CAAEG,aAAc,OAAQlG,KAAM,WAAY+F,KAAM,SAElD/F,KAAM,oBACNmG,QAAS,GACTL,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,SAAUlG,KAAM,cAAe+F,KAAM,WAC9D/F,KAAM,oBACNmG,QAAS,CAAC,CAAED,aAAc,OAAQlG,KAAM,GAAI+F,KAAM,SAClDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACR7F,KAAM,SACNmG,QAAS,CAAC,CAAED,aAAc,SAAUlG,KAAM,GAAI+F,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWlG,KAAM,QAAS+F,KAAM,YACzD/F,KAAM,eACNmG,QAAS,CAAC,CAAED,aAAc,UAAWlG,KAAM,GAAI+F,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWlG,KAAM,QAAS+F,KAAM,WAChD,CAAEG,aAAc,UAAWlG,KAAM,QAAS+F,KAAM,YAElD/F,KAAM,sBACNmG,QAAS,CAAC,CAAED,aAAc,UAAWlG,KAAM,GAAI+F,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWlG,KAAM,UAAW+F,KAAM,YAC3D/F,KAAM,WACNmG,QAAS,CAAC,CAAED,aAAc,SAAUlG,KAAM,GAAI+F,KAAM,WACpDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACR7F,KAAM,cACNmG,QAAS,CAAC,CAAED,aAAc,UAAWlG,KAAM,GAAI+F,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,CACN,CAAEK,aAAc,UAAWlG,KAAM,OAAQ+F,KAAM,WAC/C,CAAEG,aAAc,UAAWlG,KAAM,KAAM+F,KAAM,WAC7C,CAAEG,aAAc,UAAWlG,KAAM,UAAW+F,KAAM,YAEpD/F,KAAM,eACNmG,QAAS,GACTL,gBAAiB,aACjBC,KAAM,c,yEC9OV,mGAiBO,SAASxG,EAAemC,GAC7B,OAAO0E,kBAAQC,IAAQ3E,GAAQtD,OAAO,SAAU,MAAO,IAGlD,SAASkI,EAAM5E,GACpB,OAAO2E,IAAQ3E,GAAQtD,OAAO","file":"static/js/14.1fd3992f.chunk.js","sourcesContent":["import {\r\n  Card,\r\n  Typography,\r\n  CardHeader,\r\n  Stack,\r\n  ButtonBase,\r\n  Box,\r\n  Tooltip,\r\n  IconButton\r\n} from '@mui/material';\r\n\r\nimport { AssetAndOwnerType } from '../../../pages/AssetViewer';\r\nimport { shortenAddress } from 'utils/formatAddress';\r\n\r\nexport default function AssetDetails({ assetAndOwner }: { assetAndOwner: AssetAndOwnerType }) {\r\n  // const { quote, country, email, role, company, school } = profile;\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Asset Details\" />\r\n\r\n      <Stack spacing={1} sx={{ p: 3 }}>\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Typography variant=\"body2\">Contract Address</Typography>\r\n          <ButtonBase>\r\n            <Typography variant=\"body2\">\r\n              {shortenAddress(assetAndOwner.contractAddress, 5)}\r\n            </Typography>\r\n          </ButtonBase>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Typography variant=\"body2\">Token ID</Typography>\r\n          <ButtonBase>\r\n            <Typography variant=\"body2\">{assetAndOwner.tokenId}</Typography>\r\n          </ButtonBase>\r\n        </Stack>\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Typography variant=\"body2\">Token Standard</Typography>\r\n          <Typography variant=\"body2\">ERC721</Typography>\r\n        </Stack>\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          <Typography variant=\"body2\">Network</Typography>\r\n          <Typography variant=\"body2\">Polygon</Typography>\r\n        </Stack>\r\n      </Stack>\r\n      <Box sx={{ textAlign: 'center', mb: 2 }}>\r\n        <Tooltip title=\"Transaction history\">\r\n          <IconButton\r\n            href={`https://polygonscan.com/token/${assetAndOwner.contractAddress}?a=${assetAndOwner.tokenId}`}\r\n            target=\"_blank\"\r\n          >\r\n            <Box component=\"img\" src=\"./static/icons/shared/polygon.svg\" sx={{ height: 24 }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Opensea Viewer\">\r\n          <IconButton\r\n            href={`https://opensea.io/assets/matic/${assetAndOwner.contractAddress}/${assetAndOwner.tokenId}`}\r\n            target=\"_blank\"\r\n          >\r\n            <Box component=\"img\" src=\"./static/icons/shared/opensea.svg\" sx={{ height: 24 }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { useState, useRef } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport heartFill from '@iconify/icons-eva/heart-fill';\r\nimport shareFill from '@iconify/icons-eva/share-fill';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport messageSquareFill from '@iconify/icons-eva/message-square-fill';\r\n// material\r\nimport {\r\n  Box,\r\n  Link,\r\n  Card,\r\n  Stack,\r\n  Checkbox,\r\n  Typography,\r\n  CardHeader,\r\n  IconButton,\r\n  FormControlLabel\r\n} from '@mui/material';\r\n// utils\r\nimport { fDate } from '../../../utils/formatTime';\r\nimport { fShortenNumber } from '../../../utils/formatNumber';\r\n//\r\nimport { MAvatar } from '../../@material-extend';\r\nimport { AssetAndOwnerType } from '../../../pages/AssetViewer';\r\nimport { shortenAddress } from 'utils/formatAddress';\r\nimport { LineScalePulseOutRapid } from 'react-pure-loaders';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AssetCard({ assetAndOwner }: { assetAndOwner: AssetAndOwnerType }) {\r\n  const commentInputRef = useRef<HTMLInputElement>(null);\r\n  const [isLiked, setLiked] = useState(true);\r\n  const [likes, setLikes] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleLike = () => {\r\n    setLiked(true);\r\n    setLikes((prevLikes) => prevLikes + 1);\r\n  };\r\n\r\n  const handleUnlike = () => {\r\n    setLiked(false);\r\n    setLikes((prevLikes) => prevLikes - 1);\r\n  };\r\n\r\n  const handleClickComment = () => {\r\n    commentInputRef.current?.focus();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        disableTypography\r\n        avatar={<MAvatar src={assetAndOwner.ownerIcon} alt=\"uniqueIcon\" />}\r\n        title={\r\n          <Link to=\"#\" variant=\"subtitle2\" color=\"text.primary\" component={RouterLink}>\r\n            {shortenAddress(assetAndOwner.ownerAddress, 8)}\r\n          </Link>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"caption\" sx={{ display: 'block', color: 'text.secondary' }}>\r\n            {fDate(Date.now())}\r\n          </Typography>\r\n        }\r\n        action={\r\n          <IconButton>\r\n            <Icon icon={moreVerticalFill} width={20} height={20} />\r\n          </IconButton>\r\n        }\r\n      />\r\n\r\n      <Stack spacing={3} sx={{ p: 3 }}>\r\n        <Box>\r\n          <Box\r\n            component=\"img\"\r\n            alt=\"post media\"\r\n            src={assetAndOwner.imageUrl}\r\n            onLoad={() => setLoading(false)}\r\n            sx={{\r\n              // top: 0,\r\n              // width: 1,\r\n              // height: 1,\r\n              // borderRadius: 1,\r\n              // objectFit: 'cover',\r\n              // position: 'absolute',\r\n              display: loading ? 'none' : 'block'\r\n            }}\r\n          />\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            sx={{ width: '100%', display: loading ? 'flex' : 'none', mt: 5 }}\r\n          >\r\n            <LineScalePulseOutRapid color={'#637381'} loading={loading} />\r\n          </Stack>\r\n        </Box>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                size=\"small\"\r\n                color=\"error\"\r\n                checked={isLiked}\r\n                icon={<Icon icon={heartFill} />}\r\n                checkedIcon={<Icon icon={heartFill} />}\r\n                onChange={isLiked ? handleUnlike : handleLike}\r\n              />\r\n            }\r\n            label={fShortenNumber(likes)}\r\n            sx={{ minWidth: 72, mr: 0 }}\r\n          />\r\n\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <IconButton onClick={handleClickComment}>\r\n            <Icon icon={messageSquareFill} width={20} height={20} />\r\n          </IconButton>\r\n          <IconButton>\r\n            <Icon icon={shareFill} width={20} height={20} />\r\n          </IconButton>\r\n        </Stack>\r\n        <Stack>\r\n          <Typography variant=\"subtitle1\">{assetAndOwner.name}</Typography>\r\n          <Typography variant=\"body2\">{assetAndOwner.description}</Typography>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fDate(date: Date | string | number) {\r\n  return format(new Date(date), 'dd MMMM yyyy');\r\n}\r\n\r\nexport function fDateTime(date: Date | string | number) {\r\n  return format(new Date(date), 'dd MMM yyyy p');\r\n}\r\n\r\nexport function fTimestamp(date: Date | string | number) {\r\n  return getTime(new Date(date));\r\n}\r\n\r\nexport function fDateTimeSuffix(date: Date | string | number) {\r\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\r\n}\r\n\r\nexport function fToNow(date: Date | string | number) {\r\n  return formatDistanceToNow(new Date(date), {\r\n    addSuffix: true\r\n  });\r\n}\r\n","// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, Card, Grid, Avatar, Tooltip, Divider, Typography, IconButton } from '@mui/material';\r\n// utils\r\n// import { fShortenNumber } from '../../../../utils/formatNumber';\r\n// @types\r\n//\r\nimport { AssetAndOwnerType } from '../../../pages/AssetViewer';\r\n\r\nimport SvgIconStyle from '../../SvgIconStyle';\r\nimport Identicons from '@nimiq/identicons';\r\nimport { shortenAddress } from 'utils/formatAddress';\r\n\r\nIdenticons.svgPath = './static/identicons.min.svg';\r\n\r\nconst CardMediaStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  position: 'relative',\r\n  justifyContent: 'center',\r\n  paddingTop: 'calc(100% * 5 / 16)',\r\n  '&:before': {\r\n    top: 0,\r\n    zIndex: 9,\r\n    content: \"''\",\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    backdropFilter: 'blur(3px)',\r\n    WebkitBackdropFilter: 'blur(3px)', // Fix on Mobile\r\n    borderTopLeftRadius: theme.shape.borderRadiusMd,\r\n    borderTopRightRadius: theme.shape.borderRadiusMd,\r\n    backgroundColor: alpha(theme.palette.primary.darker, 0.72)\r\n  }\r\n}));\r\n\r\nconst CoverImgStyle = styled('img')(({ theme }) => ({\r\n  top: 0,\r\n  zIndex: 8,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction InfoItem(name: string, number: string) {\r\n  return (\r\n    <Grid item xs={6} sx={{ textAlign: 'center' }}>\r\n      <Typography variant=\"caption\" sx={{ mb: 0.5, color: 'text.secondary', display: 'block' }}>\r\n        {name}\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\">{number}</Typography>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default function UserCard({ assetAndOwner }: { assetAndOwner: AssetAndOwnerType }) {\r\n  return (\r\n    <Card>\r\n      <CardMediaStyle>\r\n        <SvgIconStyle\r\n          color=\"paper\"\r\n          src=\"/static/icons/shape-avatar.svg\"\r\n          sx={{\r\n            width: 144,\r\n            height: 62,\r\n            zIndex: 10,\r\n            bottom: -26,\r\n            position: 'absolute'\r\n          }}\r\n        />\r\n        <Avatar\r\n          alt=\"Hello\"\r\n          src={assetAndOwner.ownerIcon}\r\n          sx={{\r\n            width: 64,\r\n            height: 64,\r\n            zIndex: 11,\r\n            position: 'absolute',\r\n            transform: 'translateY(-50%)'\r\n          }}\r\n        />\r\n        <CoverImgStyle alt=\"cover\" src={assetAndOwner.ownerIcon} />\r\n      </CardMediaStyle>\r\n\r\n      <Typography variant=\"subtitle1\" align=\"center\" sx={{ mt: 6 }}>\r\n        {shortenAddress(assetAndOwner.ownerAddress, 5)}\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary' }}>\r\n        Polygon\r\n      </Typography>\r\n\r\n      <Box sx={{ textAlign: 'center', mt: 2, mb: 2.5 }}>\r\n        <Tooltip title=\"PolygonScan\">\r\n          <IconButton\r\n            href={`https://polygonscan.com/address/${assetAndOwner.ownerAddress}`}\r\n            target=\"_blank\"\r\n          >\r\n            <Box component=\"img\" src=\"./static/icons/shared/polygon.svg\" sx={{ height: 24 }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <Grid container sx={{ py: 3 }}>\r\n        {InfoItem('Total Minted NFT', assetAndOwner.balance)}\r\n        {InfoItem('Total rocket', '0')}\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n","// material\r\nimport { Grid, Stack } from '@mui/material';\r\n//\r\nimport AssetDetails from './AssetDetails';\r\nimport AssetCard from './AssetCard';\r\nimport AboutOwner from './AboutOwner';\r\n// import ProfileSocialInfo from './ProfileSocialInfo';\r\nimport { AssetAndOwnerType } from '../../../pages/AssetViewer';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Asset({ assetAndOwner }: { assetAndOwner: AssetAndOwnerType }) {\r\n  console.log(assetAndOwner);\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} md={4}>\r\n        <Stack spacing={3}>\r\n          <AboutOwner assetAndOwner={assetAndOwner} />\r\n          <AssetDetails assetAndOwner={assetAndOwner} />\r\n          {/* <ProfileSocialInfo profile={myProfile} /> */}\r\n        </Stack>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={8}>\r\n        <Stack spacing={3}>\r\n          <AssetCard assetAndOwner={assetAndOwner} />\r\n        </Stack>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material\r\nimport { Box, Container } from '@mui/material';\r\n\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\nimport { useParams } from 'react-router-dom';\r\n// components\r\nimport Page from '../components/Page';\r\n\r\nimport { Asset } from 'components/_dashboard/assetViewer';\r\n\r\nimport Identicons from '@nimiq/identicons';\r\nimport { IPFS_GATEWAY_FOR_FETCHING_DATA, POLYGON_RPC } from 'assets/COMMON_VARIABLES';\r\nimport { contractAddress } from 'utils/contractAddress';\r\nimport { ethers } from 'ethers';\r\nimport { ABI } from 'utils/abi';\r\nimport axios from 'axios';\r\nIdenticons.svgPath = './static/identicons.min.svg';\r\n\r\nexport type AssetAndOwnerType = {\r\n  ownerAddress: string;\r\n  contractAddress: string;\r\n  tokenId: string;\r\n  ownerIcon: string;\r\n  balance: string;\r\n  imageUrl: string;\r\n  name: string;\r\n  description: string;\r\n};\r\nconst initAssetAndOwner: AssetAndOwnerType = {\r\n  ownerAddress: '',\r\n  contractAddress: '',\r\n  tokenId: '',\r\n  ownerIcon: '',\r\n  balance: '0',\r\n  imageUrl: '',\r\n  name: '',\r\n  description: ''\r\n};\r\n\r\nconst ipfsUriToCid = (ipfsUrl: string) => {\r\n  const CidSearch = ipfsUrl.match(/(Qm[\\w]+)/);\r\n  if (CidSearch) {\r\n    return CidSearch[1];\r\n  } else return null;\r\n};\r\n\r\nexport default function AssetViewer() {\r\n  const { themeStretch } = useSettings();\r\n  let networkRPC = '';\r\n\r\n  const { network, contract, tokenId } = useParams();\r\n  switch (network) {\r\n    case 'polygon':\r\n      networkRPC = POLYGON_RPC[0];\r\n      break;\r\n    default:\r\n      networkRPC = '0';\r\n  }\r\n\r\n  const [assetAndOwner, setAssetAndOwner] = useState<AssetAndOwnerType>(initAssetAndOwner);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const provider = new ethers.providers.JsonRpcProvider(networkRPC);\r\n      const contractEthersJs = new ethers.Contract(contractAddress, ABI, provider);\r\n\r\n      const ownerOfNFT = await contractEthersJs.ownerOf(tokenId);\r\n      const balanceOfOwner = (await contractEthersJs.balanceOf(ownerOfNFT)).toString();\r\n      const tokenURI = await contractEthersJs.tokenURI(tokenId);\r\n\r\n      const tokenURICid = ipfsUriToCid(tokenURI);\r\n\r\n      Identicons.toDataUrl(ownerOfNFT).then((img: string) => {\r\n        setAssetAndOwner((assetAndOwner) => ({\r\n          ...assetAndOwner,\r\n          ownerIcon: img,\r\n          balance: balanceOfOwner,\r\n          ownerAddress: ownerOfNFT,\r\n          tokenId: tokenId || '',\r\n          contractAddress\r\n        }));\r\n      });\r\n\r\n      if (tokenURICid) {\r\n        const tokenURIHttp = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${tokenURICid}`;\r\n        axios.get(tokenURIHttp).then((response) => {\r\n          const name = response.data.name || '';\r\n          const description = response.data.description || '';\r\n\r\n          if (response.data && response.data.image) {\r\n            const imageCid = ipfsUriToCid(response.data.image);\r\n            if (imageCid) {\r\n              const imageUrl = `${IPFS_GATEWAY_FOR_FETCHING_DATA[0]}/${imageCid}`;\r\n              setAssetAndOwner((assetAndOwner) => ({\r\n                ...assetAndOwner,\r\n                imageUrl,\r\n                name,\r\n                description\r\n              }));\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log(balanceOfOwner);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title=\"Asset Viewer\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Box>\r\n          <Asset assetAndOwner={assetAndOwner} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\nimport { forwardRef, ReactNode } from 'react';\n// material\nimport { Box, BoxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface PageProps extends BoxProps {\n  children: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nexport default Page;\n","export const contractAddress: string = '0xa0Afb3513B99E1b099CE9F3C007eE937B04e7870';\r\n","export const ABI: any = [\r\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'approved',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'operator',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bool',\r\n        name: 'approved',\r\n        type: 'bool'\r\n      }\r\n    ],\r\n    name: 'ApprovalForAll',\r\n    type: 'event'\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address'\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256'\r\n      }\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'approve',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\r\n    name: 'balanceOf',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getApproved',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getDataIdOnchain',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getDataRegisterProof',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'owner', type: 'address' },\r\n      { internalType: 'address', name: 'operator', type: 'address' }\r\n    ],\r\n    name: 'isApprovedForAll',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'receiver', type: 'address' },\r\n      { internalType: 'string', name: 'tokenURIdata', type: 'string' },\r\n      { internalType: 'string', name: 'dataIdOnchain', type: 'string' },\r\n      { internalType: 'string', name: 'dataRegisterProof', type: 'string' }\r\n    ],\r\n    name: 'mintDataNTF',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'ownerOf',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_data', type: 'bytes' }\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'operator', type: 'address' },\r\n      { internalType: 'bool', name: 'approved', type: 'bool' }\r\n    ],\r\n    name: 'setApprovalForAll',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],\r\n    name: 'supportsInterface',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],\r\n    name: 'tokenByIndex',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'owner', type: 'address' },\r\n      { internalType: 'uint256', name: 'index', type: 'uint256' }\r\n    ],\r\n    name: 'tokenOfOwnerByIndex',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'tokenURI',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function'\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' }\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function'\r\n  }\r\n];\r\n","import { replace } from 'lodash';\r\nimport numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fCurrency(number: string | number) {\r\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\r\n}\r\n\r\nexport function fPercent(number: number) {\r\n  return numeral(number / 100).format('0.0%');\r\n}\r\n\r\nexport function fNumber(number: string | number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fShortenNumber(number: string | number) {\r\n  return replace(numeral(number).format('0.00a'), '.00', '');\r\n}\r\n\r\nexport function fData(number: string | number) {\r\n  return numeral(number).format('0.0 b');\r\n}\r\n"],"sourceRoot":""}