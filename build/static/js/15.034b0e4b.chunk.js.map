{"version":3,"sources":["components/_dashboard/funBox/FaucetHookForm.tsx","pages/CruFaucet.tsx","components/Page.tsx"],"names":["FormSchema","Yup","shape","address","required","min","max","token","tweetUrl","url","FaucetHookForm","setTweetId","setResponse","defaultValues","useForm","mode","resolver","yupResolver","reset","watch","control","handleSubmit","formState","isSubmitting","isDirty","watchingUrl","useEffect","searchTweetId","match","onSubmit","data","a","console","log","axios","post","result","Stack","spacing","name","render","field","error","fieldState","TextField","label","Boolean","helperText","message","LoadingButton","fullWidth","color","size","type","variant","loading","disabled","CountdownStyle","styled","display","justifyContent","SeparatorStyle","Typography","theme","margin","breakpoints","up","CountDown","timeLeftInSeconds","days","Math","floor","hours","minutes","seconds","sx","CruFaucet","themeStretch","useSettings","useState","tweetId","statusCode","txHash","response","dedicatedTimeleft","setDedicatedTimeleft","Page","title","Container","maxWidth","Grid","container","item","xs","sm","Card","position","CardHeader","CardContent","mt","Alert","severity","action","Button","href","target","align","forwardRef","ref","children","other"],"mappings":"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","file":"static/js/15.034b0e4b.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n// material\r\nimport { Stack, TextField } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { ResponseFaucetRequest } from '../../../pages/CruFaucet';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype FormValuesProps = {\r\n  address: string;\r\n  token: string;\r\n  tweetUrl: string;\r\n};\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  address: Yup.string()\r\n    .required('Address is required')\r\n    .min(6, 'Mininum 6 characters')\r\n    .max(50, 'Maximum 50 characters'),\r\n  token: Yup.string(),\r\n  tweetUrl: Yup.string().required('Tweet URL is required').url('Not an URL')\r\n});\r\n\r\ntype FaucetHookFormProps = {\r\n  token: string;\r\n  setTweetId: React.Dispatch<React.SetStateAction<string>>;\r\n  setResponse: React.Dispatch<React.SetStateAction<ResponseFaucetRequest>>;\r\n};\r\n\r\nexport default function FaucetHookForm({ token, setTweetId, setResponse }: FaucetHookFormProps) {\r\n  const defaultValues = {\r\n    address: '',\r\n    token,\r\n    tweetUrl: ''\r\n  };\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    handleSubmit,\r\n    formState: { isSubmitting, isDirty }\r\n  } = useForm<FormValuesProps>({\r\n    mode: 'onTouched',\r\n    resolver: yupResolver(FormSchema),\r\n    defaultValues\r\n  });\r\n\r\n  const watchingUrl = watch('tweetUrl');\r\n\r\n  useEffect(() => {\r\n    const tweetIdReg = /\\/status\\/([0-9]+)/;\r\n    const searchTweetId = watchingUrl.match(tweetIdReg);\r\n\r\n    if (searchTweetId && searchTweetId[1]) {\r\n      setTweetId(searchTweetId[1]);\r\n    }\r\n  }, [watchingUrl]);\r\n\r\n  const onSubmit = async (data: FormValuesProps) => {\r\n    console.log(data);\r\n    // await new Promise((resolve) => setTimeout(resolve, 500));\r\n    const result = await axios.post('https://token-faucet.herokuapp.com/get-faucet', data);\r\n    setResponse(result.data);\r\n    console.log(result.data);\r\n\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3}>\r\n          <Controller\r\n            name=\"address\"\r\n            control={control}\r\n            render={({ field, fieldState: { error } }) => (\r\n              <TextField\r\n                {...field}\r\n                label=\"Address\"\r\n                error={Boolean(error)}\r\n                helperText={error?.message}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Controller\r\n            name=\"tweetUrl\"\r\n            control={control}\r\n            render={({ field, fieldState: { error } }) => (\r\n              <TextField\r\n                {...field}\r\n                label=\"Tweet URL\"\r\n                error={Boolean(error)}\r\n                helperText={error?.message}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <LoadingButton\r\n            fullWidth\r\n            color=\"info\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            loading={isSubmitting}\r\n            disabled={!isDirty}\r\n          >\r\n            Get Faucet\r\n          </LoadingButton>\r\n        </Stack>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n// material\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Container,\r\n  Grid,\r\n  Stack,\r\n  Alert,\r\n  Button,\r\n  Typography\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from '../components/Page';\r\nimport FaucetHookForm from 'components/_dashboard/funBox/FaucetHookForm';\r\nimport { Tweet } from 'react-twitter-widgets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport interface ResponseFaucetRequest {\r\n  message: string;\r\n  statusCode: number;\r\n  timeLeftInSeconds: number | null;\r\n  txHash: string | null;\r\n}\r\n\r\nconst CountdownStyle = styled('div')({\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n});\r\n\r\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\r\n  margin: theme.spacing(0, 1),\r\n  [theme.breakpoints.up('sm')]: {\r\n    margin: theme.spacing(0, 2.5)\r\n  }\r\n}));\r\n\r\nfunction CountDown({ timeLeftInSeconds }: { timeLeftInSeconds: number }) {\r\n  const days = Math.floor(timeLeftInSeconds / (3600 * 24));\r\n  const hours = Math.floor((timeLeftInSeconds % (3600 * 24)) / 3600);\r\n  const minutes = Math.floor((timeLeftInSeconds % 3600) / 60);\r\n  const seconds = Math.floor(timeLeftInSeconds % 60);\r\n\r\n  return (\r\n    <CountdownStyle>\r\n      <div>\r\n        <Typography variant=\"h3\">{days}</Typography>\r\n        <Typography sx={{ color: 'text.secondary' }}>Days</Typography>\r\n      </div>\r\n\r\n      <SeparatorStyle variant=\"h3\">:</SeparatorStyle>\r\n\r\n      <div>\r\n        <Typography variant=\"h3\">{hours}</Typography>\r\n        <Typography sx={{ color: 'text.secondary' }}>Hours</Typography>\r\n      </div>\r\n\r\n      <SeparatorStyle variant=\"h3\">:</SeparatorStyle>\r\n\r\n      <div>\r\n        <Typography variant=\"h3\">{minutes}</Typography>\r\n        <Typography sx={{ color: 'text.secondary' }}>Minutes</Typography>\r\n      </div>\r\n\r\n      <SeparatorStyle variant=\"h3\">:</SeparatorStyle>\r\n\r\n      <div>\r\n        <Typography variant=\"h3\">{seconds}</Typography>\r\n        <Typography sx={{ color: 'text.secondary' }}>Seconds</Typography>\r\n      </div>\r\n    </CountdownStyle>\r\n  );\r\n}\r\n\r\nexport default function CruFaucet() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const [tweetId, setTweetId] = useState('');\r\n\r\n  const [response, setResponse] = useState<ResponseFaucetRequest>({\r\n    message: '',\r\n    statusCode: -1,\r\n    timeLeftInSeconds: null,\r\n    txHash: null\r\n  });\r\n\r\n  const [dedicatedTimeleft, setDedicatedTimeleft] = useState(0);\r\n\r\n  useEffect(() => {\r\n    console.log(`timeLeftInSeconds ${response.timeLeftInSeconds}`);\r\n    if (response.timeLeftInSeconds !== null) {\r\n      setDedicatedTimeleft(response.timeLeftInSeconds);\r\n    }\r\n  }, [response.timeLeftInSeconds]);\r\n\r\n  return (\r\n    <Page title=\"Learn More\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Grid container spacing={5} justifyContent=\"center\">\r\n          <Grid item xs={12} sm={6}>\r\n            <Card sx={{ position: 'static' }}>\r\n              <CardHeader title=\"$CRU faucet\" />\r\n              <CardContent>\r\n                <FaucetHookForm setTweetId={setTweetId} setResponse={setResponse} token=\"CRU\" />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            sx={{ display: tweetId !== '' || response.statusCode !== -1 ? 'block' : 'none' }}\r\n          >\r\n            <Card sx={{ position: 'static' }}>\r\n              <CardHeader title=\"Status\" />\r\n              <CardContent>\r\n                <Stack sx={{ mt: '-10px' }}>\r\n                  <Stack sx={{ display: tweetId !== '' ? 'flex' : 'none' }}>\r\n                    <Tweet tweetId={tweetId} />\r\n                  </Stack>\r\n                  <Alert\r\n                    variant=\"outlined\"\r\n                    severity={response.statusCode === 0 ? 'success' : 'warning'}\r\n                    sx={{ display: response.statusCode === -1 ? 'none' : 'flex', mt: 1 }}\r\n                    action={\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        href={`https://crust.subscan.io/extrinsic/${response.txHash}`}\r\n                        target=\"_blank\"\r\n                        sx={{ display: response.statusCode === 0 ? 'flex' : 'none' }}\r\n                      >\r\n                        Subscan\r\n                      </Button>\r\n                    }\r\n                  >\r\n                    {response.message}\r\n                  </Alert>\r\n                  <Stack\r\n                    justifyContent=\"center\"\r\n                    sx={{ display: response.statusCode === 1 ? 'flex' : 'none', mt: 1 }}\r\n                  >\r\n                    <Typography variant=\"h3\" align=\"center\">\r\n                      Try again in\r\n                    </Typography>\r\n                    <CountDown timeLeftInSeconds={dedicatedTimeleft} />\r\n                  </Stack>\r\n                </Stack>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\nimport { forwardRef, ReactNode } from 'react';\n// material\nimport { Box, BoxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface PageProps extends BoxProps {\n  children: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nexport default Page;\n"],"sourceRoot":""}