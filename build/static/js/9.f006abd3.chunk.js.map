{"version":3,"sources":["pages/NftManager.tsx","components/Page.tsx","../node_modules/@iconify/icons-ant-design/instagram-filled.js","components/ComingSoon.tsx","hooks/useCountdown.ts"],"names":["PageFive","themeStretch","useSettings","useState","title","maxWidth","Page","forwardRef","ref","children","other","exports","__esModule","default","CountdownStyle","styled","display","justifyContent","SeparatorStyle","Typography","theme","margin","spacing","breakpoints","up","SOCIALS","name","icon","instagramFilled","width","height","color","linkedinFill","twitterFill","ComingSoon","countdown","date","days","hours","minutes","seconds","setCountdown","useEffect","interval","setInterval","setNewTime","clearInterval","startTime","endTime","Date","distanceToNow","valueOf","getDays","Math","floor","getHours","slice","getMinutes","getSeconds","toString","useCountdown","Box","sx","textAlign","variant","paragraph","my","mx","map","social","Tooltip"],"mappings":"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","file":"static/js/9.f006abd3.chunk.js","sourcesContent":["// material\r\nimport { useEffect, useState } from 'react';\r\nimport { Container, Typography, Button } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from '../components/Page';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport { ethers } from 'ethers';\r\nimport ComingSoon from 'components/ComingSoon';\r\n\r\n// ----------------------------------------------------------------------\r\nexport default function PageFive() {\r\n  const { themeStretch } = useSettings();\r\n  const [isMetamaskInstalled, setMetamask] = useState(true);\r\n  // WARNING: Use useSth to prevent re-create for each render\r\n  const detectProvider = async () => {\r\n    const provider = await detectEthereumProvider();\r\n    if (provider && provider.isMetaMask) {\r\n      // From now on, this should always be true:\r\n      // provider === window.ethereum\r\n\r\n      const chainId = await provider.request({\r\n        method: 'eth_chainId'\r\n      });\r\n      console.log(chainId);\r\n      if (parseInt(chainId, 16) === 137) {\r\n        const status = await provider.request({ method: 'eth_requestAccounts' });\r\n        console.log(status);\r\n        const providerEthers = new ethers.providers.Web3Provider(provider);\r\n        const signer = providerEthers.getSigner();\r\n        console.log(signer);\r\n        const add = await signer.getAddress();\r\n        console.log(add);\r\n        const si = await signer.signMessage(\r\n          ethers.utils.arrayify('0x5a292ff2e5E4caA4A441c8DB3f7cE065Ad4753Bf')\r\n        );\r\n        console.log(si);\r\n        // provider.on('accountsChanged', function (accounts: any) {\r\n        //   console.log(accounts);\r\n        //   // Time to reload your interface with accounts[0]!\r\n        // });\r\n      } else {\r\n        setMetamask(true);\r\n        console.log('Select Polygon');\r\n      }\r\n    } else {\r\n      setMetamask(false);\r\n      console.log('Please install MetaMask!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Page Five\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <ComingSoon />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\nimport { forwardRef, ReactNode } from 'react';\n// material\nimport { Box, BoxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface PageProps extends BoxProps {\n  children: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nexport default Page;\n","var data = {\n\t\"body\": \"<path d=\\\"M512 378.7c-73.4 0-133.3 59.9-133.3 133.3S438.6 645.3 512 645.3S645.3 585.4 645.3 512S585.4 378.7 512 378.7zM911.8 512c0-55.2.5-109.9-2.6-165c-3.1-64-17.7-120.8-64.5-167.6c-46.9-46.9-103.6-61.4-167.6-64.5c-55.2-3.1-109.9-2.6-165-2.6c-55.2 0-109.9-.5-165 2.6c-64 3.1-120.8 17.7-167.6 64.5C132.6 226.3 118.1 283 115 347c-3.1 55.2-2.6 109.9-2.6 165s-.5 109.9 2.6 165c3.1 64 17.7 120.8 64.5 167.6c46.9 46.9 103.6 61.4 167.6 64.5c55.2 3.1 109.9 2.6 165 2.6c55.2 0 109.9.5 165-2.6c64-3.1 120.8-17.7 167.6-64.5c46.9-46.9 61.4-103.6 64.5-167.6c3.2-55.1 2.6-109.8 2.6-165zM512 717.1c-113.5 0-205.1-91.6-205.1-205.1S398.5 306.9 512 306.9S717.1 398.5 717.1 512S625.5 717.1 512 717.1zm213.5-370.7c-26.5 0-47.9-21.4-47.9-47.9s21.4-47.9 47.9-47.9s47.9 21.4 47.9 47.9a47.84 47.84 0 0 1-47.9 47.9z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 1024,\n\t\"height\": 1024\n};\nexports.__esModule = true;\nexports.default = data;\n","// material\r\nimport { Container, Typography, Box, Tooltip } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from './Page';\r\nimport { styled } from '@mui/material/styles';\r\nimport useCountdown from '../hooks/useCountdown';\r\nimport { Icon } from '@iconify/react';\r\nimport { MIconButton } from './@material-extend';\r\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\r\nimport instagramFilled from '@iconify/icons-ant-design/instagram-filled';\r\n// ----------------------------------------------------------------------\r\nconst CountdownStyle = styled('div')({\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n});\r\n\r\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\r\n  margin: theme.spacing(0, 1),\r\n  [theme.breakpoints.up('sm')]: {\r\n    margin: theme.spacing(0, 2.5)\r\n  }\r\n}));\r\n\r\nconst SOCIALS = [\r\n  {\r\n    name: 'Instagram',\r\n    icon: <Icon icon={instagramFilled} width={24} height={24} color=\"#D7336D\" />\r\n  },\r\n  {\r\n    name: 'Linkedin',\r\n    icon: <Icon icon={linkedinFill} width={24} height={24} color=\"#006097\" />\r\n  },\r\n  {\r\n    name: 'Twitter',\r\n    icon: <Icon icon={twitterFill} width={24} height={24} color=\"#1C9CEA\" />\r\n  }\r\n];\r\n\r\nexport default function ComingSoon() {\r\n  const countdown = useCountdown(new Date('11/01/2021 21:30'));\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 480, margin: 'auto', textAlign: 'center' }}>\r\n      <Typography variant=\"h3\" paragraph sx={{ my: 5 }}>\r\n        Coming Soon!\r\n      </Typography>\r\n      <Typography sx={{ color: 'text.secondary' }}>\r\n        We are currently working hard on this page!\r\n      </Typography>\r\n\r\n      <CountdownStyle>\r\n        <div>\r\n          <Typography variant=\"h2\">{countdown.days}</Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Days</Typography>\r\n        </div>\r\n\r\n        <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n        <div>\r\n          <Typography variant=\"h2\">{countdown.hours}</Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Hours</Typography>\r\n        </div>\r\n\r\n        <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n        <div>\r\n          <Typography variant=\"h2\">{countdown.minutes}</Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Minutes</Typography>\r\n        </div>\r\n\r\n        <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n        <div>\r\n          <Typography variant=\"h2\">{countdown.seconds}</Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Seconds</Typography>\r\n        </div>\r\n      </CountdownStyle>\r\n\r\n      <Box sx={{ textAlign: 'center', '& > *': { mx: 1, my: 5 } }}>\r\n        {SOCIALS.map((social) => (\r\n          <Tooltip key={social.name} title={social.name}>\r\n            <MIconButton>{social.icon}</MIconButton>\r\n          </Tooltip>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useCountdown(date: Date) {\r\n  const [countdown, setCountdown] = useState({\r\n    days: '00',\r\n    hours: '00',\r\n    minutes: '00',\r\n    seconds: '00'\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setNewTime(), 1000);\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setNewTime = () => {\r\n    const startTime = date;\r\n    const endTime = new Date();\r\n    const distanceToNow = startTime.valueOf() - endTime.valueOf();\r\n\r\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\r\n\r\n    const getHours = `0${Math.floor(\r\n      (distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    )}`.slice(-2);\r\n\r\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\r\n\r\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\r\n\r\n    setCountdown({\r\n      days: getDays.toString() || '000',\r\n      hours: getHours || '000',\r\n      minutes: getMinutes || '000',\r\n      seconds: getSeconds || '000'\r\n    });\r\n  };\r\n\r\n  return countdown;\r\n}\r\n\r\n// Usage\r\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\r\n"],"sourceRoot":""}