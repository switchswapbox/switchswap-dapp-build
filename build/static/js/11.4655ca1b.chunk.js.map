{"version":3,"sources":["pages/NftManager.tsx","components/Page.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","components/ComingSoon.tsx","hooks/useCountdown.ts"],"names":["PageFive","themeStretch","useSettings","useState","title","maxWidth","Page","forwardRef","ref","children","other","target","property","receiver","Reflect","get","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","value","CountdownStyle","styled","display","justifyContent","SeparatorStyle","Typography","theme","margin","spacing","breakpoints","up","SOCIALS","name","icon","width","height","href","DISCORD","TELEGRAM","TWITTER","MEDIUM","ComingSoon","countdown","date","days","hours","minutes","seconds","setCountdown","useEffect","interval","setInterval","setNewTime","clearInterval","startTime","endTime","Date","distanceToNow","valueOf","getDays","Math","floor","getHours","slice","getMinutes","getSeconds","toString","useCountdown","Box","sx","textAlign","variant","paragraph","my","color","mx","map","social","Tooltip","onClick","window","open"],"mappings":"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","file":"static/js/11.4655ca1b.chunk.js","sourcesContent":["// material\r\nimport { useEffect, useState } from 'react';\r\nimport { Container, Typography, Button } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from '../components/Page';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport { ethers } from 'ethers';\r\nimport ComingSoon from 'components/ComingSoon';\r\n\r\n// ----------------------------------------------------------------------\r\nexport default function PageFive() {\r\n  const { themeStretch } = useSettings();\r\n  const [isMetamaskInstalled, setMetamask] = useState(true);\r\n  // WARNING: Use useSth to prevent re-create for each render\r\n  const detectProvider = async () => {\r\n    const provider = await detectEthereumProvider();\r\n    if (provider && provider.isMetaMask) {\r\n      // From now on, this should always be true:\r\n      // provider === window.ethereum\r\n\r\n      const chainId = await provider.request({\r\n        method: 'eth_chainId'\r\n      });\r\n      console.log(chainId);\r\n      if (parseInt(chainId, 16) === 137) {\r\n        const status = await provider.request({ method: 'eth_requestAccounts' });\r\n        console.log(status);\r\n        const providerEthers = new ethers.providers.Web3Provider(provider);\r\n        const signer = providerEthers.getSigner();\r\n        console.log(signer);\r\n        const add = await signer.getAddress();\r\n        console.log(add);\r\n        const si = await signer.signMessage(\r\n          ethers.utils.arrayify('0x5a292ff2e5E4caA4A441c8DB3f7cE065Ad4753Bf')\r\n        );\r\n        console.log(si);\r\n        // provider.on('accountsChanged', function (accounts: any) {\r\n        //   console.log(accounts);\r\n        //   // Time to reload your interface with accounts[0]!\r\n        // });\r\n      } else {\r\n        setMetamask(true);\r\n        console.log('Select Polygon');\r\n      }\r\n    } else {\r\n      setMetamask(false);\r\n      console.log('Please install MetaMask!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Page Five\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <ComingSoon />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\nimport { forwardRef, ReactNode } from 'react';\n// material\nimport { Box, BoxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface PageProps extends BoxProps {\n  children: ReactNode;\n  title?: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, PageProps>(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nexport default Page;\n","import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","// material\r\nimport { Container, Typography, Box, Tooltip } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from './Page';\r\nimport { styled } from '@mui/material/styles';\r\nimport useCountdown from '../hooks/useCountdown';\r\nimport { Icon } from '@iconify/react';\r\nimport { MIconButton } from './@material-extend';\r\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\r\nimport instagramFilled from '@iconify/icons-ant-design/instagram-filled';\r\nimport { TELEGRAM, TWITTER, DISCORD, MEDIUM } from '../assets/COMMON_VARIABLES';\r\n// ----------------------------------------------------------------------\r\nconst CountdownStyle = styled('div')({\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n});\r\n\r\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\r\n  margin: theme.spacing(0, 1),\r\n  [theme.breakpoints.up('sm')]: {\r\n    margin: theme.spacing(0, 2.5)\r\n  }\r\n}));\r\n\r\nconst SOCIALS = [\r\n  {\r\n    name: 'Discord',\r\n    icon: <Icon icon=\"bi:discord\" width={24} height={24} />,\r\n    href: DISCORD\r\n  },\r\n  {\r\n    name: 'Telegram',\r\n    icon: <Icon icon=\"uim:telegram-alt\" width={24} height={24} />,\r\n    href: TELEGRAM\r\n  },\r\n  {\r\n    name: 'Twitter',\r\n    icon: <Icon icon=\"akar-icons:twitter-fill\" width={24} height={24} />,\r\n    href: TWITTER\r\n  },\r\n  {\r\n    name: 'Medium',\r\n    icon: <Icon icon=\"ant-design:medium-square-filled\" width={24} height={24} />,\r\n    href: MEDIUM\r\n  }\r\n];\r\n\r\nexport default function ComingSoon() {\r\n  const countdown = useCountdown(new Date('11/01/2021 21:30'));\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 480, margin: 'auto', textAlign: 'center' }}>\r\n      <Typography variant=\"h3\" paragraph sx={{ my: 5 }}>\r\n        Coming Soon!\r\n      </Typography>\r\n      <Typography sx={{ color: 'text.secondary' }}>\r\n        We are currently working hard on this page!\r\n      </Typography>\r\n\r\n      <CountdownStyle>\r\n        <div>\r\n          <Typography variant=\"h2\">{countdown.days}</Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Days</Typography>\r\n        </div>\r\n\r\n        <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n        <div>\r\n          <Typography variant=\"h2\">{countdown.hours}</Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Hours</Typography>\r\n        </div>\r\n\r\n        <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n        <div>\r\n          <Typography variant=\"h2\">{countdown.minutes}</Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Minutes</Typography>\r\n        </div>\r\n\r\n        <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n        <div>\r\n          <Typography variant=\"h2\">{countdown.seconds}</Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>Seconds</Typography>\r\n        </div>\r\n      </CountdownStyle>\r\n\r\n      <Box sx={{ textAlign: 'center', '& > *': { mx: 1, my: 5 } }}>\r\n        {SOCIALS.map((social) => (\r\n          <Tooltip key={social.name} title={social.name}>\r\n            <MIconButton onClick={() => window.open(social.href, '_blank')}>\r\n              {social.icon}\r\n            </MIconButton>\r\n          </Tooltip>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useCountdown(date: Date) {\r\n  const [countdown, setCountdown] = useState({\r\n    days: '00',\r\n    hours: '00',\r\n    minutes: '00',\r\n    seconds: '00'\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setNewTime(), 1000);\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setNewTime = () => {\r\n    const startTime = date;\r\n    const endTime = new Date();\r\n    const distanceToNow = startTime.valueOf() - endTime.valueOf();\r\n\r\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\r\n\r\n    const getHours = `0${Math.floor(\r\n      (distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    )}`.slice(-2);\r\n\r\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\r\n\r\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\r\n\r\n    setCountdown({\r\n      days: getDays.toString() || '000',\r\n      hours: getHours || '000',\r\n      minutes: getMinutes || '000',\r\n      seconds: getSeconds || '000'\r\n    });\r\n  };\r\n\r\n  return countdown;\r\n}\r\n\r\n// Usage\r\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\r\n"],"sourceRoot":""}